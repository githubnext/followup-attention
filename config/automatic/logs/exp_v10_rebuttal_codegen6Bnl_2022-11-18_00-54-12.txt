Using config file information.
Some weights of the model checkpoint at /mnt/huggingface_models/Salesforce_codegen-6B-nl/codegen-6B-nl were not used when initializing CodeGenForCausalLM: ['transformer.h.15.attn.causal_mask', 'transformer.h.4.attn.causal_mask', 'transformer.h.24.attn.causal_mask', 'transformer.h.27.attn.causal_mask', 'transformer.h.6.attn.causal_mask', 'transformer.h.1.attn.causal_mask', 'transformer.h.0.attn.causal_mask', 'transformer.h.31.attn.causal_mask', 'transformer.h.13.attn.causal_mask', 'transformer.h.21.attn.causal_mask', 'transformer.h.32.attn.causal_mask', 'transformer.h.17.attn.causal_mask', 'transformer.h.9.attn.causal_mask', 'transformer.h.12.attn.causal_mask', 'transformer.h.20.attn.causal_mask', 'transformer.h.30.attn.causal_mask', 'transformer.h.3.attn.causal_mask', 'transformer.h.16.attn.causal_mask', 'transformer.h.7.attn.causal_mask', 'transformer.h.11.attn.causal_mask', 'transformer.h.22.attn.causal_mask', 'transformer.h.5.attn.causal_mask', 'transformer.h.18.attn.causal_mask', 'transformer.h.2.attn.causal_mask', 'transformer.h.10.attn.causal_mask', 'transformer.h.8.attn.causal_mask', 'transformer.h.23.attn.causal_mask', 'transformer.h.26.attn.causal_mask', 'transformer.h.29.attn.causal_mask', 'transformer.h.19.attn.causal_mask', 'transformer.h.28.attn.causal_mask', 'transformer.h.25.attn.causal_mask', 'transformer.h.14.attn.causal_mask']
- This IS expected if you are initializing CodeGenForCausalLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CodeGenForCausalLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Before calling model.eval()
After calling model.parallelize()
  0%|                                                                                                          | 0/45 [00:00<?, ?it/s]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/
<|endoftext|>
Time taken to predict Nqueens_Q1.cpp: 3.098637819290161 seconds
Saving attention matrix for Nqueens_Q1.cpp
Time taken to store attention matrix Nqueens_Q1.cpp: 485.37136697769165 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/
<|endoftext|>
Time taken to predict Nqueens_Q1.cpp: 1.6487939357757568 seconds
Saving attention matrix for Nqueens_Q1.cpp
Time taken to store attention matrix Nqueens_Q1.cpp: 634.1566009521484 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `false`
*/
<|endoftext|>
Time taken to predict Nqueens_Q1.cpp: 1.6158738136291504 seconds
Saving attention matrix for Nqueens_Q1.cpp
Time taken to store attention matrix Nqueens_Q1.cpp: 482.9000883102417 seconds
  2%|██                                                                                           | 1/45 [27:01<19:49:15, 1621.72s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/

*/

/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
Time taken to predict Nqueens_Q1.cs: 9.889373779296875 seconds
Saving attention matrix for Nqueens_Q1.cs
Time taken to store attention matrix Nqueens_Q1.cs: 925.924516916275 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/

*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `false`
*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `false`
*/


Time taken to predict Nqueens_Q1.cs: 10.128313302993774 seconds
Saving attention matrix for Nqueens_Q1.cs
Time taken to store attention matrix Nqueens_Q1.cs: 857.1800231933594 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `false`
*/

*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/

/*
# Question: What does `solveNQ(-13)` return?

# Answer: `true`
*/


Time taken to predict Nqueens_Q1.cs: 10.01375937461853 seconds
Saving attention matrix for Nqueens_Q1.cs
Time taken to store attention matrix Nqueens_Q1.cs: 1043.8314349651337 seconds
  4%|████                                                                                       | 2/45 [1:18:09<29:31:48, 2472.29s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What does `solveNQ(-13)` return?

# Answer

# Solution does not exist

# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


def printSolution(board):
    for i in range(N):
        for j in range(N):
     
Time taken to predict Nqueens_Q1.py: 8.40209698677063 seconds
Saving attention matrix for Nqueens_Q1.py
Time taken to store attention matrix Nqueens_Q1.py: 505.6967794895172 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What does `solveNQ(-13)` return?

# Answer
# False

# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
 
Time taken to predict Nqueens_Q1.py: 8.366207122802734 seconds
Saving attention matrix for Nqueens_Q1.py
Time taken to store attention matrix Nqueens_Q1.py: 516.5410418510437 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What does `solveNQ(-13)` return?

# Answer
# Solution does not exist

# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N
Time taken to predict Nqueens_Q1.py: 8.356061935424805 seconds
Saving attention matrix for Nqueens_Q1.py
Time taken to store attention matrix Nqueens_Q1.py: 658.7866904735565 seconds
  7%|██████                                                                                     | 3/45 [1:48:06<25:14:42, 2163.88s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.cpp: 8.544070720672607 seconds
Saving attention matrix for Nqueens_Q2.cpp
Time taken to store attention matrix Nqueens_Q2.cpp: 564.8980214595795 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.cpp: 8.476226091384888 seconds
Saving attention matrix for Nqueens_Q2.cpp
Time taken to store attention matrix Nqueens_Q2.cpp: 982.9859900474548 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.cpp: 8.767965078353882 seconds
Saving attention matrix for Nqueens_Q2.cpp
Time taken to store attention matrix Nqueens_Q2.cpp: 975.0181925296783 seconds
  9%|████████                                                                                   | 4/45 [2:32:18<26:50:23, 2356.68s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}


/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.cs: 9.8095703125 seconds
Saving attention matrix for Nqueens_Q2.cs
Time taken to store attention matrix Nqueens_Q2.cs: 1058.6622173786163 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}


/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#                                                                                                  
Time taken to predict Nqueens_Q2.cs: 10.224298000335693 seconds
Saving attention matrix for Nqueens_Q2.cs
Time taken to store attention matrix Nqueens_Q2.cs: 1197.7401111125946 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}


/*
# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.cs: 9.759361267089844 seconds
Saving attention matrix for Nqueens_Q2.cs
Time taken to store attention matrix Nqueens_Q2.cs: 769.817108631134 seconds
 11%|██████████                                                                                 | 5/45 [3:26:26<29:45:16, 2677.91s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.py: 8.302721977233887 seconds
Saving attention matrix for Nqueens_Q2.py
Time taken to store attention matrix Nqueens_Q2.py: 354.9542872905731 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.py: 8.282350778579712 seconds
Saving attention matrix for Nqueens_Q2.py
Time taken to store attention matrix Nqueens_Q2.py: 327.2418484687805 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: What are valid dimensions and values for the array `board`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q2.py: 8.239564657211304 seconds
Saving attention matrix for Nqueens_Q2.py
Time taken to store attention matrix Nqueens_Q2.py: 330.70880031585693 seconds
 13%|████████████▏                                                                              | 6/45 [3:45:13<23:17:58, 2150.72s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following problem.

# The algorithm below solves the following
Time taken to predict Nqueens_Q3.cpp: 8.57762861251831 seconds
Saving attention matrix for Nqueens_Q3.cpp
Time taken to store attention matrix Nqueens_Q3.cpp: 494.9788887500763 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm above is a depth-first search.
# Each time it visits a node, it has to check if it is a solution.
# If it is a solution, it has to check if it is a solution for the next level.
# If it is a solution for the next level, it has to check if it is a solution for the next level.
# If it is a
Time taken to predict Nqueens_Q3.cpp: 8.469285011291504 seconds
Saving attention matrix for Nqueens_Q3.cpp
Time taken to store attention matrix Nqueens_Q3.cpp: 491.5253767967224 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
            cout << " " << board[i][j] << " ";
        printf("\n");
    }
}

bool isSafe(int board[N][N], int row, int col)
{
    int i, j;

    for (i = 0; i < col; i++)
        if (board[row][i])
            return false;

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;

    for (i = row, j = col; j >= 0 && i < N; i++, j--)
        if (board[i][j])
            return false;

    return true;
}

bool solveNQUtil(int board[N][N], int col)
{
    if (col >= N)
        return true;

    for (int i = 0; i < N; i++)
    {
        if (isSafe(board, i, col))
        {
            board[i][col] = 1;

            if (solveNQUtil(board, col + 1))
                return true;

            board[i][col] = 0;
        }
    }

    return false;
}

bool solveNQ()
{
    int board[N][N] = {{0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0},
                       {0, 0, 0, 0}};

    if (solveNQUtil(board, 0) == false)
    {
        cout << "Solution does not exist";
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm below solves the following problem.
*/


#include <bits/stdc++.h>
#define N 4
using namespace std;

void printSolution(int board[N][N])
{
    for (int i = 0; i < N; i++)
    {
        for (int j =
Time taken to predict Nqueens_Q3.cpp: 8.453517436981201 seconds
Saving attention matrix for Nqueens_Q3.cpp
Time taken to store attention matrix Nqueens_Q3.cpp: 640.1021065711975 seconds
 16%|██████████████▏                                                                            | 7/45 [4:14:32<21:21:00, 2022.64s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer:
#
#                                                                                                
Time taken to predict Nqueens_Q3.cs: 9.891601324081421 seconds
Saving attention matrix for Nqueens_Q3.cs
Time taken to store attention matrix Nqueens_Q3.cs: 1596.982836008072 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm above is a depth-first search.
# It is a breadth-first search if we consider the search tree.
# The search tree is a binary tree.
# The search tree has a depth of `n`.
# Therefore, the search tree has a height of `n`.
# The height of a binary tree is the number of nodes in the tree.
# Therefore,
Time taken to predict Nqueens_Q3.cs: 9.760049104690552 seconds
Saving attention matrix for Nqueens_Q3.cs
Time taken to store attention matrix Nqueens_Q3.cs: 1073.3562920093536 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [,]board)
    {
        for (int i = 0; i < N; i++)
        {
            for (int j = 0; j < N; j++)
                Console.Write(" " + board[i, j]
                                + " ");
            Console.WriteLine();
        }
    }

    bool isSafe(int [,]board, int row, int col)
    {
        int i, j;

        for (i = 0; i < col; i++)
            if (board[row,i] == 1)
                return false;

        for (i = row, j = col; i >= 0 &&
            j >= 0; i--, j--)
            if (board[i,j] == 1)
                return false;

        for (i = row, j = col; j >= 0 &&
                    i < N; i++, j--)
            if (board[i, j] == 1)
                return false;

        return true;
    }

    bool solveNQUtil(int [,]board, int col)
    {
        if (col >= N)
            return true;

        for (int i = 0; i < N; i++)
        {
            if (isSafe(board, i, col))
            {
                board[i, col] = 1;

                if (solveNQUtil(board, col + 1) == true)
                    return true;

                board[i, col] = 0;
            }
        }

        return false;
    }

    bool solveNQ()
    {
        int [,]board = {{ 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 },
                        { 0, 0, 0, 0 }};

        if (solveNQUtil(board, 0) == false)
        {
            Console.Write("Solution does not exist");
            return false;
        }

        printSolution(board);
        return true;
    }

    public static void Main(String []args)
    {
        GFG Queen = new GFG();
        Queen.solveNQ();
    }
}

/*
# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`
*/

*/

/*
# The algorithm below solves the following problem.

# The problem is to place n queens on an n x n chessboard such that no two queens
# attack each other.

# The algorithm below solves the following problem.
*/


using System;

class GFG
{
    readonly int N = 4;

    void printSolution(int [
Time taken to predict Nqueens_Q3.cs: 9.777047395706177 seconds
Saving attention matrix for Nqueens_Q3.cs
Time taken to store attention matrix Nqueens_Q3.cs: 1495.9914045333862 seconds
 18%|████████████████▏                                                                          | 8/45 [5:27:40<28:31:46, 2775.86s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm above is a depth-first search.

# The search tree is a binary tree.

# The search tree has a height of `log_2(n)`.

# The search tree has `n` nodes.

# The search tree has a depth of `log_2(n)`.

# Therefore, the search tree has a depth of `log
Time taken to predict Nqueens_Q3.py: 8.23650574684143 seconds
Saving attention matrix for Nqueens_Q3.py
Time taken to store attention matrix Nqueens_Q3.py: 653.6167271137238 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm above is a depth-first search.

# The search tree is a binary tree, and the depth of the tree is `O(log(n))`.

# The search tree has `n` nodes, and each node has `O(log(n))` children.

# Therefore, the total number of nodes is `O(n log(n))`.

Time taken to predict Nqueens_Q3.py: 8.31845998764038 seconds
Saving attention matrix for Nqueens_Q3.py
Time taken to store attention matrix Nqueens_Q3.py: 636.1878252029419 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************#

# The n-queens puzzle is the problem of placing n queens on an n x n chessboard

# such that no two queens attack each other.

# The algorithm below solves the problem just mentioned.


global N
N = 4


def printSolution(board):
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()


def isSafe(board, row, col):

    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    for i, j in zip(range(row, N, 1),
                    range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solveNQUtil(board, col):

    if col >= N:
        return True

    for i in range(N):

        if isSafe(board, i, col):

            board[i][col] = 1

            if solveNQUtil(board, col + 1) == True:
                return True

            board[i][col] = 0

    return False


def solveNQ():
    board = [[0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0],
             [0, 0, 0, 0]]

    if solveNQUtil(board, 0) == False:
        print("Solution does not exist")
        return False

    printSolution(board)
    return True


solveNQ()


# Question: How would you expect the run time of `solveNQ(n)` to scale with `n`?

# Answer: `O(n^2)`

# Explanation:

# The algorithm above solves the problem just mentioned.

# The algorithm works by recursively solving the problem for smaller and smaller

# subproblems.

# The algorithm is guaranteed to find a solution if one exists.

# The algorithm is not guaranteed to find a solution if one does not exist.

# The algorithm is not guaranteed to terminate.

# The algorithm is
Time taken to predict Nqueens_Q3.py: 8.321967840194702 seconds
Saving attention matrix for Nqueens_Q3.py
Time taken to store attention matrix Nqueens_Q3.py: 588.8028628826141 seconds
 20%|██████████████████▏                                                                        | 9/45 [6:00:53<25:18:38, 2531.07s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer:

# 1. First, the algorithm moves the smallest disk from the starting rod to the

#                                                                              
Time taken to predict hannoi_Q1.cpp: 7.808324575424194 seconds
Saving attention matrix for hannoi_Q1.cpp
Time taken to store attention matrix hannoi_Q1.cpp: 161.28789901733398 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer:

# 1. Move the smallest disk from the starting rod to the aux rod.

# 2. Move the second smallest disk from the aux rod to the aux rod.

# 3. Move the third smallest disk from the aux rod to the aux rod.

# 4. Move the fourth smallest disk from the aux rod to the aux rod.

# 5. Move the second largest disk from the aux rod to the aux rod.

# 6. Move
Time taken to predict hannoi_Q1.cpp: 7.6979734897613525 seconds
Saving attention matrix for hannoi_Q1.cpp
Time taken to store attention matrix hannoi_Q1.cpp: 169.336101770401 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: It uses a stack to keep track of the disks that are on the rods.

# The algorithm starts by placing the first disk on the starting rod.

# Then it moves the disk from the starting rod to the aux rod.

# Then it moves the disk from the aux rod to the ending rod.

# Finally it moves the disk from the ending rod to the aux rod.

# The algorithm then repeats the process for the next disk.

#
Time taken to predict hannoi_Q1.cpp: 7.7374045848846436 seconds
Saving attention matrix for hannoi_Q1.cpp
Time taken to store attention matrix hannoi_Q1.cpp: 170.51698350906372 seconds
 22%|████████████████████                                                                      | 10/45 [6:10:37<18:45:40, 1929.74s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: The algorithm moves the disk from the starting rod to the

# auxiliary rod and then from the auxiliary rod to the ending rod.

# The algorithm is recursive.

# The algorithm is O(n^2).

# The algorithm is not optimal.

# The algorithm is not optimal.

# The algorithm is not optimal.

# The algorithm is not optimal.

# The algorithm is not optimal.

# The algorithm is not optimal
Time taken to predict hannoi_Q1.cs: 7.7804319858551025 seconds
Saving attention matrix for hannoi_Q1.cs
Time taken to store attention matrix hannoi_Q1.cs: 221.7066798210144 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: The algorithm moves the disk from the starting rod to the rod

# that is the smallest number of rods away from the starting rod.

# For example, if the starting rod is A and the ending rod is B, then the

# algorithm moves the disk from A to B.

# If the starting rod is A and the ending rod is C, then the algorithm

# moves the disk from A to C.

# If the starting rod is A
Time taken to predict hannoi_Q1.cs: 7.764098405838013 seconds
Saving attention matrix for hannoi_Q1.cs
Time taken to store attention matrix hannoi_Q1.cs: 308.62770533561707 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: It uses a stack to keep track of the disks that are on the rods.

# The stack is initialized with the disk on the starting rod.

# When the algorithm moves a disk from the starting rod to the ending rod,

# it pops the disk from the stack.

# When the algorithm moves a disk from the ending rod to the starting rod,

# it pushes the disk on the stack.

# The algorithm uses a recursive function to move
Time taken to predict hannoi_Q1.cs: 7.770930051803589 seconds
Saving attention matrix for hannoi_Q1.cs
Time taken to store attention matrix hannoi_Q1.cs: 268.43255066871643 seconds
 24%|██████████████████████                                                                    | 11/45 [6:25:19<15:11:52, 1609.20s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: The algorithm moves the disks from the starting rod to the

# ending rod by moving the disks from the starting rod to the aux rod,

# then move the disks from the aux rod to the ending rod.


# ****************************************************************************

# In the Towers of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never
Time taken to predict hannoi_Q1.py: 7.579837083816528 seconds
Saving attention matrix for hannoi_Q1.py
Time taken to store attention matrix hannoi_Q1.py: 97.31137251853943 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: The algorithm moves the disks from the starting rod to the ending rod

# by moving the disks from the starting rod to the auxillary rod and then

# from the auxillary rod to the ending rod.

# The algorithm moves the disks from the starting rod to the auxillary rod by

# moving the disks from the starting rod to the auxillary rod and then from

# the auxillary rod to the auxillary rod.

# The algorithm moves the
Time taken to predict hannoi_Q1.py: 7.636244535446167 seconds
Saving attention matrix for hannoi_Q1.py
Time taken to store attention matrix hannoi_Q1.py: 91.44299054145813 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: How does the algorithm moves disks from the starting rod to the

# ending rod?

# Answer: It uses a stack to keep track of the disks that have been moved.

# The algorithm starts by moving the smallest disk from the starting rod to the

# aux_rod.

# Then it moves the next smallest disk from the aux_rod to the ending rod.

# Then it moves the next smallest disk from the ending rod to the aux_rod.

# Then it moves the next smallest disk from the aux_rod to the starting rod.

Time taken to predict hannoi_Q1.py: 7.574696063995361 seconds
Saving attention matrix for hannoi_Q1.py
Time taken to store attention matrix hannoi_Q1.py: 90.43544054031372 seconds
 27%|████████████████████████                                                                  | 12/45 [6:31:13<11:15:08, 1227.53s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}


/*
# Questions: Which is the base case of the algorithm?

# Answer: When n = 0, the algorithm is finished.

# What is the recursion formula?

# Answer: n = n - 1 + n - 1 + n - 1

# What is the recursion formula for the general case?

# Answer: n = n - 1 + n - 1 + n - 1 + n - 1 + n - 1 + n - 1 + n - 1

# What is the recursion formula for the general case?
Time taken to predict hannoi_Q2.cpp: 7.904798984527588 seconds
Saving attention matrix for hannoi_Q2.cpp
Time taken to store attention matrix hannoi_Q2.cpp: 142.34821438789368 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}


/*
# Questions: Which is the base case of the algorithm?

# Answer: n = 0

# What is the recursive case of the algorithm?

# Answer: n > 0

# What is the base case of the algorithm?

# Answer: n = 0

# What is the recursive case of the algorithm?

# Answer: n > 0

# What is the base case of the algorithm?

# Answer: n = 0

# What is the recursive case of the algorithm?

# Answer:
Time taken to predict hannoi_Q2.cpp: 7.856696128845215 seconds
Saving attention matrix for hannoi_Q2.cpp
Time taken to store attention matrix hannoi_Q2.cpp: 170.4913682937622 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}


/*
# Questions: Which is the base case of the algorithm?

# Answer: When n == 0.

# What is the recursion?

# What is the base case?

# What is the recursion?

# What is the base case?

# What is the recursion?

# What is the base case?

# What is the recursion?

# What is the base case?

# What is the recursion?

# What is the base case?

# What is
Time taken to predict hannoi_Q2.cpp: 8.040704250335693 seconds
Saving attention matrix for hannoi_Q2.cpp
Time taken to store attention matrix hannoi_Q2.cpp: 154.6523654460907 seconds
 29%|██████████████████████████▎                                                                | 13/45 [6:40:22<9:04:57, 1021.80s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: Which is the base case of the algorithm?

# Answer: When n = 0, the algorithm is finished.

# What is the recursion?

# Answer: The algorithm is recursive.

# What is the base case?

# Answer: When n = 0, the algorithm is finished.

# What is the recursion?

# Answer: The algorithm is recursive.

# What is the base case?

# Answer: When n = 0, the algorithm is finished.

# What
Time taken to predict hannoi_Q2.cs: 7.8738744258880615 seconds
Saving attention matrix for hannoi_Q2.cs
Time taken to store attention matrix hannoi_Q2.cs: 165.37338972091675 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: Which is the base case of the algorithm?

# Answer: n = 0

# What is the recursive case of the algorithm?

# Answer: n > 0

# What is the recursive case of the algorithm?

# Answer: n = 1

# What is the recursive case of the algorithm?

# Answer: n > 1

# What is the recursive case of the algorithm?

# Answer: n = 2

# What is the recursive case of the algorithm?

# Answer:
Time taken to predict hannoi_Q2.cs: 7.84084153175354 seconds
Saving attention matrix for hannoi_Q2.cs
Time taken to store attention matrix hannoi_Q2.cs: 166.95773911476135 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}

/*
# Questions: Which is the base case of the algorithm?

# Answer: The base case is when the number of disks is 0.

# What is the recursive case of the algorithm?

# Answer: The recursive case is when the number of disks is not 0.

# What is the recursion depth?

# Answer: The recursion depth is the number of disks.

# What is the recursion base?

# Answer: The recursion base is the first disk that is moved.

# What is the
Time taken to predict hannoi_Q2.cs: 7.921663284301758 seconds
Saving attention matrix for hannoi_Q2.cs
Time taken to store attention matrix hannoi_Q2.cs: 136.55327248573303 seconds
 31%|████████████████████████████▌                                                               | 14/45 [6:49:35<7:34:42, 880.10s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: Which is the base case of the algorithm?

# Answer: When n = 0, the algorithm is finished.

# What is the recursion?

# Answer: The algorithm is recursive because it calls itself.

# What is the base case?

# Answer: When n = 0, the algorithm is finished.

# What is the recursion?

# Answer: The algorithm is recursive because it calls itself.

# What is the base case?

# Answer: When n = 0, the
Time taken to predict hannoi_Q2.py: 7.586552381515503 seconds
Saving attention matrix for hannoi_Q2.py
Time taken to store attention matrix hannoi_Q2.py: 108.20061135292053 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: Which is the base case of the algorithm?

# Answer: n == 0

# What is the recursive case of the algorithm?

# Answer: n > 0

# What is the base case of the algorithm?

# Answer: n == 1

# What is the recursive case of the algorithm?

# Answer: n > 1

# What is the base case of the algorithm?

# Answer: n == 2

# What is the recursive case of the algorithm?

# Answer:
Time taken to predict hannoi_Q2.py: 7.606905698776245 seconds
Saving attention matrix for hannoi_Q2.py
Time taken to store attention matrix hannoi_Q2.py: 110.88724136352539 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: Which is the base case of the algorithm?

# Answer: The base case is when the number of disks is 0.

# In this case, the algorithm is not applicable.

# The algorithm is applicable when the number of disks is 1.

# In this case, the algorithm is not applicable.

# The algorithm is applicable when the number of disks is 2.

# In this case, the algorithm is not applicable.

# The algorithm is applicable when the number of disks is 3.

# In
Time taken to predict hannoi_Q2.py: 7.628879070281982 seconds
Saving attention matrix for hannoi_Q2.py
Time taken to store attention matrix hannoi_Q2.py: 131.4003987312317 seconds
 33%|██████████████████████████████▋                                                             | 15/45 [6:56:38<6:11:12, 742.43s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'
*/
<|endoftext|>
Time taken to predict hannoi_Q3.cpp: 0.964195966720581 seconds
Saving attention matrix for hannoi_Q3.cpp
Time taken to store attention matrix hannoi_Q3.cpp: 247.05499124526978 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'.

# Why?

# Because the disk with the name 'Mark' is the smallest disk in the

# tower.

# The disk with the name 'Luke' is the largest disk in the tower.

# The disk with the name 'Mat' is the second largest disk in the

# tower.

# The disk with the name 'Mark' is the second smallest disk in the

# tower.

# The
Time taken to predict hannoi_Q3.cpp: 7.741765737533569 seconds
Saving attention matrix for hannoi_Q3.cpp
Time taken to store attention matrix hannoi_Q3.cpp: 249.15992045402527 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod,
                    char to_rod, char aux_rod)
{
    if (n == 0)
    {
        return;
    }
    towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
    cout << "Move disk " << n << " from rod " << from_rod <<
                                " to rod " << to_rod << endl;
    towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
    int n = 4;
    towerOfHanoi(n, 'A', 'C', 'B'); return 0;
}

/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'
*/
<|endoftext|>
Time taken to predict hannoi_Q3.cpp: 0.9601023197174072 seconds
Saving attention matrix for hannoi_Q3.cpp
Time taken to store attention matrix hannoi_Q3.cpp: 162.24255180358887 seconds
 36%|████████████████████████████████▋                                                           | 16/45 [7:08:09<5:51:23, 727.03s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}


/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'
*/

/*
# Questions: what is the value of n?

# Answer: 4
*/

/*
# Questions: what is the value of n?

# Answer: 4
*/

/*
# Questions: what is the value of n?

# Answer: 4
*/

/*
# Questions: what is the value of n?

# Answer: 4
*/

/*
# Questions:
Time taken to predict hannoi_Q3.cs: 7.828487157821655 seconds
Saving attention matrix for hannoi_Q3.cs
Time taken to store attention matrix hannoi_Q3.cs: 153.5336775779724 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}


/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'.

# Why?

# Because the call towerOfHanoi(n, 'Mark', 'Mat', 'Luke')

# is equivalent to towerOfHanoi(n, 'Mark', 'Luke', 'Mat').

# The call towerOfHanoi(n, 'Mark', 'Luke', 'Mat')

# is equivalent to towerOfHanoi(n-1, 'Mark', 'Luke', 'Mat
Time taken to predict hannoi_Q3.cs: 7.9650373458862305 seconds
Saving attention matrix for hannoi_Q3.cs
Time taken to store attention matrix hannoi_Q3.cs: 180.02883005142212 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*************************************************************************************************/


/*
# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.
 */


using System;

class GFG
{

    static void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
    {

        if (n == 0)
        {
            return;
        }

        towerOfHanoi(n-1, from_rod, aux_rod, to_rod);

        Console.WriteLine("Move disk " + n + " from rod " +
                          from_rod + " to rod " + to_rod);

        towerOfHanoi(n-1, aux_rod, to_rod, from_rod);
    }

    public static void Main(String []args)
    {
        int n = 4;
        towerOfHanoi(n, 'A', 'C', 'B');
    }
}


/*
# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'
*/


/*
# The Tower of Hanoi problem is a classic example of recursion.

# The recursive function is called towerOfHanoi.

# The recursive function calls itself recursively.

# The recursive function is called recursively.

# The recursive function is called recursively.

# The recursive function is called recursively.

# The recursive function is called recursively.

Time taken to predict hannoi_Q3.cs: 7.849079608917236 seconds
Saving attention matrix for hannoi_Q3.cs
Time taken to store attention matrix hannoi_Q3.cs: 167.68752121925354 seconds
 38%|██████████████████████████████████▊                                                         | 17/45 [7:17:55<5:19:30, 684.65s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Luke'

# What is the name of the rod that is not being moved?

# Answer: 'Mark'

# What is the name of the rod that is being moved?

# Answer: 'Mat'

# What is the name of the rod that is not being moved?

# Answer: 'Luke'

# What is the name of the rod that is being moved?

# Answer: 'Mark'

#
Time taken to predict hannoi_Q3.py: 7.8821961879730225 seconds
Saving attention matrix for hannoi_Q3.py
Time taken to store attention matrix hannoi_Q3.py: 109.34367179870605 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Mark'

# How many moves are needed to move all the disks from the left

# hand rod to the right hand rod?

# Answer: n

# How many moves are needed to move all the disks from the left

# hand rod to the right hand rod, but not using the auxiliary

# rod?

# Answer: n-1

# How many moves are needed to move all the disks from the left

#
Time taken to predict hannoi_Q3.py: 7.787147283554077 seconds
Saving attention matrix for hannoi_Q3.py
Time taken to store attention matrix hannoi_Q3.py: 112.52529215812683 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
# ****************************************************************************

# In the Tower of Hanoi problem you have to move all the disks

# from the left hand post to the right hand post.

# You can only move the disks one at a time and you can never

# place a bigger disk on a smaller disk.


def TowerOfHanoi(n, from_rod, to_rod, aux_rod):
    if n == 0:
        return
    TowerOfHanoi(n-1, from_rod, aux_rod, to_rod)
    print("Move disk", n, "from rod", from_rod, "to rod", to_rod)
    TowerOfHanoi(n-1, aux_rod, to_rod, from_rod)


n = 4
TowerOfHanoi(n, 'A', 'C', 'B')


# Questions: which is the name of the auxiliary rod in the call

# TowerOfHanoi(n, 'Mark', 'Mat', 'Luke')?

# Answer: 'Mark'

# How many moves are needed to move all the disks from the left

# hand post to the right hand post?

# Answer: n = 4

# How many moves are needed to move all the disks from the left

# hand post to the right hand post?

# Answer: n = 3

# How many moves are needed to move all the disks from the left

# hand post to the right hand post?
Time taken to predict hannoi_Q3.py: 7.696892499923706 seconds
Saving attention matrix for hannoi_Q3.py
Time taken to store attention matrix hannoi_Q3.py: 74.18657851219177 seconds
 40%|████████████████████████████████████▊                                                       | 18/45 [7:24:05<4:25:33, 590.14s/it]Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*# ***********************************************************************************************

# In the Consumer-Producer problem, two threads types, called producers and

# consumers, share the same memory buffer that is of fixed-size.

# The producers add data to the buffer, whereas the consumers remove data.

*/

#include <bits/stdc++.h>
#include <thread>
using namespace std;

class Queue {
    int maxSize;
    vector<int> q;

    public:
    Queue(int maxSize) {
        this->maxSize = maxSize;
    }
    void put(int item) {
        if (q.size() == maxSize) {
            cout << "Queue is full" << endl;
            throw runtime_error("Queue is full");
        }
        q.push_back(item);
    }
    int get() {
        if (q.size() == 0) {
            cout << "Queue is empty" << endl;
            throw runtime_error("Queue is empty");
        }
        int item = q[0];
        q.erase(q.begin());
        return item;
    }
    bool isFull() {
        return q.size() == maxSize;
    }
    bool isEmpty() {
        return q.size() == 0;
    }
    string toString() {
        stringstream ss;
        for (int i = 0; i < q.size(); i++) {
            ss << q[i] << " ";
        }
        return ss.str();
    }
};

int BUF_SIZE = 10;
Queue myQueue(BUF_SIZE);

void producerRun() {
    while (true) {
        if (!myQueue.isFull()) {
            int item = rand() % 10;
            myQueue.put(item);
            std::thread::id currentThreadId = std::this_thread::get_id();
            cout << "Produced (" << currentThreadId  << "): " << item <<
                    " - " << myQueue.toString() << endl;
            this_thread::sleep_for(chrono::microseconds(1));
        }
    }
}


void consumerRun() {
    while (true) {
        if (!myQueue.isEmpty()) {
            int item = myQueue.get();
            std::thread::id currentThreadId = std::this_thread::get_id();
            cout << "Consumed (" << currentThreadId  << "): " << item <<
                    " - " << myQueue.toString() << endl;
            this_thread::sleep_for(chrono::microseconds(1));
        }
    }
}



int main(int argc, char const *argv[])
{
  std::cout << "Hello Docker container!" << std::endl;
    std::thread producerThreads[10];
    for (int i = 0; i < 10; i++) {
        producerThreads[i] = std::thread(producerRun);
    }

    thread consumer(consumerRun);

    for (int i = 0; i < 10; i++) {
        producerThreads[i].join();
    }
    consumer.join();

  return 0;
}

/*

# Questions: is it possible that consumer and producers threads

# end up in a deadlock state, namely they both wait for each other to finish,

# but none of them is doing anything?

# Answer: yes, it is possible.

*/

#include <bits/stdc++.h>
#include <thread>
using namespace std;

class Queue {
    int maxSize;
    vector<int> q;

    public:
    Queue(int maxSize) {
        this->maxSize = maxSize;
    }
   
Time taken to predict multithread_Q1.cpp: 10.384319067001343 seconds
Saving attention matrix for multithread_Q1.cpp
Time taken to store attention matrix multithread_Q1.cpp: 1337.673255443573 seconds
Before calling model.generate()
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
After calling model.generate()
/*# ***********************************************************************************************

# In the Consumer-Producer problem, two threads types, called producers and

# consumers, share the same memory buffer that is of fixed-size.

# The producers add data to the buffer, whereas the consumers remove data.

*/

#include <bits/stdc++.h>
#include <thread>
using namespace std;

class Queue {
    int maxSize;
    vector<int> q;

    public:
    Queue(int maxSize) {
        this->maxSize = maxSize;
    }
    void put(int item) {
        if (q.size() == maxSize) {
            cout << "Queue is full" << endl;
            throw runtime_error("Queue is full");
        }
        q.push_back(item);
    }
    int get() {
        if (q.size() == 0) {
            cout << "Queue is empty" << endl;
            throw runtime_error("Queue is empty");
        }
        int item = q[0];
        q.erase(q.begin());
        return item;
    }
    bool isFull() {
        return q.size() == maxSize;
    }
    bool isEmpty() {
        return q.size() == 0;
    }
    string toString() {
        stringstream ss;
        for (int i = 0; i < q.size(); i++) {
            ss << q[i] << " ";
        }
        return ss.str();
    }
};

int BUF_SIZE = 10;
Queue myQueue(BUF_SIZE);

void producerRun() {
    while (true) {
        if (!myQueue.isFull()) {
            int item = rand() % 10;
            myQueue.put(item);
            std::thread::id currentThreadId = std::this_thread::get_id();
            cout << "Produced (" << currentThreadId  << "): " << item <<
                    " - " << myQueue.toString() << endl;
            this_thread::sleep_for(chrono::microseconds(1));
        }
    }
}


void consumerRun() {
    while (true) {
        if (!myQueue.isEmpty()) {
            int item = myQueue.get();
            std::thread::id currentThreadId = std::this_thread::get_id();
            cout << "Consumed (" << currentThreadId  << "): " << item <<
                    " - " << myQueue.toString() << endl;
            this_thread::sleep_for(chrono::microseconds(1));
        }
    }
}



int main(int argc, char const *argv[])
{
  std::cout << "Hello Docker container!" << std::endl;
    std::thread producerThreads[10];
    for (int i = 0; i < 10; i++) {
        producerThreads[i] = std::thread(producerRun);
    }

    thread consumer(consumerRun);

    for (int i = 0; i < 10; i++) {
        producerThreads[i].join();
    }
    consumer.join();

  return 0;
}

/*

# Questions: is it possible that consumer and producers threads

# end up in a deadlock state, namely they both wait for each other to finish,

# but none of them is doing anything?

# Answer: yes, it is possible.

# Explanation:

# The producer threads are waiting for the consumer threads to finish,

# but the consumer threads are waiting for the producer threads to finish.

# This is a deadlock.

*/

/*

# Questions: is it possible that producer threads are waiting for the

# consumer threads to finish, but the consumer threads are not doing

# anything?

# Answer: yes,
Time taken to predict multithread_Q1.cpp: 10.279653072357178 seconds
Using config file information.
n of data read:  55
Using config file information.
n of data read:  55
Using config file information.
Processing analysis pass: followup
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/followup', {}, <function compute_followup_attention at 0x7ff7d649b280>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:44,  1.44s/it]  6%|██▊                                         | 2/32 [00:02<00:43,  1.44s/it]  9%|████▏                                       | 3/32 [00:04<00:41,  1.44s/it] 12%|█████▌                                      | 4/32 [00:05<00:40,  1.43s/it] 16%|██████▉                                     | 5/32 [00:07<00:38,  1.43s/it] 19%|████████▎                                   | 6/32 [00:08<00:37,  1.44s/it] 22%|█████████▋                                  | 7/32 [00:10<00:35,  1.44s/it] 25%|███████████                                 | 8/32 [00:11<00:34,  1.45s/it] 28%|████████████▍                               | 9/32 [00:13<00:33,  1.46s/it] 31%|█████████████▍                             | 10/32 [00:14<00:31,  1.45s/it] 34%|██████████████▊                            | 11/32 [00:15<00:30,  1.44s/it] 38%|████████████████▏                          | 12/32 [00:17<00:29,  1.45s/it] 41%|█████████████████▍                         | 13/32 [00:18<00:27,  1.45s/it] 44%|██████████████████▊                        | 14/32 [00:20<00:26,  1.45s/it] 47%|████████████████████▏                      | 15/32 [00:21<00:24,  1.45s/it] 50%|█████████████████████▌                     | 16/32 [00:23<00:23,  1.44s/it] 53%|██████████████████████▊                    | 17/32 [00:24<00:21,  1.43s/it] 56%|████████████████████████▏                  | 18/32 [00:25<00:20,  1.45s/it] 59%|█████████████████████████▌                 | 19/32 [00:27<00:19,  1.49s/it] 62%|██████████████████████████▉                | 20/32 [00:29<00:17,  1.49s/it] 66%|████████████████████████████▏              | 21/32 [00:30<00:16,  1.47s/it] 69%|█████████████████████████████▌             | 22/32 [00:31<00:14,  1.48s/it] 72%|██████████████████████████████▉            | 23/32 [00:33<00:13,  1.46s/it] 75%|████████████████████████████████▎          | 24/32 [00:34<00:11,  1.45s/it] 78%|█████████████████████████████████▌         | 25/32 [00:36<00:10,  1.44s/it] 81%|██████████████████████████████████▉        | 26/32 [00:37<00:08,  1.43s/it] 84%|████████████████████████████████████▎      | 27/32 [00:39<00:07,  1.44s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:40<00:05,  1.43s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:41<00:04,  1.43s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:43<00:02,  1.43s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:44<00:01,  1.43s/it]100%|███████████████████████████████████████████| 32/32 [00:46<00:00,  1.43s/it]100%|███████████████████████████████████████████| 32/32 [00:46<00:00,  1.45s/it]
Consecutive layer pairs:  torch.Size([32, 844, 844])
  2%|▊                                         | 1/55 [01:14<1:06:42, 74.12s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:44,  1.43s/it]  6%|██▊                                         | 2/32 [00:02<00:42,  1.43s/it]  9%|████▏                                       | 3/32 [00:04<00:41,  1.43s/it] 12%|█████▌                                      | 4/32 [00:05<00:40,  1.45s/it] 16%|██████▉                                     | 5/32 [00:07<00:39,  1.45s/it] 19%|████████▎                                   | 6/32 [00:08<00:37,  1.44s/it] 22%|█████████▋                                  | 7/32 [00:10<00:36,  1.45s/it] 25%|███████████                                 | 8/32 [00:11<00:34,  1.45s/it] 28%|████████████▍                               | 9/32 [00:12<00:33,  1.44s/it] 31%|█████████████▍                             | 10/32 [00:14<00:31,  1.44s/it] 34%|██████████████▊                            | 11/32 [00:15<00:30,  1.43s/it] 38%|████████████████▏                          | 12/32 [00:17<00:28,  1.44s/it] 41%|█████████████████▍                         | 13/32 [00:18<00:27,  1.45s/it] 44%|██████████████████▊                        | 14/32 [00:20<00:26,  1.45s/it] 47%|████████████████████▏                      | 15/32 [00:21<00:24,  1.44s/it] 50%|█████████████████████▌                     | 16/32 [00:23<00:23,  1.44s/it] 53%|██████████████████████▊                    | 17/32 [00:24<00:21,  1.46s/it] 56%|████████████████████████▏                  | 18/32 [00:26<00:20,  1.45s/it] 59%|█████████████████████████▌                 | 19/32 [00:27<00:18,  1.45s/it] 62%|██████████████████████████▉                | 20/32 [00:28<00:17,  1.45s/it] 66%|████████████████████████████▏              | 21/32 [00:30<00:15,  1.45s/it] 69%|█████████████████████████████▌             | 22/32 [00:31<00:14,  1.44s/it] 72%|██████████████████████████████▉            | 23/32 [00:33<00:12,  1.43s/it] 75%|████████████████████████████████▎          | 24/32 [00:34<00:11,  1.43s/it] 78%|█████████████████████████████████▌         | 25/32 [00:36<00:10,  1.44s/it] 81%|██████████████████████████████████▉        | 26/32 [00:37<00:08,  1.43s/it] 84%|████████████████████████████████████▎      | 27/32 [00:38<00:07,  1.43s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:40<00:05,  1.42s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:41<00:04,  1.44s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:43<00:02,  1.47s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:44<00:01,  1.46s/it]100%|███████████████████████████████████████████| 32/32 [00:46<00:00,  1.47s/it]100%|███████████████████████████████████████████| 32/32 [00:46<00:00,  1.45s/it]
Consecutive layer pairs:  torch.Size([32, 844, 844])
  4%|█▌                                        | 2/55 [02:26<1:04:28, 73.00s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:43,  1.41s/it]  6%|██▊                                         | 2/32 [00:02<00:43,  1.45s/it]  9%|████▏                                       | 3/32 [00:04<00:41,  1.44s/it] 12%|█████▌                                      | 4/32 [00:05<00:40,  1.43s/it] 16%|██████▉                                     | 5/32 [00:07<00:38,  1.43s/it] 19%|████████▎                                   | 6/32 [00:08<00:37,  1.43s/it] 22%|█████████▋                                  | 7/32 [00:10<00:35,  1.44s/it] 25%|███████████                                 | 8/32 [00:11<00:34,  1.43s/it] 28%|████████████▍                               | 9/32 [00:12<00:32,  1.43s/it] 31%|█████████████▍                             | 10/32 [00:14<00:31,  1.43s/it] 34%|██████████████▊                            | 11/32 [00:15<00:30,  1.43s/it] 38%|████████████████▏                          | 12/32 [00:17<00:28,  1.44s/it] 41%|█████████████████▍                         | 13/32 [00:18<00:27,  1.44s/it] 44%|██████████████████▊                        | 14/32 [00:20<00:25,  1.43s/it] 47%|████████████████████▏                      | 15/32 [00:21<00:24,  1.43s/it] 50%|█████████████████████▌                     | 16/32 [00:22<00:22,  1.43s/it] 53%|██████████████████████▊                    | 17/32 [00:24<00:21,  1.43s/it] 56%|████████████████████████▏                  | 18/32 [00:25<00:20,  1.44s/it] 59%|█████████████████████████▌                 | 19/32 [00:27<00:18,  1.45s/it] 62%|██████████████████████████▉                | 20/32 [00:28<00:17,  1.44s/it] 66%|████████████████████████████▏              | 21/32 [00:30<00:15,  1.44s/it] 69%|█████████████████████████████▌             | 22/32 [00:31<00:14,  1.44s/it] 72%|██████████████████████████████▉            | 23/32 [00:33<00:12,  1.44s/it] 75%|████████████████████████████████▎          | 24/32 [00:34<00:11,  1.44s/it] 78%|█████████████████████████████████▌         | 25/32 [00:35<00:10,  1.43s/it] 81%|██████████████████████████████████▉        | 26/32 [00:37<00:08,  1.43s/it] 84%|████████████████████████████████████▎      | 27/32 [00:38<00:07,  1.43s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:40<00:05,  1.42s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:41<00:04,  1.42s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:42<00:02,  1.42s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:44<00:01,  1.42s/it]100%|███████████████████████████████████████████| 32/32 [00:45<00:00,  1.42s/it]100%|███████████████████████████████████████████| 32/32 [00:45<00:00,  1.43s/it]
Consecutive layer pairs:  torch.Size([32, 844, 844])
  5%|██▎                                       | 3/55 [03:40<1:03:33, 73.33s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:17,  4.43s/it]  6%|██▊                                         | 2/32 [00:08<02:11,  4.39s/it]  9%|████▏                                       | 3/32 [00:13<02:08,  4.42s/it] 12%|█████▌                                      | 4/32 [00:17<02:04,  4.45s/it] 16%|██████▉                                     | 5/32 [00:22<01:59,  4.44s/it] 19%|████████▎                                   | 6/32 [00:26<01:56,  4.47s/it] 22%|█████████▋                                  | 7/32 [00:31<01:51,  4.45s/it] 25%|███████████                                 | 8/32 [00:35<01:46,  4.42s/it] 28%|████████████▍                               | 9/32 [00:39<01:42,  4.44s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.43s/it] 34%|██████████████▊                            | 11/32 [00:48<01:32,  4.41s/it] 38%|████████████████▏                          | 12/32 [00:53<01:27,  4.40s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.40s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:21,  4.55s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:16,  4.49s/it] 50%|█████████████████████▌                     | 16/32 [01:11<01:11,  4.46s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.46s/it] 56%|████████████████████████▏                  | 18/32 [01:20<01:02,  4.48s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:58,  4.48s/it] 62%|██████████████████████████▉                | 20/32 [01:29<00:53,  4.46s/it] 66%|████████████████████████████▏              | 21/32 [01:33<00:48,  4.45s/it] 69%|█████████████████████████████▌             | 22/32 [01:38<00:45,  4.50s/it] 72%|██████████████████████████████▉            | 23/32 [01:42<00:40,  4.49s/it] 75%|████████████████████████████████▎          | 24/32 [01:47<00:36,  4.50s/it] 78%|█████████████████████████████████▌         | 25/32 [01:51<00:31,  4.48s/it] 81%|██████████████████████████████████▉        | 26/32 [01:55<00:26,  4.48s/it] 84%|████████████████████████████████████▎      | 27/32 [02:00<00:22,  4.49s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:04<00:17,  4.47s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:09<00:13,  4.46s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:13<00:08,  4.46s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:19<00:04,  4.73s/it]100%|███████████████████████████████████████████| 32/32 [02:23<00:00,  4.70s/it]100%|███████████████████████████████████████████| 32/32 [02:23<00:00,  4.49s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
  7%|██▉                                      | 4/55 [06:50<1:41:30, 119.43s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:17,  4.42s/it]  6%|██▊                                         | 2/32 [00:08<02:12,  4.41s/it]  9%|████▏                                       | 3/32 [00:13<02:07,  4.41s/it] 12%|█████▌                                      | 4/32 [00:17<02:05,  4.49s/it] 16%|██████▉                                     | 5/32 [00:22<02:00,  4.48s/it] 19%|████████▎                                   | 6/32 [00:27<01:59,  4.61s/it] 22%|█████████▋                                  | 7/32 [00:31<01:53,  4.53s/it] 25%|███████████                                 | 8/32 [00:35<01:47,  4.47s/it] 28%|████████████▍                               | 9/32 [00:40<01:42,  4.44s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.42s/it] 34%|██████████████▊                            | 11/32 [00:49<01:32,  4.41s/it] 38%|████████████████▏                          | 12/32 [00:53<01:28,  4.41s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.40s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:19,  4.41s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:14,  4.40s/it] 50%|█████████████████████▌                     | 16/32 [01:11<01:10,  4.40s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.44s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:01,  4.42s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:58,  4.50s/it] 62%|██████████████████████████▉                | 20/32 [01:29<00:53,  4.49s/it] 66%|████████████████████████████▏              | 21/32 [01:33<00:49,  4.52s/it] 69%|█████████████████████████████▌             | 22/32 [01:38<00:44,  4.47s/it] 72%|██████████████████████████████▉            | 23/32 [01:42<00:40,  4.46s/it] 75%|████████████████████████████████▎          | 24/32 [01:46<00:35,  4.44s/it] 78%|█████████████████████████████████▌         | 25/32 [01:51<00:30,  4.42s/it] 81%|██████████████████████████████████▉        | 26/32 [01:55<00:26,  4.41s/it] 84%|████████████████████████████████████▎      | 27/32 [02:00<00:22,  4.40s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:04<00:17,  4.44s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:08<00:13,  4.42s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:13<00:08,  4.40s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:17<00:04,  4.39s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.38s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.44s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
  9%|███▋                                     | 5/55 [10:02<2:01:21, 145.63s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:19,  4.51s/it]  6%|██▊                                         | 2/32 [00:08<02:12,  4.43s/it]  9%|████▏                                       | 3/32 [00:13<02:08,  4.43s/it] 12%|█████▌                                      | 4/32 [00:17<02:03,  4.41s/it] 16%|██████▉                                     | 5/32 [00:22<01:58,  4.40s/it] 19%|████████▎                                   | 6/32 [00:26<01:58,  4.56s/it] 22%|█████████▋                                  | 7/32 [00:31<01:53,  4.54s/it] 25%|███████████                                 | 8/32 [00:35<01:47,  4.48s/it] 28%|████████████▍                               | 9/32 [00:40<01:42,  4.45s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.43s/it] 34%|██████████████▊                            | 11/32 [00:48<01:32,  4.41s/it] 38%|████████████████▏                          | 12/32 [00:53<01:29,  4.47s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:24,  4.46s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:19,  4.44s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:15,  4.41s/it] 50%|█████████████████████▌                     | 16/32 [01:11<01:10,  4.42s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.42s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:01,  4.40s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:57,  4.39s/it] 62%|██████████████████████████▉                | 20/32 [01:28<00:52,  4.39s/it] 66%|████████████████████████████▏              | 21/32 [01:33<00:48,  4.39s/it] 69%|█████████████████████████████▌             | 22/32 [01:37<00:43,  4.38s/it] 72%|██████████████████████████████▉            | 23/32 [01:41<00:39,  4.38s/it] 75%|████████████████████████████████▎          | 24/32 [01:46<00:35,  4.41s/it] 78%|█████████████████████████████████▌         | 25/32 [01:50<00:30,  4.40s/it] 81%|██████████████████████████████████▉        | 26/32 [01:55<00:26,  4.40s/it] 84%|████████████████████████████████████▎      | 27/32 [02:00<00:23,  4.63s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:04<00:18,  4.56s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:08<00:13,  4.50s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:13<00:08,  4.46s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:17<00:04,  4.48s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.45s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.45s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
 11%|████▍                                    | 6/55 [13:12<2:11:24, 160.90s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:34,  1.12s/it]  6%|██▊                                         | 2/32 [00:02<00:33,  1.13s/it]  9%|████▏                                       | 3/32 [00:03<00:32,  1.13s/it] 12%|█████▌                                      | 4/32 [00:04<00:31,  1.13s/it] 16%|██████▉                                     | 5/32 [00:05<00:30,  1.14s/it] 19%|████████▎                                   | 6/32 [00:06<00:30,  1.16s/it] 22%|█████████▋                                  | 7/32 [00:08<00:29,  1.16s/it] 25%|███████████                                 | 8/32 [00:09<00:27,  1.15s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.14s/it] 31%|█████████████▍                             | 10/32 [00:11<00:24,  1.14s/it] 34%|██████████████▊                            | 11/32 [00:12<00:23,  1.13s/it] 38%|████████████████▏                          | 12/32 [00:13<00:22,  1.13s/it] 41%|█████████████████▍                         | 13/32 [00:14<00:21,  1.13s/it] 44%|██████████████████▊                        | 14/32 [00:15<00:20,  1.13s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:19,  1.13s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.13s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:16,  1.13s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:15,  1.13s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:14,  1.12s/it] 62%|██████████████████████████▉                | 20/32 [00:22<00:13,  1.13s/it] 66%|████████████████████████████▏              | 21/32 [00:23<00:12,  1.14s/it] 69%|█████████████████████████████▌             | 22/32 [00:24<00:11,  1.14s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.14s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.14s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:07,  1.13s/it] 81%|██████████████████████████████████▉        | 26/32 [00:29<00:06,  1.13s/it] 84%|████████████████████████████████████▎      | 27/32 [00:30<00:05,  1.14s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:31<00:04,  1.13s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:33<00:03,  1.18s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.21s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.19s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.17s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.14s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 13%|█████▏                                   | 7/55 [14:09<1:41:21, 126.70s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:34,  1.11s/it]  6%|██▊                                         | 2/32 [00:02<00:33,  1.12s/it]  9%|████▏                                       | 3/32 [00:03<00:32,  1.12s/it] 12%|█████▌                                      | 4/32 [00:04<00:31,  1.12s/it] 16%|██████▉                                     | 5/32 [00:05<00:30,  1.12s/it] 19%|████████▎                                   | 6/32 [00:06<00:30,  1.17s/it] 22%|█████████▋                                  | 7/32 [00:08<00:28,  1.16s/it] 25%|███████████                                 | 8/32 [00:09<00:27,  1.16s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.15s/it] 31%|█████████████▍                             | 10/32 [00:11<00:25,  1.15s/it] 34%|██████████████▊                            | 11/32 [00:12<00:24,  1.15s/it] 38%|████████████████▏                          | 12/32 [00:13<00:22,  1.14s/it] 41%|█████████████████▍                         | 13/32 [00:14<00:21,  1.15s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:20,  1.16s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:19,  1.15s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.15s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:17,  1.15s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:16,  1.18s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:15,  1.18s/it] 62%|██████████████████████████▉                | 20/32 [00:23<00:13,  1.17s/it] 66%|████████████████████████████▏              | 21/32 [00:24<00:12,  1.15s/it] 69%|█████████████████████████████▌             | 22/32 [00:25<00:11,  1.16s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.16s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.15s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:08,  1.15s/it] 81%|██████████████████████████████████▉        | 26/32 [00:29<00:06,  1.15s/it] 84%|████████████████████████████████████▎      | 27/32 [00:31<00:05,  1.14s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:32<00:04,  1.15s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:33<00:03,  1.15s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.15s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.15s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.15s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.15s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 15%|█████▉                                   | 8/55 [15:02<1:20:54, 103.30s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:34,  1.12s/it]  6%|██▊                                         | 2/32 [00:02<00:33,  1.13s/it]  9%|████▏                                       | 3/32 [00:03<00:32,  1.14s/it] 12%|█████▌                                      | 4/32 [00:04<00:32,  1.14s/it] 16%|██████▉                                     | 5/32 [00:05<00:31,  1.15s/it] 19%|████████▎                                   | 6/32 [00:06<00:29,  1.14s/it] 22%|█████████▋                                  | 7/32 [00:07<00:28,  1.14s/it] 25%|███████████                                 | 8/32 [00:09<00:27,  1.15s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.14s/it] 31%|█████████████▍                             | 10/32 [00:11<00:25,  1.14s/it] 34%|██████████████▊                            | 11/32 [00:12<00:23,  1.14s/it] 38%|████████████████▏                          | 12/32 [00:13<00:23,  1.15s/it] 41%|█████████████████▍                         | 13/32 [00:14<00:21,  1.15s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:20,  1.15s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:19,  1.15s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.15s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:17,  1.16s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:16,  1.16s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:14,  1.15s/it] 62%|██████████████████████████▉                | 20/32 [00:22<00:13,  1.15s/it] 66%|████████████████████████████▏              | 21/32 [00:24<00:12,  1.15s/it] 69%|█████████████████████████████▌             | 22/32 [00:25<00:11,  1.15s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.14s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.14s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:07,  1.13s/it] 81%|██████████████████████████████████▉        | 26/32 [00:29<00:06,  1.13s/it] 84%|████████████████████████████████████▎      | 27/32 [00:30<00:05,  1.13s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:31<00:04,  1.13s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:33<00:03,  1.13s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.13s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.13s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.13s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.14s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 16%|██████▊                                   | 9/55 [15:58<1:07:55, 88.60s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:59,  1.92s/it]  6%|██▊                                         | 2/32 [00:03<00:57,  1.93s/it]  9%|████▏                                       | 3/32 [00:05<00:56,  1.94s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.94s/it] 16%|██████▉                                     | 5/32 [00:09<00:52,  1.96s/it] 19%|████████▎                                   | 6/32 [00:11<00:50,  1.95s/it] 22%|█████████▋                                  | 7/32 [00:13<00:48,  1.95s/it] 25%|███████████                                 | 8/32 [00:15<00:46,  1.95s/it] 28%|████████████▍                               | 9/32 [00:17<00:44,  1.95s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.97s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.96s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.96s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:37,  1.95s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:35,  1.95s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.96s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:31,  1.96s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:29,  1.96s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.96s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.95s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.95s/it] 66%|████████████████████████████▏              | 21/32 [00:40<00:21,  1.95s/it] 69%|█████████████████████████████▌             | 22/32 [00:42<00:19,  1.95s/it] 72%|██████████████████████████████▉            | 23/32 [00:44<00:17,  1.98s/it] 75%|████████████████████████████████▎          | 24/32 [00:46<00:15,  1.97s/it] 78%|█████████████████████████████████▌         | 25/32 [00:48<00:13,  1.96s/it] 81%|██████████████████████████████████▉        | 26/32 [00:50<00:11,  1.96s/it] 84%|████████████████████████████████████▎      | 27/32 [00:52<00:09,  1.97s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:54<00:07,  1.97s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:56<00:05,  1.99s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:58<00:03,  1.99s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:00<00:01,  1.98s/it]100%|███████████████████████████████████████████| 32/32 [01:02<00:00,  1.97s/it]100%|███████████████████████████████████████████| 32/32 [01:02<00:00,  1.96s/it]
Consecutive layer pairs:  torch.Size([32, 937, 937])
 18%|███████▍                                 | 10/55 [17:25<1:05:59, 87.99s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:59,  1.92s/it]  6%|██▊                                         | 2/32 [00:03<00:58,  1.95s/it]  9%|████▏                                       | 3/32 [00:05<00:56,  1.96s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.96s/it] 16%|██████▉                                     | 5/32 [00:09<00:53,  1.99s/it] 19%|████████▎                                   | 6/32 [00:11<00:51,  1.98s/it] 22%|█████████▋                                  | 7/32 [00:13<00:49,  1.97s/it] 25%|███████████                                 | 8/32 [00:15<00:47,  1.97s/it] 28%|████████████▍                               | 9/32 [00:17<00:45,  1.97s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.97s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.96s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.97s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:37,  1.96s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:35,  1.98s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.97s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:31,  1.96s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:29,  1.96s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.97s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.97s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.98s/it] 66%|████████████████████████████▏              | 21/32 [00:41<00:21,  1.98s/it] 69%|█████████████████████████████▌             | 22/32 [00:43<00:19,  1.98s/it] 72%|██████████████████████████████▉            | 23/32 [00:45<00:17,  1.97s/it] 75%|████████████████████████████████▎          | 24/32 [00:47<00:15,  1.97s/it] 78%|█████████████████████████████████▌         | 25/32 [00:49<00:13,  1.97s/it] 81%|██████████████████████████████████▉        | 26/32 [00:51<00:11,  1.97s/it] 84%|████████████████████████████████████▎      | 27/32 [00:53<00:09,  1.97s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:55<00:07,  1.97s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:57<00:05,  1.98s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:59<00:03,  2.00s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:01<00:01,  1.98s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.97s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.97s/it]
Consecutive layer pairs:  torch.Size([32, 937, 937])
 20%|████████▏                                | 11/55 [18:54<1:04:53, 88.49s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<01:00,  1.95s/it]  6%|██▊                                         | 2/32 [00:03<00:58,  1.95s/it]  9%|████▏                                       | 3/32 [00:05<00:56,  1.95s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.96s/it] 16%|██████▉                                     | 5/32 [00:09<00:52,  1.95s/it] 19%|████████▎                                   | 6/32 [00:11<00:51,  1.97s/it] 22%|█████████▋                                  | 7/32 [00:13<00:49,  1.97s/it] 25%|███████████                                 | 8/32 [00:15<00:47,  1.97s/it] 28%|████████████▍                               | 9/32 [00:17<00:45,  1.97s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.97s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.97s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.97s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:37,  1.96s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:35,  1.95s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.95s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:31,  1.96s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:29,  1.96s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.96s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.97s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.97s/it] 66%|████████████████████████████▏              | 21/32 [00:41<00:21,  1.96s/it] 69%|█████████████████████████████▌             | 22/32 [00:43<00:19,  1.97s/it] 72%|██████████████████████████████▉            | 23/32 [00:45<00:17,  1.96s/it] 75%|████████████████████████████████▎          | 24/32 [00:47<00:15,  1.97s/it] 78%|█████████████████████████████████▌         | 25/32 [00:49<00:13,  1.98s/it] 81%|██████████████████████████████████▉        | 26/32 [00:51<00:11,  1.97s/it] 84%|████████████████████████████████████▎      | 27/32 [00:53<00:09,  1.96s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:54<00:07,  1.95s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:56<00:05,  1.95s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:58<00:03,  1.94s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:00<00:01,  1.94s/it]100%|███████████████████████████████████████████| 32/32 [01:02<00:00,  1.97s/it]100%|███████████████████████████████████████████| 32/32 [01:02<00:00,  1.96s/it]
Consecutive layer pairs:  torch.Size([32, 937, 937])
 22%|████████▉                                | 12/55 [20:21<1:03:02, 87.98s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:15,  4.38s/it]  6%|██▊                                         | 2/32 [00:08<02:12,  4.40s/it]  9%|████▏                                       | 3/32 [00:13<02:07,  4.39s/it] 12%|█████▌                                      | 4/32 [00:17<02:02,  4.39s/it] 16%|██████▉                                     | 5/32 [00:22<02:04,  4.62s/it] 19%|████████▎                                   | 6/32 [00:27<01:59,  4.58s/it] 22%|█████████▋                                  | 7/32 [00:31<01:53,  4.54s/it] 25%|███████████                                 | 8/32 [00:35<01:48,  4.50s/it] 28%|████████████▍                               | 9/32 [00:40<01:42,  4.46s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.43s/it] 34%|██████████████▊                            | 11/32 [00:49<01:32,  4.40s/it] 38%|████████████████▏                          | 12/32 [00:53<01:27,  4.38s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.38s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:18,  4.37s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:14,  4.36s/it] 50%|█████████████████████▌                     | 16/32 [01:10<01:09,  4.37s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:05,  4.39s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:01,  4.38s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:57,  4.40s/it] 62%|██████████████████████████▉                | 20/32 [01:28<00:52,  4.40s/it] 66%|████████████████████████████▏              | 21/32 [01:32<00:48,  4.41s/it] 69%|█████████████████████████████▌             | 22/32 [01:37<00:44,  4.42s/it] 72%|██████████████████████████████▉            | 23/32 [01:41<00:39,  4.42s/it] 75%|████████████████████████████████▎          | 24/32 [01:46<00:35,  4.41s/it] 78%|█████████████████████████████████▌         | 25/32 [01:50<00:30,  4.40s/it] 81%|██████████████████████████████████▉        | 26/32 [01:54<00:26,  4.39s/it] 84%|████████████████████████████████████▎      | 27/32 [01:59<00:22,  4.46s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:03<00:17,  4.46s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:08<00:13,  4.43s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:12<00:08,  4.42s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:17<00:04,  4.41s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.39s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.42s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
 24%|█████████▍                              | 13/55 [23:28<1:22:35, 117.98s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:19,  4.50s/it]  6%|██▊                                         | 2/32 [00:09<02:20,  4.69s/it]  9%|████▏                                       | 3/32 [00:13<02:11,  4.53s/it] 12%|█████▌                                      | 4/32 [00:18<02:05,  4.48s/it] 16%|██████▉                                     | 5/32 [00:22<02:00,  4.45s/it] 19%|████████▎                                   | 6/32 [00:27<02:00,  4.64s/it] 22%|█████████▋                                  | 7/32 [00:31<01:54,  4.56s/it] 25%|███████████                                 | 8/32 [00:36<01:48,  4.50s/it] 28%|████████████▍                               | 9/32 [00:40<01:42,  4.46s/it] 31%|█████████████▍                             | 10/32 [00:45<01:37,  4.44s/it] 34%|██████████████▊                            | 11/32 [00:49<01:32,  4.42s/it] 38%|████████████████▏                          | 12/32 [00:53<01:28,  4.42s/it] 41%|█████████████████▍                         | 13/32 [00:58<01:24,  4.44s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:19,  4.43s/it] 47%|████████████████████▏                      | 15/32 [01:07<01:15,  4.41s/it] 50%|█████████████████████▌                     | 16/32 [01:11<01:10,  4.43s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.41s/it] 56%|████████████████████████▏                  | 18/32 [01:20<01:01,  4.41s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:58,  4.47s/it] 62%|██████████████████████████▉                | 20/32 [01:29<00:53,  4.45s/it] 66%|████████████████████████████▏              | 21/32 [01:33<00:48,  4.43s/it] 69%|█████████████████████████████▌             | 22/32 [01:38<00:44,  4.43s/it] 72%|██████████████████████████████▉            | 23/32 [01:42<00:40,  4.46s/it] 75%|████████████████████████████████▎          | 24/32 [01:47<00:35,  4.43s/it] 78%|█████████████████████████████████▌         | 25/32 [01:51<00:31,  4.43s/it] 81%|██████████████████████████████████▉        | 26/32 [01:55<00:26,  4.42s/it] 84%|████████████████████████████████████▎      | 27/32 [02:00<00:22,  4.41s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:04<00:17,  4.45s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:09<00:13,  4.44s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:13<00:08,  4.43s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:18<00:04,  4.46s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.43s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.45s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
 25%|██████████▏                             | 14/55 [26:47<1:37:14, 142.31s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:18,  4.48s/it]  6%|██▊                                         | 2/32 [00:08<02:13,  4.44s/it]  9%|████▏                                       | 3/32 [00:13<02:09,  4.48s/it] 12%|█████▌                                      | 4/32 [00:17<02:04,  4.46s/it] 16%|██████▉                                     | 5/32 [00:22<01:59,  4.44s/it] 19%|████████▎                                   | 6/32 [00:27<01:58,  4.56s/it] 22%|█████████▋                                  | 7/32 [00:31<01:52,  4.50s/it] 25%|███████████                                 | 8/32 [00:35<01:47,  4.46s/it] 28%|████████████▍                               | 9/32 [00:40<01:41,  4.43s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.45s/it] 34%|██████████████▊                            | 11/32 [00:49<01:33,  4.43s/it] 38%|████████████████▏                          | 12/32 [00:53<01:29,  4.45s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:24,  4.44s/it] 44%|██████████████████▊                        | 14/32 [01:02<01:19,  4.43s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:15,  4.43s/it] 50%|█████████████████████▌                     | 16/32 [01:11<01:10,  4.42s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.41s/it] 56%|████████████████████████▏                  | 18/32 [01:20<01:02,  4.43s/it] 59%|█████████████████████████▌                 | 19/32 [01:24<00:57,  4.41s/it] 62%|██████████████████████████▉                | 20/32 [01:29<00:54,  4.51s/it] 66%|████████████████████████████▏              | 21/32 [01:33<00:49,  4.50s/it] 69%|█████████████████████████████▌             | 22/32 [01:38<00:44,  4.48s/it] 72%|██████████████████████████████▉            | 23/32 [01:42<00:40,  4.49s/it] 75%|████████████████████████████████▎          | 24/32 [01:46<00:35,  4.46s/it] 78%|█████████████████████████████████▌         | 25/32 [01:51<00:31,  4.43s/it] 81%|██████████████████████████████████▉        | 26/32 [01:55<00:26,  4.48s/it] 84%|████████████████████████████████████▎      | 27/32 [02:00<00:22,  4.48s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:04<00:17,  4.48s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:09<00:13,  4.54s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:14<00:09,  4.53s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:18<00:04,  4.49s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.45s/it]100%|███████████████████████████████████████████| 32/32 [02:22<00:00,  4.46s/it]
Consecutive layer pairs:  torch.Size([32, 1229, 1229])
 27%|██████████▉                             | 15/55 [30:01<1:45:23, 158.08s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:36,  1.18s/it]  6%|██▊                                         | 2/32 [00:02<00:36,  1.20s/it]  9%|████▏                                       | 3/32 [00:03<00:34,  1.18s/it] 12%|█████▌                                      | 4/32 [00:04<00:32,  1.17s/it] 16%|██████▉                                     | 5/32 [00:05<00:31,  1.16s/it] 19%|████████▎                                   | 6/32 [00:06<00:29,  1.15s/it] 22%|█████████▋                                  | 7/32 [00:08<00:28,  1.16s/it] 25%|███████████                                 | 8/32 [00:09<00:28,  1.17s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.16s/it] 31%|█████████████▍                             | 10/32 [00:11<00:25,  1.15s/it] 34%|██████████████▊                            | 11/32 [00:12<00:24,  1.15s/it] 38%|████████████████▏                          | 12/32 [00:13<00:22,  1.15s/it] 41%|█████████████████▍                         | 13/32 [00:15<00:21,  1.15s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:20,  1.14s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:19,  1.16s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.16s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:17,  1.15s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:16,  1.15s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:14,  1.15s/it] 62%|██████████████████████████▉                | 20/32 [00:23<00:13,  1.16s/it] 66%|████████████████████████████▏              | 21/32 [00:24<00:12,  1.16s/it] 69%|█████████████████████████████▌             | 22/32 [00:25<00:11,  1.16s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.15s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.15s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:08,  1.15s/it] 81%|██████████████████████████████████▉        | 26/32 [00:30<00:06,  1.15s/it] 84%|████████████████████████████████████▎      | 27/32 [00:31<00:05,  1.14s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:32<00:04,  1.13s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:33<00:03,  1.13s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.13s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.13s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.13s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.15s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 29%|███████████▋                            | 16/55 [30:59<1:23:06, 127.85s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:34,  1.11s/it]  6%|██▊                                         | 2/32 [00:02<00:33,  1.12s/it]  9%|████▏                                       | 3/32 [00:03<00:32,  1.13s/it] 12%|█████▌                                      | 4/32 [00:04<00:31,  1.13s/it] 16%|██████▉                                     | 5/32 [00:05<00:30,  1.13s/it] 19%|████████▎                                   | 6/32 [00:06<00:29,  1.15s/it] 22%|█████████▋                                  | 7/32 [00:07<00:28,  1.14s/it] 25%|███████████                                 | 8/32 [00:09<00:27,  1.14s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.14s/it] 31%|█████████████▍                             | 10/32 [00:11<00:25,  1.14s/it] 34%|██████████████▊                            | 11/32 [00:12<00:23,  1.14s/it] 38%|████████████████▏                          | 12/32 [00:13<00:22,  1.14s/it] 41%|█████████████████▍                         | 13/32 [00:14<00:21,  1.13s/it] 44%|██████████████████▊                        | 14/32 [00:15<00:20,  1.13s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:20,  1.20s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.19s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:17,  1.17s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:16,  1.18s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:15,  1.16s/it] 62%|██████████████████████████▉                | 20/32 [00:22<00:13,  1.15s/it] 66%|████████████████████████████▏              | 21/32 [00:24<00:12,  1.15s/it] 69%|█████████████████████████████▌             | 22/32 [00:25<00:11,  1.14s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.14s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.14s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:07,  1.14s/it] 81%|██████████████████████████████████▉        | 26/32 [00:29<00:06,  1.14s/it] 84%|████████████████████████████████████▎      | 27/32 [00:30<00:05,  1.14s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:32<00:04,  1.14s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:33<00:03,  1.17s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.16s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.15s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.14s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.15s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 31%|████████████▎                           | 17/55 [31:55<1:07:13, 106.13s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:34,  1.11s/it]  6%|██▊                                         | 2/32 [00:02<00:33,  1.13s/it]  9%|████▏                                       | 3/32 [00:03<00:32,  1.12s/it] 12%|█████▌                                      | 4/32 [00:04<00:31,  1.12s/it] 16%|██████▉                                     | 5/32 [00:05<00:30,  1.13s/it] 19%|████████▎                                   | 6/32 [00:06<00:29,  1.13s/it] 22%|█████████▋                                  | 7/32 [00:07<00:28,  1.13s/it] 25%|███████████                                 | 8/32 [00:09<00:27,  1.15s/it] 28%|████████████▍                               | 9/32 [00:10<00:26,  1.16s/it] 31%|█████████████▍                             | 10/32 [00:11<00:25,  1.15s/it] 34%|██████████████▊                            | 11/32 [00:12<00:23,  1.14s/it] 38%|████████████████▏                          | 12/32 [00:13<00:22,  1.14s/it] 41%|█████████████████▍                         | 13/32 [00:14<00:21,  1.13s/it] 44%|██████████████████▊                        | 14/32 [00:15<00:20,  1.13s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:19,  1.14s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:18,  1.14s/it] 53%|██████████████████████▊                    | 17/32 [00:19<00:16,  1.13s/it] 56%|████████████████████████▏                  | 18/32 [00:20<00:15,  1.13s/it] 59%|█████████████████████████▌                 | 19/32 [00:21<00:14,  1.13s/it] 62%|██████████████████████████▉                | 20/32 [00:22<00:13,  1.13s/it] 66%|████████████████████████████▏              | 21/32 [00:23<00:12,  1.13s/it] 69%|█████████████████████████████▌             | 22/32 [00:24<00:11,  1.13s/it] 72%|██████████████████████████████▉            | 23/32 [00:26<00:10,  1.13s/it] 75%|████████████████████████████████▎          | 24/32 [00:27<00:09,  1.13s/it] 78%|█████████████████████████████████▌         | 25/32 [00:28<00:07,  1.13s/it] 81%|██████████████████████████████████▉        | 26/32 [00:29<00:06,  1.13s/it] 84%|████████████████████████████████████▎      | 27/32 [00:30<00:05,  1.17s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:31<00:04,  1.16s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:32<00:03,  1.15s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:34<00:02,  1.14s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:35<00:01,  1.14s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.13s/it]100%|███████████████████████████████████████████| 32/32 [00:36<00:00,  1.14s/it]
Consecutive layer pairs:  torch.Size([32, 780, 780])
 33%|██████████████                             | 18/55 [32:59<57:38, 93.47s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:59,  1.93s/it]  6%|██▊                                         | 2/32 [00:03<00:58,  1.95s/it]  9%|████▏                                       | 3/32 [00:05<00:56,  1.94s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.94s/it] 16%|██████▉                                     | 5/32 [00:09<00:52,  1.94s/it] 19%|████████▎                                   | 6/32 [00:11<00:51,  1.99s/it] 22%|█████████▋                                  | 7/32 [00:13<00:49,  1.98s/it] 25%|███████████                                 | 8/32 [00:15<00:47,  2.00s/it] 28%|████████████▍                               | 9/32 [00:17<00:45,  1.97s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.97s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.98s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.99s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:38,  2.02s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:36,  2.01s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.98s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:31,  1.97s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:29,  1.96s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.97s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.96s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.96s/it] 66%|████████████████████████████▏              | 21/32 [00:41<00:21,  1.96s/it] 69%|█████████████████████████████▌             | 22/32 [00:43<00:19,  1.95s/it] 72%|██████████████████████████████▉            | 23/32 [00:45<00:17,  1.95s/it] 75%|████████████████████████████████▎          | 24/32 [00:47<00:15,  1.95s/it] 78%|█████████████████████████████████▌         | 25/32 [00:49<00:13,  1.96s/it] 81%|██████████████████████████████████▉        | 26/32 [00:51<00:11,  2.00s/it] 84%|████████████████████████████████████▎      | 27/32 [00:53<00:10,  2.01s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:55<00:07,  1.99s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:57<00:06,  2.01s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:59<00:04,  2.05s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:01<00:02,  2.08s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  2.05s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.99s/it]
Consecutive layer pairs:  torch.Size([32, 948, 948])
 35%|██████████████▊                            | 19/55 [34:32<56:05, 93.47s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<01:00,  1.96s/it]  6%|██▊                                         | 2/32 [00:03<00:58,  1.96s/it]  9%|████▏                                       | 3/32 [00:05<00:57,  1.97s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.96s/it] 16%|██████▉                                     | 5/32 [00:09<00:52,  1.95s/it] 19%|████████▎                                   | 6/32 [00:11<00:50,  1.96s/it] 22%|█████████▋                                  | 7/32 [00:13<00:49,  1.96s/it] 25%|███████████                                 | 8/32 [00:15<00:47,  1.96s/it] 28%|████████████▍                               | 9/32 [00:17<00:45,  1.96s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.97s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.96s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.97s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:37,  1.96s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:35,  1.98s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.98s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:32,  2.01s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:29,  1.99s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.97s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.97s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.96s/it] 66%|████████████████████████████▏              | 21/32 [00:41<00:21,  1.97s/it] 69%|█████████████████████████████▌             | 22/32 [00:43<00:19,  1.95s/it] 72%|██████████████████████████████▉            | 23/32 [00:45<00:18,  2.02s/it] 75%|████████████████████████████████▎          | 24/32 [00:47<00:16,  2.01s/it] 78%|█████████████████████████████████▌         | 25/32 [00:49<00:13,  1.99s/it] 81%|██████████████████████████████████▉        | 26/32 [00:51<00:11,  1.97s/it] 84%|████████████████████████████████████▎      | 27/32 [00:53<00:09,  1.96s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:55<00:07,  1.99s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:57<00:05,  1.98s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:59<00:03,  1.97s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:01<00:01,  1.96s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.95s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.97s/it]
Consecutive layer pairs:  torch.Size([32, 948, 948])
 36%|███████████████▎                          | 20/55 [36:31<59:01, 101.18s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:59,  1.92s/it]  6%|██▊                                         | 2/32 [00:03<00:59,  1.97s/it]  9%|████▏                                       | 3/32 [00:05<00:56,  1.95s/it] 12%|█████▌                                      | 4/32 [00:07<00:54,  1.95s/it] 16%|██████▉                                     | 5/32 [00:09<00:52,  1.94s/it] 19%|████████▎                                   | 6/32 [00:11<00:50,  1.94s/it] 22%|█████████▋                                  | 7/32 [00:13<00:48,  1.94s/it] 25%|███████████                                 | 8/32 [00:15<00:48,  2.02s/it] 28%|████████████▍                               | 9/32 [00:17<00:45,  2.00s/it] 31%|█████████████▍                             | 10/32 [00:19<00:43,  1.98s/it] 34%|██████████████▊                            | 11/32 [00:21<00:41,  1.97s/it] 38%|████████████████▏                          | 12/32 [00:23<00:39,  1.96s/it] 41%|█████████████████▍                         | 13/32 [00:25<00:37,  1.97s/it] 44%|██████████████████▊                        | 14/32 [00:27<00:35,  1.97s/it] 47%|████████████████████▏                      | 15/32 [00:29<00:33,  1.95s/it] 50%|█████████████████████▌                     | 16/32 [00:31<00:32,  2.01s/it] 53%|██████████████████████▊                    | 17/32 [00:33<00:30,  2.02s/it] 56%|████████████████████████▏                  | 18/32 [00:35<00:27,  1.99s/it] 59%|█████████████████████████▌                 | 19/32 [00:37<00:25,  1.98s/it] 62%|██████████████████████████▉                | 20/32 [00:39<00:23,  1.97s/it] 66%|████████████████████████████▏              | 21/32 [00:41<00:21,  1.98s/it] 69%|█████████████████████████████▌             | 22/32 [00:43<00:19,  1.98s/it] 72%|██████████████████████████████▉            | 23/32 [00:45<00:17,  1.99s/it] 75%|████████████████████████████████▎          | 24/32 [00:47<00:16,  2.01s/it] 78%|█████████████████████████████████▌         | 25/32 [00:49<00:14,  2.00s/it] 81%|██████████████████████████████████▉        | 26/32 [00:51<00:11,  1.99s/it] 84%|████████████████████████████████████▎      | 27/32 [00:53<00:09,  1.97s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:55<00:07,  1.96s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:57<00:05,  1.96s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:59<00:03,  1.98s/it] 97%|█████████████████████████████████████████▋ | 31/32 [01:01<00:01,  1.97s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.96s/it]100%|███████████████████████████████████████████| 32/32 [01:03<00:00,  1.97s/it]
Consecutive layer pairs:  torch.Size([32, 948, 948])
 38%|████████████████▍                          | 21/55 [37:58<54:56, 96.96s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:15,  4.36s/it]  6%|██▊                                         | 2/32 [00:08<02:10,  4.35s/it]  9%|████▏                                       | 3/32 [00:13<02:06,  4.36s/it] 12%|█████▌                                      | 4/32 [00:17<02:03,  4.40s/it] 16%|██████▉                                     | 5/32 [00:22<01:59,  4.44s/it] 19%|████████▎                                   | 6/32 [00:26<01:54,  4.41s/it] 22%|█████████▋                                  | 7/32 [00:31<01:53,  4.54s/it] 25%|███████████                                 | 8/32 [00:35<01:47,  4.49s/it] 28%|████████████▍                               | 9/32 [00:39<01:42,  4.46s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.42s/it] 34%|██████████████▊                            | 11/32 [00:48<01:32,  4.41s/it] 38%|████████████████▏                          | 12/32 [00:53<01:28,  4.41s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.40s/it] 44%|██████████████████▊                        | 14/32 [01:01<01:18,  4.38s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:14,  4.37s/it] 50%|█████████████████████▌                     | 16/32 [01:10<01:09,  4.36s/it] 53%|██████████████████████▊                    | 17/32 [01:14<01:05,  4.35s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:00,  4.35s/it] 59%|█████████████████████████▌                 | 19/32 [01:23<00:56,  4.34s/it] 62%|██████████████████████████▉                | 20/32 [01:27<00:52,  4.34s/it] 66%|████████████████████████████▏              | 21/32 [01:32<00:47,  4.34s/it] 69%|█████████████████████████████▌             | 22/32 [01:36<00:43,  4.36s/it] 72%|██████████████████████████████▉            | 23/32 [01:40<00:39,  4.36s/it] 75%|████████████████████████████████▎          | 24/32 [01:45<00:35,  4.39s/it] 78%|█████████████████████████████████▌         | 25/32 [01:49<00:30,  4.39s/it] 81%|██████████████████████████████████▉        | 26/32 [01:54<00:26,  4.39s/it] 84%|████████████████████████████████████▎      | 27/32 [01:58<00:22,  4.42s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:03<00:17,  4.49s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:08<00:13,  4.62s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:12<00:09,  4.53s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:16<00:04,  4.47s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.43s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.41s/it]
Consecutive layer pairs:  torch.Size([32, 1240, 1240])
 40%|████████████████                        | 22/55 [41:20<1:10:41, 128.53s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:13,  4.29s/it]  6%|██▊                                         | 2/32 [00:08<02:10,  4.34s/it]  9%|████▏                                       | 3/32 [00:12<02:05,  4.33s/it] 12%|█████▌                                      | 4/32 [00:17<02:01,  4.34s/it] 16%|██████▉                                     | 5/32 [00:22<02:01,  4.49s/it] 19%|████████▎                                   | 6/32 [00:26<01:57,  4.51s/it] 22%|█████████▋                                  | 7/32 [00:31<01:51,  4.48s/it] 25%|███████████                                 | 8/32 [00:35<01:46,  4.43s/it] 28%|████████████▍                               | 9/32 [00:39<01:41,  4.40s/it] 31%|█████████████▍                             | 10/32 [00:44<01:37,  4.45s/it] 34%|██████████████▊                            | 11/32 [00:48<01:32,  4.42s/it] 38%|████████████████▏                          | 12/32 [00:53<01:28,  4.41s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.39s/it] 44%|██████████████████▊                        | 14/32 [01:01<01:19,  4.43s/it] 47%|████████████████████▏                      | 15/32 [01:06<01:14,  4.40s/it] 50%|█████████████████████▌                     | 16/32 [01:10<01:10,  4.39s/it] 53%|██████████████████████▊                    | 17/32 [01:15<01:06,  4.42s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:01,  4.39s/it] 59%|█████████████████████████▌                 | 19/32 [01:23<00:57,  4.40s/it] 62%|██████████████████████████▉                | 20/32 [01:28<00:52,  4.40s/it] 66%|████████████████████████████▏              | 21/32 [01:32<00:48,  4.39s/it] 69%|█████████████████████████████▌             | 22/32 [01:36<00:43,  4.38s/it] 72%|██████████████████████████████▉            | 23/32 [01:41<00:39,  4.37s/it] 75%|████████████████████████████████▎          | 24/32 [01:45<00:35,  4.43s/it] 78%|█████████████████████████████████▌         | 25/32 [01:50<00:30,  4.41s/it] 81%|██████████████████████████████████▉        | 26/32 [01:54<00:26,  4.38s/it] 84%|████████████████████████████████████▎      | 27/32 [01:58<00:21,  4.39s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:03<00:17,  4.42s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:07<00:13,  4.40s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:12<00:08,  4.38s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:16<00:04,  4.39s/it]100%|███████████████████████████████████████████| 32/32 [02:20<00:00,  4.39s/it]100%|███████████████████████████████████████████| 32/32 [02:20<00:00,  4.40s/it]
Consecutive layer pairs:  torch.Size([32, 1240, 1240])
 42%|████████████████▋                       | 23/55 [44:37<1:19:28, 149.02s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:15,  4.37s/it]  6%|██▊                                         | 2/32 [00:08<02:12,  4.43s/it]  9%|████▏                                       | 3/32 [00:13<02:08,  4.44s/it] 12%|█████▌                                      | 4/32 [00:17<02:03,  4.40s/it] 16%|██████▉                                     | 5/32 [00:22<01:58,  4.39s/it] 19%|████████▎                                   | 6/32 [00:26<01:53,  4.38s/it] 22%|█████████▋                                  | 7/32 [00:30<01:49,  4.39s/it] 25%|███████████                                 | 8/32 [00:35<01:46,  4.42s/it] 28%|████████████▍                               | 9/32 [00:39<01:41,  4.41s/it] 31%|█████████████▍                             | 10/32 [00:43<01:36,  4.39s/it] 34%|██████████████▊                            | 11/32 [00:48<01:32,  4.39s/it] 38%|████████████████▏                          | 12/32 [00:52<01:27,  4.38s/it] 41%|█████████████████▍                         | 13/32 [00:57<01:23,  4.38s/it] 44%|██████████████████▊                        | 14/32 [01:01<01:18,  4.38s/it] 47%|████████████████████▏                      | 15/32 [01:05<01:14,  4.39s/it] 50%|█████████████████████▌                     | 16/32 [01:10<01:10,  4.41s/it] 53%|██████████████████████▊                    | 17/32 [01:14<01:06,  4.40s/it] 56%|████████████████████████▏                  | 18/32 [01:19<01:01,  4.39s/it] 59%|█████████████████████████▌                 | 19/32 [01:23<00:57,  4.39s/it] 62%|██████████████████████████▉                | 20/32 [01:27<00:52,  4.38s/it] 66%|████████████████████████████▏              | 21/32 [01:32<00:47,  4.36s/it] 69%|█████████████████████████████▌             | 22/32 [01:36<00:43,  4.36s/it] 72%|██████████████████████████████▉            | 23/32 [01:41<00:40,  4.50s/it] 75%|████████████████████████████████▎          | 24/32 [01:45<00:35,  4.44s/it] 78%|█████████████████████████████████▌         | 25/32 [01:50<00:30,  4.42s/it] 81%|██████████████████████████████████▉        | 26/32 [01:54<00:26,  4.41s/it] 84%|████████████████████████████████████▎      | 27/32 [01:58<00:21,  4.39s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:03<00:18,  4.54s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:08<00:13,  4.52s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:12<00:08,  4.46s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:16<00:04,  4.42s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.43s/it]100%|███████████████████████████████████████████| 32/32 [02:21<00:00,  4.41s/it]
Consecutive layer pairs:  torch.Size([32, 1240, 1240])
 44%|█████████████████▍                      | 24/55 [47:55<1:24:33, 163.66s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:36,  1.18s/it]  6%|██▊                                         | 2/32 [00:02<00:36,  1.22s/it]  9%|████▏                                       | 3/32 [00:03<00:34,  1.20s/it] 12%|█████▌                                      | 4/32 [00:04<00:33,  1.21s/it] 16%|██████▉                                     | 5/32 [00:05<00:32,  1.20s/it] 19%|████████▎                                   | 6/32 [00:07<00:31,  1.19s/it] 22%|█████████▋                                  | 7/32 [00:08<00:29,  1.19s/it] 25%|███████████                                 | 8/32 [00:09<00:28,  1.19s/it] 28%|████████████▍                               | 9/32 [00:10<00:27,  1.18s/it] 31%|█████████████▍                             | 10/32 [00:11<00:26,  1.18s/it] 34%|██████████████▊                            | 11/32 [00:13<00:24,  1.18s/it] 38%|████████████████▏                          | 12/32 [00:14<00:23,  1.18s/it] 41%|█████████████████▍                         | 13/32 [00:15<00:22,  1.18s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:21,  1.18s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:20,  1.19s/it] 50%|█████████████████████▌                     | 16/32 [00:19<00:19,  1.19s/it] 53%|██████████████████████▊                    | 17/32 [00:20<00:18,  1.20s/it] 56%|████████████████████████▏                  | 18/32 [00:21<00:16,  1.21s/it] 59%|█████████████████████████▌                 | 19/32 [00:22<00:16,  1.23s/it] 62%|██████████████████████████▉                | 20/32 [00:23<00:14,  1.21s/it] 66%|████████████████████████████▏              | 21/32 [00:25<00:13,  1.20s/it] 69%|█████████████████████████████▌             | 22/32 [00:26<00:11,  1.20s/it] 72%|██████████████████████████████▉            | 23/32 [00:27<00:10,  1.19s/it] 75%|████████████████████████████████▎          | 24/32 [00:28<00:09,  1.19s/it] 78%|█████████████████████████████████▌         | 25/32 [00:29<00:08,  1.19s/it] 81%|██████████████████████████████████▉        | 26/32 [00:31<00:07,  1.23s/it] 84%|████████████████████████████████████▎      | 27/32 [00:32<00:06,  1.21s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:33<00:04,  1.20s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:34<00:03,  1.19s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:35<00:02,  1.19s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:37<00:01,  1.19s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.18s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.20s/it]
Consecutive layer pairs:  torch.Size([32, 791, 791])
 45%|██████████████████▏                     | 25/55 [48:57<1:06:35, 133.20s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:35,  1.16s/it]  6%|██▊                                         | 2/32 [00:02<00:35,  1.17s/it]  9%|████▏                                       | 3/32 [00:03<00:34,  1.17s/it] 12%|█████▌                                      | 4/32 [00:04<00:32,  1.17s/it] 16%|██████▉                                     | 5/32 [00:05<00:31,  1.18s/it] 19%|████████▎                                   | 6/32 [00:07<00:30,  1.17s/it] 22%|█████████▋                                  | 7/32 [00:08<00:29,  1.19s/it] 25%|███████████                                 | 8/32 [00:09<00:28,  1.18s/it] 28%|████████████▍                               | 9/32 [00:10<00:27,  1.18s/it] 31%|█████████████▍                             | 10/32 [00:11<00:26,  1.18s/it] 34%|██████████████▊                            | 11/32 [00:12<00:24,  1.19s/it] 38%|████████████████▏                          | 12/32 [00:14<00:23,  1.19s/it] 41%|█████████████████▍                         | 13/32 [00:15<00:22,  1.20s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:21,  1.20s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:20,  1.19s/it] 50%|█████████████████████▌                     | 16/32 [00:18<00:19,  1.19s/it] 53%|██████████████████████▊                    | 17/32 [00:20<00:17,  1.19s/it] 56%|████████████████████████▏                  | 18/32 [00:21<00:16,  1.18s/it] 59%|█████████████████████████▌                 | 19/32 [00:22<00:15,  1.18s/it] 62%|██████████████████████████▉                | 20/32 [00:23<00:14,  1.22s/it] 66%|████████████████████████████▏              | 21/32 [00:25<00:13,  1.21s/it] 69%|█████████████████████████████▌             | 22/32 [00:26<00:11,  1.20s/it] 72%|██████████████████████████████▉            | 23/32 [00:27<00:10,  1.20s/it] 75%|████████████████████████████████▎          | 24/32 [00:28<00:10,  1.25s/it] 78%|█████████████████████████████████▌         | 25/32 [00:29<00:08,  1.25s/it] 81%|██████████████████████████████████▉        | 26/32 [00:31<00:07,  1.22s/it] 84%|████████████████████████████████████▎      | 27/32 [00:32<00:06,  1.21s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:33<00:04,  1.20s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:34<00:03,  1.19s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:35<00:02,  1.19s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:37<00:01,  1.19s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.18s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.19s/it]
Consecutive layer pairs:  torch.Size([32, 791, 791])
 47%|██████████████████▉                     | 26/55 [50:56<1:02:21, 129.01s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:01<00:35,  1.16s/it]  6%|██▊                                         | 2/32 [00:02<00:35,  1.17s/it]  9%|████▏                                       | 3/32 [00:03<00:33,  1.17s/it] 12%|█████▌                                      | 4/32 [00:04<00:32,  1.17s/it] 16%|██████▉                                     | 5/32 [00:05<00:31,  1.18s/it] 19%|████████▎                                   | 6/32 [00:07<00:30,  1.19s/it] 22%|█████████▋                                  | 7/32 [00:08<00:29,  1.19s/it] 25%|███████████                                 | 8/32 [00:09<00:28,  1.18s/it] 28%|████████████▍                               | 9/32 [00:10<00:27,  1.19s/it] 31%|█████████████▍                             | 10/32 [00:11<00:26,  1.18s/it] 34%|██████████████▊                            | 11/32 [00:12<00:24,  1.18s/it] 38%|████████████████▏                          | 12/32 [00:14<00:23,  1.18s/it] 41%|█████████████████▍                         | 13/32 [00:15<00:23,  1.22s/it] 44%|██████████████████▊                        | 14/32 [00:16<00:21,  1.22s/it] 47%|████████████████████▏                      | 15/32 [00:17<00:20,  1.21s/it] 50%|█████████████████████▌                     | 16/32 [00:19<00:19,  1.21s/it] 53%|██████████████████████▊                    | 17/32 [00:20<00:18,  1.20s/it] 56%|████████████████████████▏                  | 18/32 [00:21<00:16,  1.20s/it] 59%|█████████████████████████▌                 | 19/32 [00:22<00:15,  1.19s/it] 62%|██████████████████████████▉                | 20/32 [00:23<00:14,  1.19s/it] 66%|████████████████████████████▏              | 21/32 [00:25<00:13,  1.19s/it] 69%|█████████████████████████████▌             | 22/32 [00:26<00:11,  1.19s/it] 72%|██████████████████████████████▉            | 23/32 [00:27<00:10,  1.21s/it] 75%|████████████████████████████████▎          | 24/32 [00:28<00:09,  1.21s/it] 78%|█████████████████████████████████▌         | 25/32 [00:29<00:08,  1.20s/it] 81%|██████████████████████████████████▉        | 26/32 [00:31<00:07,  1.21s/it] 84%|████████████████████████████████████▎      | 27/32 [00:32<00:05,  1.20s/it] 88%|█████████████████████████████████████▋     | 28/32 [00:33<00:04,  1.20s/it] 91%|██████████████████████████████████████▉    | 29/32 [00:34<00:03,  1.19s/it] 94%|████████████████████████████████████████▎  | 30/32 [00:35<00:02,  1.19s/it] 97%|█████████████████████████████████████████▋ | 31/32 [00:36<00:01,  1.19s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.19s/it]100%|███████████████████████████████████████████| 32/32 [00:38<00:00,  1.19s/it]
Consecutive layer pairs:  torch.Size([32, 791, 791])
 49%|████████████████████▌                     | 27/55 [51:50<49:41, 106.50s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.84it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  3.83it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  3.83it/s] 12%|█████▌                                      | 4/32 [00:01<00:07,  3.80it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.82it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  3.83it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  3.79it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.81it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.83it/s] 31%|█████████████▍                             | 10/32 [00:02<00:05,  3.84it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.84it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.73it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.75it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  3.78it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  3.77it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.77it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  3.79it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  3.81it/s] 59%|█████████████████████████▌                 | 19/32 [00:04<00:03,  3.82it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.84it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.83it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  3.82it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.81it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.81it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.82it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.82it/s] 84%|████████████████████████████████████▎      | 27/32 [00:07<00:01,  3.81it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.81it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  3.82it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  3.83it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:08<00:00,  3.84it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.82it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.81it/s]
Consecutive layer pairs:  torch.Size([32, 458, 458])
 51%|█████████████████████▉                     | 28/55 [52:05<35:32, 79.00s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.84it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  3.85it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  3.83it/s] 12%|█████▌                                      | 4/32 [00:01<00:07,  3.83it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.85it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  3.85it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  3.84it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.85it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.56it/s] 31%|█████████████▍                             | 10/32 [00:02<00:06,  3.58it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.66it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.72it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.74it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  3.77it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  3.79it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.81it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  3.82it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  3.83it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.81it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.81it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.82it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  3.84it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.84it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.85it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.84it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.85it/s] 84%|████████████████████████████████████▎      | 27/32 [00:07<00:01,  3.85it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.85it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  3.83it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  3.83it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:08<00:00,  3.84it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.84it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.80it/s]
Consecutive layer pairs:  torch.Size([32, 458, 458])
 53%|██████████████████████▋                    | 29/55 [52:21<26:02, 60.10s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:07,  3.90it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  3.85it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  3.84it/s] 12%|█████▌                                      | 4/32 [00:01<00:07,  3.84it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.82it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  3.83it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  3.66it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.63it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.70it/s] 31%|█████████████▍                             | 10/32 [00:02<00:05,  3.72it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.76it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.76it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.78it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  3.80it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  3.82it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.84it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  3.84it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  3.84it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.84it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.84it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.83it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  3.84it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.85it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.84it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.84it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.84it/s] 84%|████████████████████████████████████▎      | 27/32 [00:07<00:01,  3.82it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.72it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  3.74it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  3.70it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:08<00:00,  3.72it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.76it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.79it/s]
Consecutive layer pairs:  torch.Size([32, 458, 458])
 55%|███████████████████████▍                   | 30/55 [54:46<35:34, 85.37s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:09,  3.35it/s]  6%|██▊                                         | 2/32 [00:00<00:09,  3.33it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.32it/s] 12%|█████▌                                      | 4/32 [00:01<00:08,  3.30it/s] 16%|██████▉                                     | 5/32 [00:01<00:08,  3.30it/s] 19%|████████▎                                   | 6/32 [00:01<00:07,  3.27it/s] 22%|█████████▋                                  | 7/32 [00:02<00:08,  2.99it/s] 25%|███████████                                 | 8/32 [00:02<00:07,  3.08it/s] 28%|████████████▍                               | 9/32 [00:02<00:07,  3.15it/s] 31%|█████████████▍                             | 10/32 [00:03<00:07,  3.06it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.13it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.18it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:05,  3.21it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.24it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.27it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.28it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.28it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.28it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.28it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:03,  3.24it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.17it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:03,  3.21it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:02,  3.24it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.11it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.16it/s] 81%|██████████████████████████████████▉        | 26/32 [00:08<00:01,  3.13it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.14it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.10it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:09<00:00,  3.02it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  2.98it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.04it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.11it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.17it/s]
Consecutive layer pairs:  torch.Size([32, 483, 483])
 56%|████████████████████████▏                  | 31/55 [55:03<25:59, 64.98s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:09,  3.38it/s]  6%|██▊                                         | 2/32 [00:00<00:09,  3.32it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.32it/s] 12%|█████▌                                      | 4/32 [00:01<00:08,  3.15it/s] 16%|██████▉                                     | 5/32 [00:01<00:08,  3.10it/s] 19%|████████▎                                   | 6/32 [00:01<00:08,  3.16it/s] 22%|█████████▋                                  | 7/32 [00:02<00:07,  3.22it/s] 25%|███████████                                 | 8/32 [00:02<00:07,  3.23it/s] 28%|████████████▍                               | 9/32 [00:02<00:07,  3.22it/s] 31%|█████████████▍                             | 10/32 [00:03<00:06,  3.24it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.26it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.28it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:05,  3.29it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.30it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.31it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.31it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.31it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.30it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.30it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:03,  3.30it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.30it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:03,  3.30it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:02,  3.31it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.30it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.30it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.29it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.30it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.30it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.23it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  3.25it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.27it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.28it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.27it/s]
Consecutive layer pairs:  torch.Size([32, 483, 483])
 58%|█████████████████████████                  | 32/55 [55:21<19:29, 50.84s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:10,  3.02it/s]  6%|██▊                                         | 2/32 [00:00<00:09,  3.19it/s]  9%|████▏                                       | 3/32 [00:00<00:09,  3.21it/s] 12%|█████▌                                      | 4/32 [00:01<00:09,  3.06it/s] 16%|██████▉                                     | 5/32 [00:01<00:08,  3.13it/s] 19%|████████▎                                   | 6/32 [00:01<00:08,  3.19it/s] 22%|█████████▋                                  | 7/32 [00:02<00:07,  3.22it/s] 25%|███████████                                 | 8/32 [00:02<00:07,  3.25it/s] 28%|████████████▍                               | 9/32 [00:02<00:07,  3.26it/s] 31%|█████████████▍                             | 10/32 [00:03<00:06,  3.27it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.28it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.29it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:05,  3.29it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.23it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.25it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.27it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.28it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.28it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.28it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:03,  3.30it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.29it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:03,  3.30it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:02,  3.29it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.29it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.31it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.31it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.30it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.31it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.29it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  3.10it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.16it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.20it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.24it/s]
Consecutive layer pairs:  torch.Size([32, 483, 483])
 60%|█████████████████████████▊                 | 33/55 [55:39<15:01, 41.00s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.26it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.32it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  7.64it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  7.86it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  7.99it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  7.93it/s] 22%|█████████▋                                  | 7/32 [00:00<00:03,  8.08it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.17it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.26it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.19it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.27it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  7.88it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.02it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.16it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:02,  8.06it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:01,  8.20it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:01,  8.20it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.30it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.00it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  7.98it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  8.09it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.15it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.04it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.12it/s] 78%|█████████████████████████████████▌         | 25/32 [00:03<00:00,  8.20it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  8.24it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.24it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.11it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.19it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.23it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.25it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.26it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.13it/s]
Consecutive layer pairs:  torch.Size([32, 336, 336])
 62%|██████████████████████████▌                | 34/55 [55:49<11:06, 31.75s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.27it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.39it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  8.38it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  8.41it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  8.42it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  8.43it/s] 22%|█████████▋                                  | 7/32 [00:00<00:02,  8.39it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.30it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.31it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.19it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.26it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  8.29it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.27it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.33it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:02,  7.83it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:02,  7.99it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:01,  8.12it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.21it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.23it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  8.25it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  8.23it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.26it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.28it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.32it/s] 78%|█████████████████████████████████▌         | 25/32 [00:03<00:00,  8.33it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  8.38it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.39it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.39it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.42it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.41it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.39it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.33it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.29it/s]
Consecutive layer pairs:  torch.Size([32, 336, 336])
 64%|███████████████████████████▎               | 35/55 [55:59<08:25, 25.29s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.37it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.43it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  8.38it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  8.40it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  8.40it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  8.38it/s] 22%|█████████▋                                  | 7/32 [00:00<00:02,  8.36it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.22it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.26it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.26it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.29it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  8.29it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.33it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.34it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:02,  8.36it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:01,  8.37it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:01,  8.39it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.34it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.35it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  8.39it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  8.35it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.34it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.37it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.37it/s] 78%|█████████████████████████████████▌         | 25/32 [00:02<00:00,  8.37it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  8.38it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.38it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.40it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.35it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.34it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.34it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.37it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.35it/s]
Consecutive layer pairs:  torch.Size([32, 336, 336])
 65%|████████████████████████████▏              | 36/55 [56:11<06:43, 21.26s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:07,  4.07it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  4.03it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  4.01it/s] 12%|█████▌                                      | 4/32 [00:00<00:06,  4.02it/s] 16%|██████▉                                     | 5/32 [00:01<00:06,  4.02it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  4.01it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  4.01it/s] 25%|███████████                                 | 8/32 [00:01<00:06,  3.98it/s] 28%|████████████▍                               | 9/32 [00:02<00:05,  3.98it/s] 31%|█████████████▍                             | 10/32 [00:02<00:05,  3.94it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.97it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.99it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:04,  4.00it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  4.02it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  4.01it/s] 50%|█████████████████████▌                     | 16/32 [00:03<00:03,  4.01it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  4.02it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  4.02it/s] 59%|█████████████████████████▌                 | 19/32 [00:04<00:03,  3.99it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.97it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.98it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  4.00it/s] 72%|██████████████████████████████▉            | 23/32 [00:05<00:02,  4.00it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.99it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.94it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.95it/s] 84%|████████████████████████████████████▎      | 27/32 [00:06<00:01,  3.97it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.98it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  3.99it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  3.99it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:07<00:00,  3.89it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.87it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.98it/s]
Consecutive layer pairs:  torch.Size([32, 449, 449])
 67%|████████████████████████████▉              | 37/55 [56:27<05:55, 19.72s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:07,  4.09it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  4.02it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  4.02it/s] 12%|█████▌                                      | 4/32 [00:00<00:06,  4.03it/s] 16%|██████▉                                     | 5/32 [00:01<00:06,  4.03it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  3.99it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  3.98it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.79it/s] 28%|████████████▍                               | 9/32 [00:02<00:05,  3.86it/s] 31%|█████████████▍                             | 10/32 [00:02<00:05,  3.89it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.92it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.95it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:04,  3.96it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  3.86it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  3.83it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.87it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  3.91it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  3.94it/s] 59%|█████████████████████████▌                 | 19/32 [00:04<00:03,  3.95it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.97it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.97it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  3.99it/s] 72%|██████████████████████████████▉            | 23/32 [00:05<00:02,  4.00it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.94it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.96it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.96it/s] 84%|████████████████████████████████████▎      | 27/32 [00:06<00:01,  3.97it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.97it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  3.97it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  3.98it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:07<00:00,  3.98it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.98it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.95it/s]
Consecutive layer pairs:  torch.Size([32, 449, 449])
 69%|█████████████████████████████▋             | 38/55 [56:42<05:12, 18.38s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:07,  4.03it/s]  6%|██▊                                         | 2/32 [00:00<00:07,  4.02it/s]  9%|████▏                                       | 3/32 [00:00<00:07,  4.01it/s] 12%|█████▌                                      | 4/32 [00:00<00:06,  4.02it/s] 16%|██████▉                                     | 5/32 [00:01<00:06,  4.01it/s] 19%|████████▎                                   | 6/32 [00:01<00:06,  3.87it/s] 22%|█████████▋                                  | 7/32 [00:01<00:06,  3.88it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.90it/s] 28%|████████████▍                               | 9/32 [00:02<00:05,  3.95it/s] 31%|█████████████▍                             | 10/32 [00:02<00:05,  3.79it/s] 34%|██████████████▊                            | 11/32 [00:02<00:05,  3.85it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.89it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:04,  3.89it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:04,  3.93it/s] 47%|████████████████████▏                      | 15/32 [00:03<00:04,  3.96it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.97it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:03,  3.98it/s] 56%|████████████████████████▏                  | 18/32 [00:04<00:03,  3.99it/s] 59%|█████████████████████████▌                 | 19/32 [00:04<00:03,  3.97it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.98it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:02,  3.99it/s] 69%|█████████████████████████████▌             | 22/32 [00:05<00:02,  3.98it/s] 72%|██████████████████████████████▉            | 23/32 [00:05<00:02,  3.99it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.98it/s] 78%|█████████████████████████████████▌         | 25/32 [00:06<00:01,  3.99it/s] 81%|██████████████████████████████████▉        | 26/32 [00:06<00:01,  3.99it/s] 84%|████████████████████████████████████▎      | 27/32 [00:06<00:01,  3.99it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  4.00it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:07<00:00,  4.00it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:07<00:00,  4.00it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:07<00:00,  4.00it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  4.00it/s]100%|███████████████████████████████████████████| 32/32 [00:08<00:00,  3.96it/s]
Consecutive layer pairs:  torch.Size([32, 449, 449])
 71%|██████████████████████████████▍            | 39/55 [56:58<04:41, 17.62s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.55it/s]  6%|██▊                                         | 2/32 [00:00<00:08,  3.45it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.48it/s] 12%|█████▌                                      | 4/32 [00:01<00:08,  3.38it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.41it/s] 19%|████████▎                                   | 6/32 [00:01<00:07,  3.43it/s] 22%|█████████▋                                  | 7/32 [00:02<00:07,  3.44it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.45it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.45it/s] 31%|█████████████▍                             | 10/32 [00:02<00:06,  3.45it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.46it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.47it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.47it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.37it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.38it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.40it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:04,  3.40it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.41it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.26it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.13it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.20it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:03,  3.28it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.33it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.33it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.35it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.33it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.35it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.39it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.41it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:08<00:00,  3.41it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.42it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.41it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.38it/s]
Consecutive layer pairs:  torch.Size([32, 474, 474])
 73%|███████████████████████████████▎           | 40/55 [57:17<04:28, 17.89s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.54it/s]  6%|██▊                                         | 2/32 [00:00<00:08,  3.53it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.51it/s] 12%|█████▌                                      | 4/32 [00:01<00:08,  3.46it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.47it/s] 19%|████████▎                                   | 6/32 [00:01<00:07,  3.50it/s] 22%|█████████▋                                  | 7/32 [00:02<00:07,  3.50it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.45it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.45it/s] 31%|█████████████▍                             | 10/32 [00:02<00:06,  3.41it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.42it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.39it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.40it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.42it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.35it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.35it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.25it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.31it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.36it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.40it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.42it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:02,  3.44it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.46it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.47it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.46it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.46it/s] 84%|████████████████████████████████████▎      | 27/32 [00:07<00:01,  3.46it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.44it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.43it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:08<00:00,  3.39it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.43it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.46it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.43it/s]
Consecutive layer pairs:  torch.Size([32, 474, 474])
 75%|████████████████████████████████           | 41/55 [57:35<04:10, 17.90s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.54it/s]  6%|██▊                                         | 2/32 [00:00<00:08,  3.52it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.52it/s] 12%|█████▌                                      | 4/32 [00:01<00:08,  3.47it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.48it/s] 19%|████████▎                                   | 6/32 [00:01<00:07,  3.42it/s] 22%|█████████▋                                  | 7/32 [00:02<00:07,  3.45it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.45it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.37it/s] 31%|█████████████▍                             | 10/32 [00:02<00:06,  3.38it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.40it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.39it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.41it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.42it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:04,  3.44it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.42it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:04,  3.42it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.28it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:04,  3.19it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.16it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.11it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:03,  3.21it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.27it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.34it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:02,  3.37it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.39it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.40it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:08<00:01,  3.41it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.38it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:08<00:00,  3.41it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:09<00:00,  3.43it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.43it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.38it/s]
Consecutive layer pairs:  torch.Size([32, 474, 474])
 76%|████████████████████████████████▊          | 42/55 [57:54<03:57, 18.30s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.90it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.87it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  8.90it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  8.80it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  8.82it/s] 19%|████████▎                                   | 6/32 [00:00<00:02,  8.83it/s] 22%|█████████▋                                  | 7/32 [00:00<00:02,  8.84it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.76it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.74it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.78it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.73it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  8.67it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.70it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.76it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:01,  8.79it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:01,  8.82it/s] 53%|██████████████████████▊                    | 17/32 [00:01<00:01,  8.82it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.79it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.80it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  8.07it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  7.93it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.12it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.30it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.37it/s] 78%|█████████████████████████████████▌         | 25/32 [00:02<00:00,  8.43it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  8.53it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.53it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.53it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.57it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.57it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.55it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.51it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.60it/s]
Consecutive layer pairs:  torch.Size([32, 327, 327])
 78%|█████████████████████████████████▌         | 43/55 [58:03<03:05, 15.45s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.72it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.82it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  8.82it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  8.84it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  8.88it/s] 19%|████████▎                                   | 6/32 [00:00<00:02,  8.90it/s] 22%|█████████▋                                  | 7/32 [00:00<00:02,  8.89it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.89it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.88it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.82it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.84it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  8.86it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.81it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.77it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:01,  8.77it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:01,  8.78it/s] 53%|██████████████████████▊                    | 17/32 [00:01<00:01,  8.79it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.76it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.78it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  8.81it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  8.77it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.69it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.71it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.75it/s] 78%|█████████████████████████████████▌         | 25/32 [00:02<00:00,  8.80it/s] 81%|██████████████████████████████████▉        | 26/32 [00:02<00:00,  8.82it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.84it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.85it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.85it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.78it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.76it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.76it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.80it/s]
Consecutive layer pairs:  torch.Size([32, 327, 327])
 80%|██████████████████████████████████▍        | 44/55 [58:12<02:29, 13.62s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:03,  8.85it/s]  6%|██▊                                         | 2/32 [00:00<00:03,  8.09it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  7.89it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  8.21it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  8.37it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  8.18it/s] 22%|█████████▋                                  | 7/32 [00:00<00:03,  8.25it/s] 25%|███████████                                 | 8/32 [00:00<00:02,  8.24it/s] 28%|████████████▍                               | 9/32 [00:01<00:02,  8.30it/s] 31%|█████████████▍                             | 10/32 [00:01<00:02,  8.37it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  8.43it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  8.46it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  8.48it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  8.51it/s] 47%|████████████████████▏                      | 15/32 [00:01<00:02,  8.49it/s] 50%|█████████████████████▌                     | 16/32 [00:01<00:01,  8.50it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:01,  8.25it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  8.39it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  8.46it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  8.46it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  8.55it/s] 69%|█████████████████████████████▌             | 22/32 [00:02<00:01,  8.61it/s] 72%|██████████████████████████████▉            | 23/32 [00:02<00:01,  8.59it/s] 75%|████████████████████████████████▎          | 24/32 [00:02<00:00,  8.62it/s] 78%|█████████████████████████████████▌         | 25/32 [00:02<00:00,  8.64it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  8.70it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  8.73it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  8.69it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:03<00:00,  8.72it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:03<00:00,  8.74it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:03<00:00,  8.68it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.67it/s]100%|███████████████████████████████████████████| 32/32 [00:03<00:00,  8.49it/s]
Consecutive layer pairs:  torch.Size([32, 327, 327])
 82%|███████████████████████████████████▏       | 45/55 [58:21<02:00, 12.08s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:05,  6.11it/s]  6%|██▊                                         | 2/32 [00:00<00:04,  6.03it/s]  9%|████▏                                       | 3/32 [00:00<00:04,  6.00it/s] 12%|█████▌                                      | 4/32 [00:00<00:04,  5.61it/s] 16%|██████▉                                     | 5/32 [00:00<00:04,  5.68it/s] 19%|████████▎                                   | 6/32 [00:01<00:04,  5.81it/s] 22%|█████████▋                                  | 7/32 [00:01<00:04,  5.90it/s] 25%|███████████                                 | 8/32 [00:01<00:04,  5.94it/s] 28%|████████████▍                               | 9/32 [00:01<00:03,  5.95it/s] 31%|█████████████▍                             | 10/32 [00:01<00:03,  5.99it/s] 34%|██████████████▊                            | 11/32 [00:01<00:03,  5.99it/s] 38%|████████████████▏                          | 12/32 [00:02<00:03,  6.00it/s] 41%|█████████████████▍                         | 13/32 [00:02<00:03,  6.02it/s] 44%|██████████████████▊                        | 14/32 [00:02<00:02,  6.02it/s] 47%|████████████████████▏                      | 15/32 [00:02<00:02,  5.98it/s] 50%|█████████████████████▌                     | 16/32 [00:02<00:02,  5.72it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:02,  5.20it/s] 56%|████████████████████████▏                  | 18/32 [00:03<00:02,  5.42it/s] 59%|█████████████████████████▌                 | 19/32 [00:03<00:02,  5.53it/s] 62%|██████████████████████████▉                | 20/32 [00:03<00:02,  5.66it/s] 66%|████████████████████████████▏              | 21/32 [00:03<00:01,  5.77it/s] 69%|█████████████████████████████▌             | 22/32 [00:03<00:01,  5.80it/s] 72%|██████████████████████████████▉            | 23/32 [00:03<00:01,  5.87it/s] 75%|████████████████████████████████▎          | 24/32 [00:04<00:01,  5.91it/s] 78%|█████████████████████████████████▌         | 25/32 [00:04<00:01,  5.93it/s] 81%|██████████████████████████████████▉        | 26/32 [00:04<00:01,  5.91it/s] 84%|████████████████████████████████████▎      | 27/32 [00:04<00:00,  5.93it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:04<00:00,  5.91it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:04<00:00,  5.96it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:05<00:00,  5.97it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:05<00:00,  5.96it/s]100%|███████████████████████████████████████████| 32/32 [00:05<00:00,  6.01it/s]100%|███████████████████████████████████████████| 32/32 [00:05<00:00,  5.86it/s]
Consecutive layer pairs:  torch.Size([32, 379, 379])
 84%|███████████████████████████████████▉       | 46/55 [58:33<01:48, 12.05s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:08,  3.59it/s]  6%|██▊                                         | 2/32 [00:00<00:08,  3.56it/s]  9%|████▏                                       | 3/32 [00:00<00:08,  3.56it/s] 12%|█████▌                                      | 4/32 [00:01<00:07,  3.56it/s] 16%|██████▉                                     | 5/32 [00:01<00:07,  3.56it/s] 19%|████████▎                                   | 6/32 [00:01<00:07,  3.54it/s] 22%|█████████▋                                  | 7/32 [00:01<00:07,  3.54it/s] 25%|███████████                                 | 8/32 [00:02<00:06,  3.47it/s] 28%|████████████▍                               | 9/32 [00:02<00:06,  3.50it/s] 31%|█████████████▍                             | 10/32 [00:02<00:06,  3.52it/s] 34%|██████████████▊                            | 11/32 [00:03<00:05,  3.53it/s] 38%|████████████████▏                          | 12/32 [00:03<00:05,  3.54it/s] 41%|█████████████████▍                         | 13/32 [00:03<00:05,  3.52it/s] 44%|██████████████████▊                        | 14/32 [00:03<00:05,  3.53it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:04,  3.54it/s] 50%|█████████████████████▌                     | 16/32 [00:04<00:04,  3.52it/s] 53%|██████████████████████▊                    | 17/32 [00:04<00:04,  3.52it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:03,  3.53it/s] 59%|█████████████████████████▌                 | 19/32 [00:05<00:03,  3.53it/s] 62%|██████████████████████████▉                | 20/32 [00:05<00:03,  3.50it/s] 66%|████████████████████████████▏              | 21/32 [00:05<00:03,  3.51it/s] 69%|█████████████████████████████▌             | 22/32 [00:06<00:02,  3.53it/s] 72%|██████████████████████████████▉            | 23/32 [00:06<00:02,  3.53it/s] 75%|████████████████████████████████▎          | 24/32 [00:06<00:02,  3.54it/s] 78%|█████████████████████████████████▌         | 25/32 [00:07<00:01,  3.54it/s] 81%|██████████████████████████████████▉        | 26/32 [00:07<00:01,  3.55it/s] 84%|████████████████████████████████████▎      | 27/32 [00:07<00:01,  3.56it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:07<00:01,  3.56it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:08<00:00,  3.56it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:08<00:00,  3.55it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:08<00:00,  3.56it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.55it/s]100%|███████████████████████████████████████████| 32/32 [00:09<00:00,  3.54it/s]
Consecutive layer pairs:  torch.Size([32, 472, 472])
 85%|████████████████████████████████████▋      | 47/55 [58:49<01:47, 13.45s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:05,  6.02it/s]  6%|██▊                                         | 2/32 [00:00<00:04,  6.04it/s]  9%|████▏                                       | 3/32 [00:00<00:04,  6.04it/s] 12%|█████▌                                      | 4/32 [00:00<00:04,  6.04it/s] 16%|██████▉                                     | 5/32 [00:00<00:04,  6.03it/s] 19%|████████▎                                   | 6/32 [00:00<00:04,  6.05it/s] 22%|█████████▋                                  | 7/32 [00:01<00:04,  6.04it/s] 25%|███████████                                 | 8/32 [00:01<00:03,  6.03it/s] 28%|████████████▍                               | 9/32 [00:01<00:03,  6.05it/s] 31%|█████████████▍                             | 10/32 [00:01<00:03,  5.75it/s] 34%|██████████████▊                            | 11/32 [00:01<00:03,  5.85it/s] 38%|████████████████▏                          | 12/32 [00:02<00:03,  5.88it/s] 41%|█████████████████▍                         | 13/32 [00:02<00:03,  5.92it/s] 44%|██████████████████▊                        | 14/32 [00:02<00:03,  5.97it/s] 47%|████████████████████▏                      | 15/32 [00:02<00:02,  6.00it/s] 50%|█████████████████████▌                     | 16/32 [00:02<00:02,  6.00it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:02,  6.03it/s] 56%|████████████████████████▏                  | 18/32 [00:03<00:02,  6.03it/s] 59%|█████████████████████████▌                 | 19/32 [00:03<00:02,  6.01it/s] 62%|██████████████████████████▉                | 20/32 [00:03<00:02,  5.98it/s] 66%|████████████████████████████▏              | 21/32 [00:03<00:01,  6.02it/s] 69%|█████████████████████████████▌             | 22/32 [00:03<00:01,  5.98it/s] 72%|██████████████████████████████▉            | 23/32 [00:03<00:01,  5.99it/s] 75%|████████████████████████████████▎          | 24/32 [00:04<00:01,  6.00it/s] 78%|█████████████████████████████████▌         | 25/32 [00:04<00:01,  5.65it/s] 81%|██████████████████████████████████▉        | 26/32 [00:04<00:01,  5.74it/s] 84%|████████████████████████████████████▎      | 27/32 [00:04<00:00,  5.81it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:04<00:00,  5.86it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:04<00:00,  5.88it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:05<00:00,  5.91it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:05<00:00,  5.94it/s]100%|███████████████████████████████████████████| 32/32 [00:05<00:00,  5.94it/s]100%|███████████████████████████████████████████| 32/32 [00:05<00:00,  5.94it/s]
Consecutive layer pairs:  torch.Size([32, 379, 379])
 87%|█████████████████████████████████████▌     | 48/55 [59:00<01:29, 12.76s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:10,  3.05it/s]  6%|██▊                                         | 2/32 [00:00<00:09,  3.07it/s]  9%|████▏                                       | 3/32 [00:00<00:09,  3.07it/s] 12%|█████▌                                      | 4/32 [00:01<00:09,  3.06it/s] 16%|██████▉                                     | 5/32 [00:01<00:08,  3.05it/s] 19%|████████▎                                   | 6/32 [00:01<00:08,  3.06it/s] 22%|█████████▋                                  | 7/32 [00:02<00:08,  3.05it/s] 25%|███████████                                 | 8/32 [00:02<00:07,  3.06it/s] 28%|████████████▍                               | 9/32 [00:02<00:07,  3.06it/s] 31%|█████████████▍                             | 10/32 [00:03<00:07,  2.95it/s] 34%|██████████████▊                            | 11/32 [00:03<00:07,  2.99it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.02it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:06,  3.03it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:05,  3.04it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.05it/s] 50%|█████████████████████▌                     | 16/32 [00:05<00:05,  3.06it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.06it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.07it/s] 59%|█████████████████████████▌                 | 19/32 [00:06<00:04,  3.07it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:03,  3.07it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.07it/s] 69%|█████████████████████████████▌             | 22/32 [00:07<00:03,  3.06it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:02,  3.07it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.07it/s] 78%|█████████████████████████████████▌         | 25/32 [00:08<00:02,  3.06it/s] 81%|██████████████████████████████████▉        | 26/32 [00:08<00:01,  3.04it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.02it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:09<00:01,  3.03it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:09<00:00,  3.05it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  3.06it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:10<00:00,  3.05it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.03it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.05it/s]
Consecutive layer pairs:  torch.Size([32, 497, 497])
 89%|██████████████████████████████████████▎    | 49/55 [59:23<01:34, 15.71s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:10,  3.09it/s]  6%|██▊                                         | 2/32 [00:00<00:10,  2.98it/s]  9%|████▏                                       | 3/32 [00:00<00:09,  3.02it/s] 12%|█████▌                                      | 4/32 [00:01<00:09,  3.04it/s] 16%|██████▉                                     | 5/32 [00:01<00:08,  3.05it/s] 19%|████████▎                                   | 6/32 [00:01<00:08,  3.06it/s] 22%|█████████▋                                  | 7/32 [00:02<00:08,  3.06it/s] 25%|███████████                                 | 8/32 [00:02<00:07,  3.06it/s] 28%|████████████▍                               | 9/32 [00:02<00:07,  3.05it/s] 31%|█████████████▍                             | 10/32 [00:03<00:07,  3.05it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.05it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.05it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:06,  3.03it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:06,  2.96it/s] 47%|████████████████████▏                      | 15/32 [00:04<00:05,  3.00it/s] 50%|█████████████████████▌                     | 16/32 [00:05<00:05,  2.93it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:05,  2.87it/s] 56%|████████████████████████▏                  | 18/32 [00:06<00:04,  2.93it/s] 59%|█████████████████████████▌                 | 19/32 [00:06<00:04,  2.97it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:04,  2.97it/s] 66%|████████████████████████████▏              | 21/32 [00:07<00:03,  2.94it/s] 69%|█████████████████████████████▌             | 22/32 [00:07<00:03,  2.97it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:03,  3.00it/s] 75%|████████████████████████████████▎          | 24/32 [00:08<00:02,  3.00it/s] 78%|█████████████████████████████████▌         | 25/32 [00:08<00:02,  3.01it/s] 81%|██████████████████████████████████▉        | 26/32 [00:08<00:01,  3.03it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.04it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:09<00:01,  3.05it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:09<00:00,  3.03it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  3.04it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:10<00:00,  3.05it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.00it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.01it/s]
Consecutive layer pairs:  torch.Size([32, 497, 497])
 91%|███████████████████████████████████████    | 50/55 [59:46<01:29, 17.95s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:10,  2.99it/s]  6%|██▊                                         | 2/32 [00:00<00:10,  2.99it/s]  9%|████▏                                       | 3/32 [00:00<00:09,  3.02it/s] 12%|█████▌                                      | 4/32 [00:01<00:09,  3.04it/s] 16%|██████▉                                     | 5/32 [00:01<00:09,  3.00it/s] 19%|████████▎                                   | 6/32 [00:02<00:08,  2.94it/s] 22%|█████████▋                                  | 7/32 [00:02<00:08,  2.98it/s] 25%|███████████                                 | 8/32 [00:02<00:08,  2.99it/s] 28%|████████████▍                               | 9/32 [00:03<00:07,  3.01it/s] 31%|█████████████▍                             | 10/32 [00:03<00:07,  3.02it/s] 34%|██████████████▊                            | 11/32 [00:03<00:06,  3.03it/s] 38%|████████████████▏                          | 12/32 [00:03<00:06,  3.04it/s] 41%|█████████████████▍                         | 13/32 [00:04<00:06,  2.94it/s] 44%|██████████████████▊                        | 14/32 [00:04<00:06,  2.97it/s] 47%|████████████████████▏                      | 15/32 [00:05<00:05,  3.00it/s] 50%|█████████████████████▌                     | 16/32 [00:05<00:05,  3.02it/s] 53%|██████████████████████▊                    | 17/32 [00:05<00:04,  3.03it/s] 56%|████████████████████████▏                  | 18/32 [00:05<00:04,  3.03it/s] 59%|█████████████████████████▌                 | 19/32 [00:06<00:04,  3.04it/s] 62%|██████████████████████████▉                | 20/32 [00:06<00:03,  3.04it/s] 66%|████████████████████████████▏              | 21/32 [00:06<00:03,  3.04it/s] 69%|█████████████████████████████▌             | 22/32 [00:07<00:03,  3.03it/s] 72%|██████████████████████████████▉            | 23/32 [00:07<00:03,  2.99it/s] 75%|████████████████████████████████▎          | 24/32 [00:07<00:02,  3.02it/s] 78%|█████████████████████████████████▌         | 25/32 [00:08<00:02,  3.01it/s] 81%|██████████████████████████████████▉        | 26/32 [00:08<00:01,  3.03it/s] 84%|████████████████████████████████████▎      | 27/32 [00:08<00:01,  3.05it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:09<00:01,  3.05it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:09<00:00,  3.05it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:09<00:00,  3.05it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:10<00:00,  3.06it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.01it/s]100%|███████████████████████████████████████████| 32/32 [00:10<00:00,  3.02it/s]
Consecutive layer pairs:  torch.Size([32, 497, 497])
 93%|██████████████████████████████████████   | 51/55 [1:00:09<01:18, 19.52s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:04,  7.21it/s]  6%|██▊                                         | 2/32 [00:00<00:04,  7.30it/s]  9%|████▏                                       | 3/32 [00:00<00:03,  7.29it/s] 12%|█████▌                                      | 4/32 [00:00<00:03,  7.30it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  7.27it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  7.27it/s] 22%|█████████▋                                  | 7/32 [00:00<00:03,  7.29it/s] 25%|███████████                                 | 8/32 [00:01<00:03,  7.23it/s] 28%|████████████▍                               | 9/32 [00:01<00:03,  7.20it/s] 31%|█████████████▍                             | 10/32 [00:01<00:03,  7.23it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  7.25it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  7.22it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  7.24it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  7.26it/s] 47%|████████████████████▏                      | 15/32 [00:02<00:02,  7.14it/s] 50%|█████████████████████▌                     | 16/32 [00:02<00:02,  7.21it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:02,  7.23it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  7.24it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  7.27it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  7.28it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  7.30it/s] 69%|█████████████████████████████▌             | 22/32 [00:03<00:01,  7.29it/s] 72%|██████████████████████████████▉            | 23/32 [00:03<00:01,  7.25it/s] 75%|████████████████████████████████▎          | 24/32 [00:03<00:01,  7.05it/s] 78%|█████████████████████████████████▌         | 25/32 [00:03<00:00,  7.11it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  7.14it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  7.14it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  7.14it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:04<00:00,  7.15it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:04<00:00,  7.18it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:04<00:00,  7.15it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.18it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.21it/s]
Consecutive layer pairs:  torch.Size([32, 350, 350])
 95%|██████████████████████████████████████▊  | 52/55 [1:00:20<00:50, 16.79s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:05,  5.58it/s]  6%|██▊                                         | 2/32 [00:00<00:05,  5.94it/s]  9%|████▏                                       | 3/32 [00:00<00:04,  6.50it/s] 12%|█████▌                                      | 4/32 [00:00<00:04,  6.77it/s] 16%|██████▉                                     | 5/32 [00:00<00:03,  6.97it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  6.87it/s] 22%|█████████▋                                  | 7/32 [00:01<00:03,  7.01it/s] 25%|███████████                                 | 8/32 [00:01<00:03,  7.09it/s] 28%|████████████▍                               | 9/32 [00:01<00:03,  7.16it/s] 31%|█████████████▍                             | 10/32 [00:01<00:03,  7.19it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  7.22it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  7.22it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  7.21it/s] 44%|██████████████████▊                        | 14/32 [00:02<00:02,  7.20it/s] 47%|████████████████████▏                      | 15/32 [00:02<00:02,  7.20it/s] 50%|█████████████████████▌                     | 16/32 [00:02<00:02,  7.23it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:02,  7.21it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  7.10it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  7.11it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  7.01it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  7.00it/s] 69%|█████████████████████████████▌             | 22/32 [00:03<00:01,  7.10it/s] 72%|██████████████████████████████▉            | 23/32 [00:03<00:01,  7.15it/s] 75%|████████████████████████████████▎          | 24/32 [00:03<00:01,  7.22it/s] 78%|█████████████████████████████████▌         | 25/32 [00:03<00:00,  7.26it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  7.29it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  7.33it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  7.34it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:04<00:00,  7.35it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:04<00:00,  7.35it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:04<00:00,  7.35it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.34it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.12it/s]
Consecutive layer pairs:  torch.Size([32, 350, 350])
 96%|███████████████████████████████████████▌ | 53/55 [1:00:32<00:30, 15.26s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:00<00:04,  6.86it/s]  6%|██▊                                         | 2/32 [00:00<00:04,  7.07it/s]  9%|████▏                                       | 3/32 [00:00<00:04,  6.09it/s] 12%|█████▌                                      | 4/32 [00:00<00:04,  6.33it/s] 16%|██████▉                                     | 5/32 [00:00<00:04,  6.68it/s] 19%|████████▎                                   | 6/32 [00:00<00:03,  6.89it/s] 22%|█████████▋                                  | 7/32 [00:01<00:03,  7.02it/s] 25%|███████████                                 | 8/32 [00:01<00:03,  7.11it/s] 28%|████████████▍                               | 9/32 [00:01<00:03,  7.18it/s] 31%|█████████████▍                             | 10/32 [00:01<00:03,  7.22it/s] 34%|██████████████▊                            | 11/32 [00:01<00:02,  7.24it/s] 38%|████████████████▏                          | 12/32 [00:01<00:02,  7.28it/s] 41%|█████████████████▍                         | 13/32 [00:01<00:02,  7.28it/s] 44%|██████████████████▊                        | 14/32 [00:01<00:02,  7.28it/s] 47%|████████████████████▏                      | 15/32 [00:02<00:02,  7.31it/s] 50%|█████████████████████▌                     | 16/32 [00:02<00:02,  7.35it/s] 53%|██████████████████████▊                    | 17/32 [00:02<00:02,  7.32it/s] 56%|████████████████████████▏                  | 18/32 [00:02<00:01,  7.31it/s] 59%|█████████████████████████▌                 | 19/32 [00:02<00:01,  7.05it/s] 62%|██████████████████████████▉                | 20/32 [00:02<00:01,  7.11it/s] 66%|████████████████████████████▏              | 21/32 [00:02<00:01,  7.15it/s] 69%|█████████████████████████████▌             | 22/32 [00:03<00:01,  7.18it/s] 72%|██████████████████████████████▉            | 23/32 [00:03<00:01,  7.21it/s] 75%|████████████████████████████████▎          | 24/32 [00:03<00:01,  7.18it/s] 78%|█████████████████████████████████▌         | 25/32 [00:03<00:00,  7.16it/s] 81%|██████████████████████████████████▉        | 26/32 [00:03<00:00,  7.20it/s] 84%|████████████████████████████████████▎      | 27/32 [00:03<00:00,  7.20it/s] 88%|█████████████████████████████████████▋     | 28/32 [00:03<00:00,  7.23it/s] 91%|██████████████████████████████████████▉    | 29/32 [00:04<00:00,  7.21it/s] 94%|████████████████████████████████████████▎  | 30/32 [00:04<00:00,  7.17it/s] 97%|█████████████████████████████████████████▋ | 31/32 [00:04<00:00,  7.19it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.18it/s]100%|███████████████████████████████████████████| 32/32 [00:04<00:00,  7.12it/s]
Consecutive layer pairs:  torch.Size([32, 350, 350])
 98%|████████████████████████████████████████▎| 54/55 [1:00:42<00:13, 13.80s/it]  0%|                                                    | 0/32 [00:00<?, ?it/s]  3%|█▍                                          | 1/32 [00:04<02:27,  4.75s/it]  6%|██▊                                         | 2/32 [00:09<02:23,  4.78s/it]  9%|████▏                                       | 3/32 [00:14<02:18,  4.78s/it] 12%|█████▌                                      | 4/32 [00:19<02:18,  4.93s/it] 16%|██████▉                                     | 5/32 [00:24<02:12,  4.90s/it] 19%|████████▎                                   | 6/32 [00:29<02:05,  4.84s/it] 22%|█████████▋                                  | 7/32 [00:33<01:59,  4.79s/it] 25%|███████████                                 | 8/32 [00:38<01:54,  4.76s/it] 28%|████████████▍                               | 9/32 [00:43<01:48,  4.73s/it] 31%|█████████████▍                             | 10/32 [00:47<01:43,  4.71s/it] 34%|██████████████▊                            | 11/32 [00:52<01:40,  4.80s/it] 38%|████████████████▏                          | 12/32 [00:57<01:35,  4.77s/it] 41%|█████████████████▍                         | 13/32 [01:02<01:30,  4.78s/it] 44%|██████████████████▊                        | 14/32 [01:07<01:25,  4.78s/it] 47%|████████████████████▏                      | 15/32 [01:11<01:21,  4.77s/it] 50%|█████████████████████▌                     | 16/32 [01:16<01:16,  4.78s/it] 53%|██████████████████████▊                    | 17/32 [01:21<01:11,  4.75s/it] 56%|████████████████████████▏                  | 18/32 [01:25<01:06,  4.73s/it] 59%|█████████████████████████▌                 | 19/32 [01:30<01:01,  4.76s/it] 62%|██████████████████████████▉                | 20/32 [01:35<00:56,  4.74s/it] 66%|████████████████████████████▏              | 21/32 [01:40<00:51,  4.71s/it] 69%|█████████████████████████████▌             | 22/32 [01:44<00:47,  4.71s/it] 72%|██████████████████████████████▉            | 23/32 [01:49<00:42,  4.71s/it] 75%|████████████████████████████████▎          | 24/32 [01:54<00:37,  4.70s/it] 78%|█████████████████████████████████▌         | 25/32 [01:58<00:32,  4.71s/it] 81%|██████████████████████████████████▉        | 26/32 [02:03<00:28,  4.71s/it] 84%|████████████████████████████████████▎      | 27/32 [02:08<00:23,  4.73s/it] 88%|█████████████████████████████████████▋     | 28/32 [02:13<00:18,  4.75s/it] 91%|██████████████████████████████████████▉    | 29/32 [02:17<00:14,  4.73s/it] 94%|████████████████████████████████████████▎  | 30/32 [02:22<00:09,  4.72s/it] 97%|█████████████████████████████████████████▋ | 31/32 [02:27<00:04,  4.72s/it]100%|███████████████████████████████████████████| 32/32 [02:32<00:00,  4.71s/it]100%|███████████████████████████████████████████| 32/32 [02:32<00:00,  4.75s/it]
Consecutive layer pairs:  torch.Size([32, 1272, 1272])
100%|█████████████████████████████████████████| 55/55 [1:04:07<00:00, 71.18s/it]100%|█████████████████████████████████████████| 55/55 [1:04:07<00:00, 69.95s/it]
n of data transformed:  55
Processing analysis pass: naive_max
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', {}, <function compute_naive_max_aggregation at 0x7ff7d649b430>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:20<18:02, 20.05s/it]  4%|█▌                                          | 2/55 [00:55<25:46, 29.17s/it]  5%|██▍                                         | 3/55 [01:22<24:13, 27.94s/it]  7%|███▏                                        | 4/55 [02:50<43:59, 51.76s/it]  9%|████                                        | 5/55 [04:31<58:00, 69.60s/it] 11%|████▊                                       | 6/55 [05:40<56:33, 69.26s/it] 13%|█████▌                                      | 7/55 [06:03<43:28, 54.34s/it] 15%|██████▍                                     | 8/55 [06:35<36:58, 47.21s/it] 16%|███████▏                                    | 9/55 [07:08<32:42, 42.65s/it] 18%|███████▊                                   | 10/55 [07:38<29:08, 38.85s/it] 20%|████████▌                                  | 11/55 [08:26<30:27, 41.54s/it] 22%|█████████▍                                 | 12/55 [09:10<30:15, 42.23s/it] 24%|██████████▏                                | 13/55 [10:40<39:48, 56.86s/it] 25%|██████████▉                                | 14/55 [12:10<45:43, 66.92s/it] 27%|███████████▋                               | 15/55 [13:18<44:45, 67.14s/it] 29%|████████████▌                              | 16/55 [14:01<38:52, 59.81s/it] 31%|█████████████▎                             | 17/55 [14:35<33:02, 52.17s/it] 33%|██████████████                             | 18/55 [15:05<27:58, 45.35s/it] 35%|██████████████▊                            | 19/55 [15:35<24:25, 40.72s/it] 36%|███████████████▋                           | 20/55 [16:27<25:45, 44.16s/it] 38%|████████████████▍                          | 21/55 [17:12<25:12, 44.50s/it] 40%|█████████████████▏                         | 22/55 [18:23<28:49, 52.42s/it] 42%|█████████████████▉                         | 23/55 [19:42<32:09, 60.29s/it] 44%|██████████████████▊                        | 24/55 [20:39<30:40, 59.37s/it] 45%|███████████████████▌                       | 25/55 [21:10<25:29, 50.98s/it] 47%|████████████████████▎                      | 26/55 [21:29<19:58, 41.33s/it] 49%|█████████████████████                      | 27/55 [22:04<18:21, 39.33s/it] 51%|█████████████████████▉                     | 28/55 [22:13<13:36, 30.24s/it] 53%|██████████████████████▋                    | 29/55 [22:23<10:29, 24.22s/it] 55%|███████████████████████▍                   | 30/55 [22:34<08:26, 20.25s/it] 56%|████████████████████████▏                  | 31/55 [22:45<07:01, 17.57s/it] 58%|█████████████████████████                  | 32/55 [22:57<06:04, 15.86s/it] 60%|█████████████████████████▊                 | 33/55 [23:11<05:33, 15.17s/it] 62%|██████████████████████████▌                | 34/55 [23:20<04:39, 13.31s/it] 64%|███████████████████████████▎               | 35/55 [23:26<03:45, 11.27s/it] 65%|████████████████████████████▏              | 36/55 [23:33<03:06,  9.83s/it] 67%|████████████████████████████▉              | 37/55 [23:42<02:55,  9.78s/it] 69%|█████████████████████████████▋             | 38/55 [23:54<02:57, 10.41s/it] 71%|██████████████████████████████▍            | 39/55 [24:07<02:57, 11.12s/it] 73%|███████████████████████████████▎           | 40/55 [24:22<03:02, 12.16s/it] 75%|████████████████████████████████           | 41/55 [24:44<03:31, 15.14s/it] 76%|████████████████████████████████▊          | 42/55 [24:55<03:02, 14.01s/it] 78%|█████████████████████████████████▌         | 43/55 [25:02<02:21, 11.82s/it] 80%|██████████████████████████████████▍        | 44/55 [25:10<01:58, 10.78s/it] 82%|███████████████████████████████████▏       | 45/55 [25:16<01:33,  9.39s/it] 84%|███████████████████████████████████▉       | 46/55 [25:23<01:16,  8.54s/it] 85%|████████████████████████████████████▋      | 47/55 [25:32<01:11,  8.89s/it] 87%|█████████████████████████████████████▌     | 48/55 [25:40<00:58,  8.36s/it] 89%|██████████████████████████████████████▎    | 49/55 [25:54<01:00, 10.05s/it] 91%|███████████████████████████████████████    | 50/55 [26:08<00:57, 11.45s/it] 93%|███████████████████████████████████████▊   | 51/55 [26:18<00:44, 11.01s/it] 95%|████████████████████████████████████████▋  | 52/55 [26:26<00:30, 10.15s/it] 96%|█████████████████████████████████████████▍ | 53/55 [26:35<00:19,  9.55s/it] 98%|██████████████████████████████████████████▏| 54/55 [26:41<00:08,  8.61s/it]100%|███████████████████████████████████████████| 55/55 [27:48<00:00, 26.07s/it]100%|███████████████████████████████████████████| 55/55 [27:48<00:00, 30.33s/it]
n of data transformed:  55
Processing analysis pass: naive_mean
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', {}, <function compute_naive_mean_aggregation at 0x7ff7d649b4c0>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:25<22:44, 25.27s/it]  4%|█▌                                          | 2/55 [00:59<26:50, 30.39s/it]  5%|██▍                                         | 3/55 [01:27<25:20, 29.24s/it]  7%|███▏                                        | 4/55 [02:29<36:07, 42.50s/it]  9%|████                                        | 5/55 [03:26<39:43, 47.67s/it] 11%|████▊                                       | 6/55 [04:22<41:14, 50.51s/it] 13%|█████▌                                      | 7/55 [04:50<34:31, 43.15s/it] 15%|██████▍                                     | 8/55 [05:23<31:04, 39.67s/it] 16%|███████▏                                    | 9/55 [05:46<26:30, 34.59s/it] 18%|███████▊                                   | 10/55 [06:31<28:24, 37.89s/it] 20%|████████▌                                  | 11/55 [07:11<28:16, 38.55s/it] 22%|█████████▍                                 | 12/55 [07:45<26:35, 37.09s/it] 24%|██████████▏                                | 13/55 [08:40<29:40, 42.38s/it] 25%|██████████▉                                | 14/55 [09:49<34:33, 50.57s/it] 27%|███████████▋                               | 15/55 [10:52<36:13, 54.35s/it] 29%|████████████▌                              | 16/55 [11:22<30:34, 47.04s/it] 31%|█████████████▎                             | 17/55 [11:50<26:05, 41.20s/it] 33%|██████████████                             | 18/55 [12:12<21:57, 35.62s/it] 35%|██████████████▊                            | 19/55 [13:46<31:49, 53.05s/it] 36%|███████████████▋                           | 20/55 [14:34<29:59, 51.41s/it] 38%|████████████████▍                          | 21/55 [15:14<27:10, 47.96s/it] 40%|█████████████████▏                         | 22/55 [16:27<30:30, 55.46s/it] 42%|█████████████████▉                         | 23/55 [17:40<32:31, 60.99s/it] 44%|██████████████████▊                        | 24/55 [18:41<31:28, 60.93s/it] 45%|███████████████████▌                       | 25/55 [19:11<25:43, 51.44s/it] 47%|████████████████████▎                      | 26/55 [19:38<21:24, 44.30s/it] 49%|█████████████████████                      | 27/55 [20:05<18:17, 39.20s/it] 51%|█████████████████████▉                     | 28/55 [20:19<14:10, 31.49s/it] 53%|██████████████████████▋                    | 29/55 [20:31<11:07, 25.69s/it] 55%|███████████████████████▍                   | 30/55 [20:44<09:03, 21.73s/it] 56%|████████████████████████▏                  | 31/55 [21:00<08:03, 20.13s/it] 58%|█████████████████████████                  | 32/55 [21:14<06:57, 18.16s/it] 60%|█████████████████████████▊                 | 33/55 [21:30<06:24, 17.49s/it] 62%|██████████████████████████▌                | 34/55 [21:37<05:03, 14.44s/it] 64%|███████████████████████████▎               | 35/55 [21:43<03:58, 11.93s/it] 65%|████████████████████████████▏              | 36/55 [21:49<03:15, 10.30s/it] 67%|████████████████████████████▉              | 37/55 [21:59<03:00, 10.00s/it] 69%|█████████████████████████████▋             | 38/55 [22:10<02:55, 10.32s/it] 71%|██████████████████████████████▍            | 39/55 [22:20<02:44, 10.28s/it] 73%|███████████████████████████████▎           | 40/55 [22:33<02:46, 11.11s/it] 75%|████████████████████████████████           | 41/55 [22:46<02:43, 11.67s/it] 76%|████████████████████████████████▊          | 42/55 [23:01<02:44, 12.63s/it] 78%|█████████████████████████████████▌         | 43/55 [23:08<02:12, 11.06s/it] 80%|██████████████████████████████████▍        | 44/55 [23:15<01:48,  9.91s/it] 82%|███████████████████████████████████▏       | 45/55 [23:21<01:27,  8.72s/it] 84%|███████████████████████████████████▉       | 46/55 [23:28<01:13,  8.22s/it] 85%|████████████████████████████████████▋      | 47/55 [23:44<01:23, 10.41s/it] 87%|█████████████████████████████████████▌     | 48/55 [24:51<03:11, 27.41s/it] 89%|██████████████████████████████████████▎    | 49/55 [25:02<02:14, 22.48s/it] 91%|███████████████████████████████████████    | 50/55 [25:12<01:33, 18.72s/it] 93%|███████████████████████████████████████▊   | 51/55 [25:26<01:08, 17.22s/it] 95%|████████████████████████████████████████▋  | 52/55 [25:33<00:42, 14.33s/it] 96%|█████████████████████████████████████████▍ | 53/55 [25:40<00:23, 12.00s/it] 98%|██████████████████████████████████████████▏| 54/55 [25:47<00:10, 10.44s/it]100%|███████████████████████████████████████████| 55/55 [26:57<00:00, 28.44s/it]100%|███████████████████████████████████████████| 55/55 [26:57<00:00, 29.41s/it]
n of data transformed:  55
Processing analysis pass: naive_max_sym
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max_sym', {}, <function make_symmetric at 0x7ff7d649b670>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:09<08:38,  9.60s/it]  4%|█▌                                          | 2/55 [00:15<06:27,  7.30s/it]  5%|██▍                                         | 3/55 [00:24<07:02,  8.13s/it]  7%|███▏                                        | 4/55 [00:43<10:34, 12.45s/it]  9%|████                                        | 5/55 [01:00<11:40, 14.02s/it] 11%|████▊                                       | 6/55 [01:15<11:48, 14.46s/it] 13%|█████▌                                      | 7/55 [01:24<10:03, 12.57s/it] 15%|██████▍                                     | 8/55 [01:29<08:07, 10.37s/it] 16%|███████▏                                    | 9/55 [01:39<07:50, 10.23s/it] 18%|███████▊                                   | 10/55 [01:51<08:01, 10.70s/it] 20%|████████▌                                  | 11/55 [02:02<07:51, 10.71s/it] 22%|█████████▍                                 | 12/55 [02:16<08:24, 11.73s/it] 24%|██████████▏                                | 13/55 [02:50<13:00, 18.58s/it] 25%|██████████▉                                | 14/55 [03:13<13:29, 19.73s/it] 27%|███████████▋                               | 15/55 [03:41<14:50, 22.27s/it] 29%|████████████▌                              | 16/55 [03:57<13:18, 20.48s/it] 31%|█████████████▎                             | 17/55 [04:05<10:32, 16.64s/it] 33%|██████████████                             | 18/55 [04:15<09:00, 14.60s/it] 35%|██████████████▊                            | 19/55 [04:31<09:06, 15.19s/it] 36%|███████████████▋                           | 20/55 [04:49<09:15, 15.88s/it] 38%|████████████████▍                          | 21/55 [04:56<07:36, 13.43s/it] 40%|█████████████████▏                         | 22/55 [05:12<07:47, 14.17s/it] 42%|█████████████████▉                         | 23/55 [05:41<09:49, 18.41s/it] 44%|██████████████████▊                        | 24/55 [06:03<10:04, 19.49s/it] 45%|███████████████████▌                       | 25/55 [06:13<08:24, 16.80s/it] 47%|████████████████████▎                      | 26/55 [06:21<06:51, 14.18s/it] 49%|█████████████████████                      | 27/55 [06:31<05:56, 12.72s/it] 51%|█████████████████████▉                     | 28/55 [06:35<04:34, 10.18s/it] 53%|██████████████████████▋                    | 29/55 [06:38<03:31,  8.13s/it] 55%|███████████████████████▍                   | 30/55 [06:43<02:57,  7.12s/it] 56%|████████████████████████▏                  | 31/55 [06:47<02:32,  6.35s/it] 58%|█████████████████████████                  | 32/55 [06:52<02:10,  5.69s/it] 60%|█████████████████████████▊                 | 33/55 [06:55<01:51,  5.08s/it] 62%|██████████████████████████▌                | 34/55 [06:57<01:26,  4.13s/it] 64%|███████████████████████████▎               | 35/55 [07:00<01:14,  3.70s/it] 65%|████████████████████████████▏              | 36/55 [07:02<01:01,  3.24s/it] 67%|████████████████████████████▉              | 37/55 [07:06<01:03,  3.51s/it] 69%|█████████████████████████████▋             | 38/55 [07:09<00:56,  3.35s/it] 71%|██████████████████████████████▍            | 39/55 [07:12<00:52,  3.27s/it] 73%|███████████████████████████████▎           | 40/55 [07:16<00:52,  3.50s/it] 75%|████████████████████████████████           | 41/55 [07:19<00:47,  3.37s/it] 76%|████████████████████████████████▊          | 42/55 [07:24<00:50,  3.89s/it] 78%|█████████████████████████████████▌         | 43/55 [07:28<00:44,  3.68s/it] 80%|██████████████████████████████████▍        | 44/55 [07:30<00:35,  3.21s/it] 82%|███████████████████████████████████▏       | 45/55 [07:32<00:28,  2.82s/it] 84%|███████████████████████████████████▉       | 46/55 [07:34<00:23,  2.61s/it] 85%|████████████████████████████████████▋      | 47/55 [07:39<00:26,  3.32s/it] 87%|█████████████████████████████████████▌     | 48/55 [07:43<00:24,  3.47s/it] 89%|██████████████████████████████████████▎    | 49/55 [07:49<00:25,  4.24s/it] 91%|███████████████████████████████████████    | 50/55 [07:52<00:20,  4.05s/it] 93%|███████████████████████████████████████▊   | 51/55 [07:58<00:18,  4.53s/it] 95%|████████████████████████████████████████▋  | 52/55 [08:00<00:11,  3.89s/it] 96%|█████████████████████████████████████████▍ | 53/55 [08:03<00:07,  3.64s/it] 98%|██████████████████████████████████████████▏| 54/55 [08:06<00:03,  3.48s/it]100%|███████████████████████████████████████████| 55/55 [08:36<00:00, 11.27s/it]100%|███████████████████████████████████████████| 55/55 [08:36<00:00,  9.39s/it]
n of data transformed:  55
Processing analysis pass: naive_mean_sym
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean_sym', {}, <function make_symmetric at 0x7ff7d649b670>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:11<10:25, 11.59s/it]  4%|█▌                                          | 2/55 [00:23<10:21, 11.72s/it]  5%|██▍                                         | 3/55 [00:39<11:50, 13.67s/it]  7%|███▏                                        | 4/55 [00:57<13:13, 15.55s/it]  9%|████                                        | 5/55 [01:15<13:30, 16.20s/it] 11%|████▊                                       | 6/55 [01:38<15:10, 18.59s/it] 13%|█████▌                                      | 7/55 [01:45<11:57, 14.95s/it] 15%|██████▍                                     | 8/55 [01:52<09:42, 12.39s/it] 16%|███████▏                                    | 9/55 [02:03<09:00, 11.76s/it] 18%|███████▊                                   | 10/55 [02:21<10:19, 13.77s/it] 20%|████████▌                                  | 11/55 [02:33<09:43, 13.26s/it] 22%|█████████▍                                 | 12/55 [02:48<09:50, 13.74s/it] 24%|██████████▏                                | 13/55 [03:10<11:28, 16.39s/it] 25%|██████████▉                                | 14/55 [03:29<11:38, 17.04s/it] 27%|███████████▋                               | 15/55 [03:44<11:00, 16.51s/it] 29%|████████████▌                              | 16/55 [03:51<08:52, 13.65s/it] 31%|█████████████▎                             | 17/55 [03:58<07:16, 11.49s/it] 33%|██████████████                             | 18/55 [04:05<06:20, 10.29s/it] 35%|██████████████▊                            | 19/55 [04:15<06:04, 10.13s/it] 36%|███████████████▋                           | 20/55 [04:24<05:39,  9.70s/it] 38%|████████████████▍                          | 21/55 [04:39<06:31, 11.52s/it] 40%|█████████████████▏                         | 22/55 [04:48<05:56, 10.80s/it] 42%|█████████████████▉                         | 23/55 [05:08<07:09, 13.43s/it] 44%|██████████████████▊                        | 24/55 [05:34<08:55, 17.27s/it] 45%|███████████████████▌                       | 25/55 [05:47<08:01, 16.05s/it] 47%|████████████████████▎                      | 26/55 [05:55<06:32, 13.53s/it] 49%|█████████████████████                      | 27/55 [06:00<05:08, 11.03s/it] 51%|█████████████████████▉                     | 28/55 [06:04<03:59,  8.85s/it] 53%|██████████████████████▋                    | 29/55 [06:08<03:09,  7.29s/it] 55%|███████████████████████▍                   | 30/55 [06:11<02:34,  6.18s/it] 56%|████████████████████████▏                  | 31/55 [06:15<02:09,  5.40s/it] 58%|█████████████████████████                  | 32/55 [06:18<01:47,  4.67s/it] 60%|█████████████████████████▊                 | 33/55 [06:22<01:40,  4.57s/it] 62%|██████████████████████████▌                | 34/55 [06:24<01:18,  3.76s/it] 64%|███████████████████████████▎               | 35/55 [06:26<01:04,  3.23s/it] 65%|████████████████████████████▏              | 36/55 [06:29<00:57,  3.05s/it] 67%|████████████████████████████▉              | 37/55 [07:39<06:56, 23.16s/it] 69%|█████████████████████████████▋             | 38/55 [07:42<04:49, 17.03s/it] 71%|██████████████████████████████▍            | 39/55 [07:44<03:22, 12.68s/it] 73%|███████████████████████████████▎           | 40/55 [07:48<02:32, 10.19s/it] 75%|████████████████████████████████           | 41/55 [07:54<02:02,  8.77s/it] 76%|████████████████████████████████▊          | 42/55 [07:57<01:32,  7.08s/it] 78%|█████████████████████████████████▌         | 43/55 [07:59<01:06,  5.57s/it] 80%|██████████████████████████████████▍        | 44/55 [08:01<00:47,  4.34s/it] 82%|███████████████████████████████████▏       | 45/55 [08:03<00:38,  3.85s/it] 84%|███████████████████████████████████▉       | 46/55 [08:05<00:29,  3.29s/it] 85%|████████████████████████████████████▋      | 47/55 [08:11<00:32,  4.02s/it] 87%|█████████████████████████████████████▌     | 48/55 [08:15<00:27,  3.94s/it] 89%|██████████████████████████████████████▎    | 49/55 [08:17<00:20,  3.41s/it] 91%|███████████████████████████████████████    | 50/55 [08:21<00:17,  3.51s/it] 93%|███████████████████████████████████████▊   | 51/55 [08:23<00:13,  3.31s/it] 95%|████████████████████████████████████████▋  | 52/55 [08:26<00:09,  3.04s/it] 96%|█████████████████████████████████████████▍ | 53/55 [08:28<00:05,  2.81s/it] 98%|██████████████████████████████████████████▏| 54/55 [08:31<00:02,  2.74s/it]100%|███████████████████████████████████████████| 55/55 [08:48<00:00,  7.10s/it]100%|███████████████████████████████████████████| 55/55 [08:48<00:00,  9.61s/it]
n of data transformed:  55
Processing analysis pass: vector_naive_max_plus_mean_of_followers
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_max', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_max_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:00<00:26,  2.01it/s]  4%|█▌                                          | 2/55 [00:01<00:34,  1.54it/s]  5%|██▍                                         | 3/55 [00:01<00:30,  1.71it/s]  7%|███▏                                        | 4/55 [00:02<00:35,  1.43it/s]  9%|████                                        | 5/55 [00:03<00:46,  1.08it/s] 11%|████▊                                       | 6/55 [00:04<00:41,  1.18it/s] 13%|█████▌                                      | 7/55 [00:05<00:34,  1.37it/s] 15%|██████▍                                     | 8/55 [00:05<00:34,  1.36it/s] 16%|███████▏                                    | 9/55 [00:06<00:29,  1.55it/s] 18%|███████▊                                   | 10/55 [00:06<00:28,  1.58it/s] 20%|████████▌                                  | 11/55 [00:07<00:33,  1.32it/s] 22%|█████████▍                                 | 12/55 [00:08<00:30,  1.41it/s] 24%|██████████▏                                | 13/55 [00:09<00:30,  1.38it/s] 25%|██████████▉                                | 14/55 [00:10<00:41,  1.01s/it] 27%|███████████▋                               | 15/55 [00:11<00:36,  1.10it/s] 29%|████████████▌                              | 16/55 [00:12<00:30,  1.29it/s] 31%|█████████████▎                             | 17/55 [00:13<00:32,  1.17it/s] 33%|██████████████                             | 18/55 [00:13<00:27,  1.34it/s] 35%|██████████████▊                            | 19/55 [00:14<00:25,  1.43it/s] 36%|███████████████▋                           | 20/55 [00:15<00:30,  1.16it/s] 38%|████████████████▍                          | 21/55 [00:16<00:26,  1.28it/s] 40%|█████████████████▏                         | 22/55 [00:16<00:25,  1.31it/s] 42%|█████████████████▉                         | 23/55 [00:18<00:35,  1.11s/it] 44%|██████████████████▊                        | 24/55 [00:19<00:30,  1.02it/s] 45%|███████████████████▌                       | 25/55 [00:20<00:25,  1.16it/s] 47%|████████████████████▎                      | 26/55 [00:20<00:25,  1.13it/s] 49%|█████████████████████                      | 27/55 [00:21<00:21,  1.30it/s] 51%|█████████████████████▉                     | 28/55 [00:21<00:18,  1.48it/s] 53%|██████████████████████▋                    | 29/55 [00:22<00:19,  1.32it/s] 55%|███████████████████████▍                   | 30/55 [00:23<00:16,  1.51it/s] 56%|████████████████████████▏                  | 31/55 [00:23<00:14,  1.65it/s] 58%|█████████████████████████                  | 32/55 [00:24<00:14,  1.62it/s] 60%|█████████████████████████▊                 | 33/55 [00:24<00:12,  1.76it/s] 62%|██████████████████████████▌                | 34/55 [00:25<00:11,  1.88it/s] 64%|███████████████████████████▎               | 35/55 [00:25<00:10,  1.97it/s] 65%|████████████████████████████▏              | 36/55 [00:26<00:09,  2.02it/s] 67%|████████████████████████████▉              | 37/55 [00:26<00:08,  2.05it/s] 69%|█████████████████████████████▋             | 38/55 [00:27<00:08,  1.96it/s] 71%|██████████████████████████████▍            | 39/55 [00:27<00:08,  1.95it/s] 73%|███████████████████████████████▎           | 40/55 [00:28<00:07,  1.97it/s] 75%|████████████████████████████████           | 41/55 [00:28<00:07,  1.94it/s] 76%|████████████████████████████████▊          | 42/55 [00:29<00:06,  2.02it/s] 78%|█████████████████████████████████▌         | 43/55 [00:29<00:05,  2.10it/s] 80%|██████████████████████████████████▍        | 44/55 [00:30<00:05,  2.12it/s] 82%|███████████████████████████████████▏       | 45/55 [00:30<00:04,  2.20it/s] 84%|███████████████████████████████████▉       | 46/55 [00:31<00:04,  2.15it/s] 85%|████████████████████████████████████▋      | 47/55 [00:31<00:03,  2.04it/s] 87%|█████████████████████████████████████▌     | 48/55 [00:32<00:03,  2.02it/s] 89%|██████████████████████████████████████▎    | 49/55 [00:32<00:02,  2.03it/s] 91%|███████████████████████████████████████    | 50/55 [00:33<00:02,  1.97it/s] 93%|███████████████████████████████████████▊   | 51/55 [00:33<00:02,  1.98it/s] 95%|████████████████████████████████████████▋  | 52/55 [00:34<00:01,  2.07it/s] 96%|█████████████████████████████████████████▍ | 53/55 [00:34<00:00,  2.03it/s] 98%|██████████████████████████████████████████▏| 54/55 [00:35<00:00,  2.07it/s]100%|███████████████████████████████████████████| 55/55 [00:36<00:00,  1.49it/s]100%|███████████████████████████████████████████| 55/55 [00:36<00:00,  1.52it/s]
n of data transformed:  55
Processing analysis pass: vector_naive_mean_plus_mean_of_followers
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/naive_mean', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/vector_naive_mean_plus_mean_of_followers', {}, <function compute_mean_of_followers at 0x7ff7d649b550>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:00<00:25,  2.08it/s]  4%|█▌                                          | 2/55 [00:01<00:35,  1.50it/s]  5%|██▍                                         | 3/55 [00:01<00:34,  1.53it/s]  7%|███▏                                        | 4/55 [00:02<00:34,  1.49it/s]  9%|████                                        | 5/55 [00:03<00:35,  1.42it/s] 11%|████▊                                       | 6/55 [00:04<00:34,  1.44it/s] 13%|█████▌                                      | 7/55 [00:04<00:29,  1.60it/s] 15%|██████▍                                     | 8/55 [00:05<00:28,  1.65it/s] 16%|███████▏                                    | 9/55 [00:05<00:25,  1.79it/s] 18%|███████▊                                   | 10/55 [00:06<00:26,  1.72it/s] 20%|████████▌                                  | 11/55 [00:06<00:25,  1.75it/s] 22%|█████████▍                                 | 12/55 [00:07<00:24,  1.75it/s] 24%|██████████▏                                | 13/55 [00:08<00:25,  1.62it/s] 25%|██████████▉                                | 14/55 [00:08<00:29,  1.38it/s] 27%|███████████▋                               | 15/55 [00:09<00:29,  1.37it/s] 29%|████████████▌                              | 16/55 [00:10<00:26,  1.45it/s] 31%|█████████████▎                             | 17/55 [00:10<00:25,  1.51it/s] 33%|██████████████                             | 18/55 [00:11<00:22,  1.66it/s] 35%|██████████████▊                            | 19/55 [00:11<00:21,  1.67it/s] 36%|███████████████▋                           | 20/55 [00:12<00:21,  1.61it/s] 38%|████████████████▍                          | 21/55 [00:13<00:20,  1.63it/s] 40%|█████████████████▏                         | 22/55 [00:14<00:22,  1.50it/s] 42%|█████████████████▉                         | 23/55 [00:14<00:23,  1.38it/s] 44%|██████████████████▊                        | 24/55 [00:15<00:22,  1.38it/s] 45%|███████████████████▌                       | 25/55 [00:16<00:21,  1.38it/s] 47%|████████████████████▎                      | 26/55 [00:16<00:19,  1.48it/s] 49%|█████████████████████                      | 27/55 [00:17<00:17,  1.60it/s] 51%|█████████████████████▉                     | 28/55 [00:17<00:15,  1.74it/s] 53%|██████████████████████▋                    | 29/55 [00:18<00:14,  1.83it/s] 55%|███████████████████████▍                   | 30/55 [00:18<00:12,  1.92it/s] 56%|████████████████████████▏                  | 31/55 [00:19<00:12,  1.99it/s] 58%|█████████████████████████                  | 32/55 [00:19<00:11,  2.07it/s] 60%|█████████████████████████▊                 | 33/55 [00:20<00:10,  2.00it/s] 62%|██████████████████████████▌                | 34/55 [00:20<00:10,  2.07it/s] 64%|███████████████████████████▎               | 35/55 [00:21<00:09,  2.13it/s] 65%|████████████████████████████▏              | 36/55 [00:21<00:08,  2.16it/s] 67%|████████████████████████████▉              | 37/55 [00:22<00:08,  2.17it/s] 69%|█████████████████████████████▋             | 38/55 [00:22<00:07,  2.21it/s] 71%|██████████████████████████████▍            | 39/55 [00:22<00:07,  2.18it/s] 73%|███████████████████████████████▎           | 40/55 [00:23<00:06,  2.18it/s] 75%|████████████████████████████████           | 41/55 [00:23<00:06,  2.20it/s] 76%|████████████████████████████████▊          | 42/55 [00:24<00:06,  1.92it/s] 78%|█████████████████████████████████▌         | 43/55 [00:24<00:06,  2.00it/s] 80%|██████████████████████████████████▍        | 44/55 [00:25<00:05,  2.09it/s] 82%|███████████████████████████████████▏       | 45/55 [00:25<00:04,  2.33it/s] 84%|███████████████████████████████████▉       | 46/55 [00:26<00:03,  2.50it/s] 85%|████████████████████████████████████▋      | 47/55 [00:26<00:03,  2.65it/s] 87%|█████████████████████████████████████▌     | 48/55 [00:26<00:02,  2.73it/s] 89%|██████████████████████████████████████▎    | 49/55 [00:27<00:02,  2.85it/s] 91%|███████████████████████████████████████    | 50/55 [00:27<00:01,  2.90it/s] 93%|███████████████████████████████████████▊   | 51/55 [00:27<00:01,  2.78it/s] 95%|████████████████████████████████████████▋  | 52/55 [00:28<00:01,  2.90it/s] 96%|█████████████████████████████████████████▍ | 53/55 [00:28<00:00,  2.96it/s] 98%|██████████████████████████████████████████▏| 54/55 [00:28<00:00,  2.99it/s]100%|███████████████████████████████████████████| 55/55 [00:29<00:00,  3.00it/s]100%|███████████████████████████████████████████| 55/55 [00:29<00:00,  1.89it/s]
n of data transformed:  55
Processing analysis pass: raw_weights_last_layer
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', {}, <function raw_weights_last_layer at 0x7ff7d650fca0>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:34<31:14, 34.71s/it]  4%|█▌                                          | 2/55 [01:09<30:31, 34.56s/it]  5%|██▍                                         | 3/55 [01:35<26:50, 30.97s/it]  7%|███▏                                        | 4/55 [02:30<34:23, 40.46s/it]  9%|████                                        | 5/55 [03:32<39:55, 47.92s/it] 11%|████▊                                       | 6/55 [04:32<42:35, 52.16s/it] 13%|█████▌                                      | 7/55 [04:56<34:15, 42.83s/it] 15%|██████▍                                     | 8/55 [05:29<31:11, 39.83s/it] 16%|███████▏                                    | 9/55 [06:00<28:30, 37.18s/it] 18%|███████▊                                   | 10/55 [06:43<29:06, 38.81s/it] 20%|████████▌                                  | 11/55 [07:14<26:50, 36.59s/it] 22%|█████████▍                                 | 12/55 [07:47<25:27, 35.52s/it] 24%|██████████▏                                | 13/55 [09:04<33:29, 47.84s/it] 25%|██████████▉                                | 14/55 [10:01<34:43, 50.82s/it] 27%|███████████▋                               | 15/55 [11:08<37:06, 55.67s/it] 29%|████████████▌                              | 16/55 [11:31<29:49, 45.89s/it] 31%|█████████████▎                             | 17/55 [12:51<35:30, 56.07s/it] 33%|██████████████                             | 18/55 [13:16<28:50, 46.77s/it] 35%|██████████████▊                            | 19/55 [13:52<26:09, 43.58s/it] 36%|███████████████▋                           | 20/55 [14:34<25:08, 43.09s/it] 38%|████████████████▍                          | 21/55 [15:05<22:15, 39.29s/it] 40%|█████████████████▏                         | 22/55 [16:52<32:47, 59.63s/it] 42%|█████████████████▉                         | 23/55 [17:39<29:45, 55.81s/it] 44%|██████████████████▊                        | 24/55 [18:48<30:55, 59.86s/it] 45%|███████████████████▌                       | 25/55 [19:10<24:16, 48.54s/it] 47%|████████████████████▎                      | 26/55 [19:40<20:47, 43.02s/it] 49%|█████████████████████                      | 27/55 [20:00<16:48, 36.01s/it] 51%|█████████████████████▉                     | 28/55 [20:10<12:45, 28.35s/it] 53%|██████████████████████▋                    | 29/55 [20:23<10:15, 23.69s/it] 55%|███████████████████████▍                   | 30/55 [20:36<08:31, 20.46s/it] 56%|████████████████████████▏                  | 31/55 [20:49<07:14, 18.08s/it] 58%|█████████████████████████                  | 32/55 [21:00<06:11, 16.16s/it] 60%|█████████████████████████▊                 | 33/55 [21:12<05:26, 14.82s/it] 62%|██████████████████████████▌                | 34/55 [21:22<04:37, 13.23s/it] 64%|███████████████████████████▎               | 35/55 [21:30<03:54, 11.74s/it] 65%|████████████████████████████▏              | 36/55 [21:37<03:16, 10.33s/it] 67%|████████████████████████████▉              | 37/55 [21:46<03:01, 10.06s/it] 69%|█████████████████████████████▋             | 38/55 [22:00<03:08, 11.07s/it] 71%|██████████████████████████████▍            | 39/55 [22:10<02:52, 10.79s/it] 73%|███████████████████████████████▎           | 40/55 [22:21<02:45, 11.03s/it] 75%|████████████████████████████████           | 41/55 [22:32<02:32, 10.89s/it] 76%|████████████████████████████████▊          | 42/55 [22:40<02:10, 10.04s/it] 78%|█████████████████████████████████▌         | 43/55 [22:47<01:48,  9.08s/it] 80%|██████████████████████████████████▍        | 44/55 [22:54<01:32,  8.42s/it] 82%|███████████████████████████████████▏       | 45/55 [23:01<01:21,  8.12s/it] 84%|███████████████████████████████████▉       | 46/55 [23:11<01:18,  8.75s/it] 85%|████████████████████████████████████▋      | 47/55 [23:23<01:17,  9.69s/it] 87%|█████████████████████████████████████▌     | 48/55 [23:32<01:06,  9.46s/it] 89%|██████████████████████████████████████▎    | 49/55 [23:45<01:02, 10.38s/it] 91%|███████████████████████████████████████    | 50/55 [23:56<00:53, 10.60s/it] 93%|███████████████████████████████████████▊   | 51/55 [24:09<00:44, 11.21s/it] 95%|████████████████████████████████████████▋  | 52/55 [24:17<00:30, 10.25s/it] 96%|█████████████████████████████████████████▍ | 53/55 [24:27<00:20, 10.27s/it] 98%|██████████████████████████████████████████▏| 54/55 [24:35<00:09,  9.72s/it]100%|███████████████████████████████████████████| 55/55 [25:35<00:00, 24.71s/it]100%|███████████████████████████████████████████| 55/55 [25:35<00:00, 27.92s/it]
n of data transformed:  55
Processing analysis pass: raw_weights_first_layer
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', {}, <function raw_weights_first_layer at 0x7ff7d650fd30>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:21<19:19, 21.48s/it]  4%|█▌                                          | 2/55 [00:54<25:10, 28.51s/it]  5%|██▍                                         | 3/55 [01:20<23:24, 27.01s/it]  7%|███▏                                        | 4/55 [02:18<33:23, 39.29s/it]  9%|████                                        | 5/55 [03:26<41:25, 49.72s/it] 11%|████▊                                       | 6/55 [04:18<41:15, 50.52s/it] 13%|█████▌                                      | 7/55 [04:42<33:34, 41.96s/it] 15%|██████▍                                     | 8/55 [05:08<28:45, 36.71s/it] 16%|███████▏                                    | 9/55 [05:34<25:34, 33.35s/it] 18%|███████▊                                   | 10/55 [06:08<25:08, 33.52s/it] 20%|████████▌                                  | 11/55 [06:40<24:21, 33.22s/it] 22%|█████████▍                                 | 12/55 [07:19<25:00, 34.89s/it] 24%|██████████▏                                | 13/55 [08:18<29:33, 42.22s/it] 25%|██████████▉                                | 14/55 [09:14<31:40, 46.35s/it] 27%|███████████▋                               | 15/55 [10:18<34:22, 51.57s/it] 29%|████████████▌                              | 16/55 [10:46<28:54, 44.48s/it] 31%|█████████████▎                             | 17/55 [11:21<26:22, 41.64s/it] 33%|██████████████                             | 18/55 [11:39<21:22, 34.66s/it] 35%|██████████████▊                            | 19/55 [12:25<22:45, 37.92s/it] 36%|███████████████▋                           | 20/55 [13:04<22:26, 38.48s/it] 38%|████████████████▍                          | 21/55 [13:54<23:40, 41.77s/it] 40%|█████████████████▏                         | 22/55 [14:55<26:09, 47.57s/it] 42%|█████████████████▉                         | 23/55 [16:14<30:25, 57.04s/it] 44%|██████████████████▊                        | 24/55 [17:16<30:17, 58.62s/it] 45%|███████████████████▌                       | 25/55 [17:41<24:10, 48.35s/it] 47%|████████████████████▎                      | 26/55 [18:10<20:35, 42.62s/it] 49%|█████████████████████                      | 27/55 [18:48<19:11, 41.13s/it] 51%|█████████████████████▉                     | 28/55 [18:58<14:20, 31.87s/it] 53%|██████████████████████▋                    | 29/55 [19:11<11:23, 26.27s/it] 55%|███████████████████████▍                   | 30/55 [19:23<09:07, 21.92s/it] 56%|████████████████████████▏                  | 31/55 [19:36<07:40, 19.20s/it] 58%|█████████████████████████                  | 32/55 [19:49<06:38, 17.32s/it] 60%|█████████████████████████▊                 | 33/55 [20:03<06:03, 16.51s/it] 62%|██████████████████████████▌                | 34/55 [20:11<04:52, 13.91s/it] 64%|███████████████████████████▎               | 35/55 [20:17<03:49, 11.45s/it] 65%|████████████████████████████▏              | 36/55 [20:23<03:05,  9.78s/it] 67%|████████████████████████████▉              | 37/55 [20:33<02:56,  9.83s/it] 69%|█████████████████████████████▋             | 38/55 [20:41<02:40,  9.44s/it] 71%|██████████████████████████████▍            | 39/55 [20:50<02:28,  9.26s/it] 73%|███████████████████████████████▎           | 40/55 [21:02<02:30, 10.02s/it] 75%|████████████████████████████████           | 41/55 [21:12<02:19,  9.96s/it] 76%|████████████████████████████████▊          | 42/55 [21:27<02:31, 11.64s/it] 78%|█████████████████████████████████▌         | 43/55 [21:36<02:08, 10.67s/it] 80%|██████████████████████████████████▍        | 44/55 [21:43<01:47,  9.75s/it] 82%|███████████████████████████████████▏       | 45/55 [21:51<01:31,  9.19s/it] 84%|███████████████████████████████████▉       | 46/55 [22:01<01:23,  9.29s/it] 85%|████████████████████████████████████▋      | 47/55 [22:11<01:15,  9.49s/it] 87%|█████████████████████████████████████▌     | 48/55 [22:22<01:10, 10.00s/it] 89%|██████████████████████████████████████▎    | 49/55 [22:36<01:08, 11.41s/it] 91%|███████████████████████████████████████    | 50/55 [22:48<00:57, 11.57s/it] 93%|███████████████████████████████████████▊   | 51/55 [23:02<00:48, 12.15s/it] 95%|████████████████████████████████████████▋  | 52/55 [23:09<00:31, 10.66s/it] 96%|█████████████████████████████████████████▍ | 53/55 [23:17<00:19,  9.98s/it] 98%|██████████████████████████████████████████▏| 54/55 [23:25<00:09,  9.22s/it]100%|███████████████████████████████████████████| 55/55 [24:39<00:00, 28.55s/it]100%|███████████████████████████████████████████| 55/55 [24:39<00:00, 26.89s/it]
n of data transformed:  55
Processing analysis pass: raw_weights_last_layer_sym
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_last_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:10<09:49, 10.92s/it]  4%|█▌                                          | 2/55 [00:20<08:53, 10.07s/it]  5%|██▍                                         | 3/55 [00:26<07:16,  8.39s/it]  7%|███▏                                        | 4/55 [00:48<11:29, 13.51s/it]  9%|████                                        | 5/55 [01:06<12:38, 15.16s/it] 11%|████▊                                       | 6/55 [01:19<11:49, 14.49s/it] 13%|█████▌                                      | 7/55 [01:28<10:03, 12.58s/it] 15%|██████▍                                     | 8/55 [01:37<09:05, 11.61s/it] 16%|███████▏                                    | 9/55 [01:43<07:24,  9.67s/it] 18%|███████▊                                   | 10/55 [01:54<07:39, 10.21s/it] 20%|████████▌                                  | 11/55 [02:05<07:39, 10.44s/it] 22%|█████████▍                                 | 12/55 [02:15<07:25, 10.37s/it] 24%|██████████▏                                | 13/55 [02:26<07:27, 10.67s/it] 25%|██████████▉                                | 14/55 [02:45<08:50, 12.94s/it] 27%|███████████▋                               | 15/55 [04:03<21:46, 32.65s/it] 29%|████████████▌                              | 16/55 [04:12<16:31, 25.42s/it] 31%|█████████████▎                             | 17/55 [04:24<13:34, 21.42s/it] 33%|██████████████                             | 18/55 [04:30<10:19, 16.75s/it] 35%|██████████████▊                            | 19/55 [04:45<09:45, 16.26s/it] 36%|███████████████▋                           | 20/55 [04:51<07:47, 13.36s/it] 38%|████████████████▍                          | 21/55 [05:05<07:34, 13.36s/it] 40%|█████████████████▏                         | 22/55 [05:23<08:14, 14.97s/it] 42%|█████████████████▉                         | 23/55 [05:38<07:53, 14.80s/it] 44%|██████████████████▊                        | 24/55 [06:02<09:06, 17.63s/it] 45%|███████████████████▌                       | 25/55 [06:07<06:55, 13.86s/it] 47%|████████████████████▎                      | 26/55 [06:23<06:57, 14.38s/it] 49%|█████████████████████                      | 27/55 [06:29<05:31, 11.82s/it] 51%|█████████████████████▉                     | 28/55 [06:31<04:05,  9.08s/it] 53%|██████████████████████▋                    | 29/55 [06:35<03:18,  7.62s/it] 55%|███████████████████████▍                   | 30/55 [06:38<02:30,  6.01s/it] 56%|████████████████████████▏                  | 31/55 [06:41<02:05,  5.24s/it] 58%|█████████████████████████                  | 32/55 [06:44<01:40,  4.39s/it] 60%|█████████████████████████▊                 | 33/55 [06:49<01:40,  4.56s/it] 62%|██████████████████████████▌                | 34/55 [06:51<01:23,  3.97s/it] 64%|███████████████████████████▎               | 35/55 [06:53<01:06,  3.30s/it] 65%|████████████████████████████▏              | 36/55 [06:56<00:59,  3.12s/it] 67%|████████████████████████████▉              | 37/55 [06:58<00:52,  2.91s/it] 69%|█████████████████████████████▋             | 38/55 [07:01<00:50,  2.99s/it] 71%|██████████████████████████████▍            | 39/55 [07:04<00:47,  2.99s/it] 73%|███████████████████████████████▎           | 40/55 [07:07<00:45,  3.03s/it] 75%|████████████████████████████████           | 41/55 [07:11<00:46,  3.30s/it] 76%|████████████████████████████████▊          | 42/55 [07:13<00:37,  2.90s/it] 78%|█████████████████████████████████▌         | 43/55 [07:15<00:31,  2.59s/it] 80%|██████████████████████████████████▍        | 44/55 [07:17<00:25,  2.30s/it] 82%|███████████████████████████████████▏       | 45/55 [07:19<00:22,  2.23s/it] 84%|███████████████████████████████████▉       | 46/55 [07:21<00:20,  2.28s/it] 85%|████████████████████████████████████▋      | 47/55 [07:23<00:17,  2.25s/it] 87%|█████████████████████████████████████▌     | 48/55 [07:26<00:16,  2.32s/it] 89%|██████████████████████████████████████▎    | 49/55 [07:29<00:15,  2.63s/it] 91%|███████████████████████████████████████    | 50/55 [07:32<00:14,  2.83s/it] 93%|███████████████████████████████████████▊   | 51/55 [07:35<00:11,  2.80s/it] 95%|████████████████████████████████████████▋  | 52/55 [07:37<00:07,  2.56s/it] 96%|█████████████████████████████████████████▍ | 53/55 [07:40<00:05,  2.54s/it] 98%|██████████████████████████████████████████▏| 54/55 [07:41<00:02,  2.29s/it]100%|███████████████████████████████████████████| 55/55 [07:58<00:00,  6.73s/it]100%|███████████████████████████████████████████| 55/55 [07:58<00:00,  8.71s/it]
n of data transformed:  55
Processing analysis pass: raw_weights_first_layer_sym
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/raw_weights_first_layer_sym', {}, <function make_symmetric at 0x7ff7d649b670>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:06<05:38,  6.27s/it]  4%|█▌                                          | 2/55 [00:17<08:04,  9.14s/it]  5%|██▍                                         | 3/55 [00:28<08:46, 10.12s/it]  7%|███▏                                        | 4/55 [00:38<08:25,  9.92s/it]  9%|████                                        | 5/55 [01:01<12:16, 14.73s/it] 11%|████▊                                       | 6/55 [01:22<13:43, 16.80s/it] 13%|█████▌                                      | 7/55 [01:28<10:38, 13.30s/it] 15%|██████▍                                     | 8/55 [01:37<09:27, 12.07s/it] 16%|███████▏                                    | 9/55 [01:48<08:47, 11.47s/it] 18%|███████▊                                   | 10/55 [01:58<08:19, 11.11s/it] 20%|████████▌                                  | 11/55 [02:09<08:12, 11.20s/it] 22%|█████████▍                                 | 12/55 [02:22<08:27, 11.80s/it] 24%|██████████▏                                | 13/55 [02:41<09:41, 13.84s/it] 25%|██████████▉                                | 14/55 [03:09<12:17, 17.98s/it] 27%|███████████▋                               | 15/55 [03:29<12:30, 18.75s/it] 29%|████████████▌                              | 16/55 [03:37<10:04, 15.51s/it] 31%|█████████████▎                             | 17/55 [03:48<09:00, 14.23s/it] 33%|██████████████                             | 18/55 [03:54<07:08, 11.59s/it] 35%|██████████████▊                            | 19/55 [04:04<06:40, 11.12s/it] 36%|███████████████▋                           | 20/55 [04:19<07:16, 12.46s/it] 38%|████████████████▍                          | 21/55 [04:31<06:55, 12.22s/it] 40%|█████████████████▏                         | 22/55 [04:42<06:33, 11.93s/it] 42%|█████████████████▉                         | 23/55 [04:53<06:09, 11.53s/it] 44%|██████████████████▊                        | 24/55 [05:09<06:40, 12.91s/it] 45%|███████████████████▌                       | 25/55 [05:15<05:28, 10.96s/it] 47%|████████████████████▎                      | 26/55 [05:25<05:05, 10.55s/it] 49%|█████████████████████                      | 27/55 [05:33<04:36,  9.89s/it] 51%|█████████████████████▉                     | 28/55 [05:36<03:25,  7.61s/it] 53%|██████████████████████▋                    | 29/55 [05:38<02:35,  5.99s/it] 55%|███████████████████████▍                   | 30/55 [05:40<02:01,  4.87s/it] 56%|████████████████████████▏                  | 31/55 [05:43<01:42,  4.27s/it] 58%|█████████████████████████                  | 32/55 [05:48<01:42,  4.47s/it] 60%|█████████████████████████▊                 | 33/55 [05:52<01:37,  4.42s/it] 62%|██████████████████████████▌                | 34/55 [05:54<01:15,  3.61s/it] 64%|███████████████████████████▎               | 35/55 [05:56<01:03,  3.15s/it] 65%|████████████████████████████▏              | 36/55 [05:58<00:51,  2.72s/it] 67%|████████████████████████████▉              | 37/55 [06:01<00:52,  2.94s/it] 69%|█████████████████████████████▋             | 38/55 [06:04<00:47,  2.82s/it] 71%|██████████████████████████████▍            | 39/55 [06:08<00:52,  3.25s/it] 73%|███████████████████████████████▎           | 40/55 [06:12<00:50,  3.38s/it] 75%|████████████████████████████████           | 41/55 [06:14<00:42,  3.07s/it] 76%|████████████████████████████████▊          | 42/55 [06:17<00:38,  2.97s/it] 78%|█████████████████████████████████▌         | 43/55 [06:18<00:31,  2.60s/it] 80%|██████████████████████████████████▍        | 44/55 [06:22<00:31,  2.88s/it] 82%|███████████████████████████████████▏       | 45/55 [06:24<00:27,  2.74s/it] 84%|███████████████████████████████████▉       | 46/55 [06:27<00:23,  2.56s/it] 85%|████████████████████████████████████▋      | 47/55 [06:29<00:21,  2.63s/it] 87%|█████████████████████████████████████▌     | 48/55 [06:31<00:17,  2.44s/it] 89%|██████████████████████████████████████▎    | 49/55 [06:35<00:17,  2.91s/it] 91%|███████████████████████████████████████    | 50/55 [06:38<00:14,  2.89s/it] 93%|███████████████████████████████████████▊   | 51/55 [06:43<00:13,  3.35s/it] 95%|████████████████████████████████████████▋  | 52/55 [06:45<00:09,  3.07s/it] 96%|█████████████████████████████████████████▍ | 53/55 [06:47<00:05,  2.69s/it] 98%|██████████████████████████████████████████▏| 54/55 [06:49<00:02,  2.45s/it]100%|███████████████████████████████████████████| 55/55 [07:09<00:00,  7.82s/it]100%|███████████████████████████████████████████| 55/55 [07:09<00:00,  7.81s/it]
n of data transformed:  55
Processing analysis pass: att_roll_layer_matrix
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', {}, <function compute_attention_rollout_from_tensor at 0x7ff7d650fb80>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                         | 1/55 [01:39<1:29:53, 99.88s/it]  4%|█▍                                       | 2/55 [03:22<1:29:30, 101.33s/it]  5%|██▎                                       | 3/55 [04:50<1:22:36, 95.32s/it]  7%|██▉                                      | 4/55 [07:35<1:44:33, 123.02s/it]  9%|███▋                                     | 5/55 [10:28<1:57:23, 140.87s/it] 11%|████▍                                    | 6/55 [13:17<2:03:00, 150.61s/it] 13%|█████▏                                   | 7/55 [14:28<1:39:37, 124.53s/it] 15%|█████▉                                   | 8/55 [15:53<1:27:34, 111.79s/it] 16%|██████▋                                  | 9/55 [17:16<1:18:48, 102.79s/it] 18%|███████▎                                | 10/55 [18:51<1:15:19, 100.44s/it] 20%|████████                                | 11/55 [21:04<1:21:03, 110.54s/it] 22%|████████▋                               | 12/55 [23:13<1:23:03, 115.91s/it] 24%|█████████▍                              | 13/55 [26:23<1:37:00, 138.57s/it] 25%|██████████▏                             | 14/55 [29:20<1:42:32, 150.07s/it] 27%|██████████▉                             | 15/55 [32:12<1:44:28, 156.70s/it] 29%|███████████▋                            | 16/55 [33:23<1:25:08, 130.98s/it] 31%|████████████▎                           | 17/55 [35:10<1:18:21, 123.74s/it] 33%|█████████████                           | 18/55 [37:26<1:18:34, 127.42s/it] 35%|█████████████▊                          | 19/55 [41:09<1:33:43, 156.21s/it] 36%|██████████████▌                         | 20/55 [44:19<1:36:54, 166.13s/it] 38%|███████████████▎                        | 21/55 [47:50<1:41:52, 179.79s/it] 40%|████████████████                        | 22/55 [52:18<1:53:23, 206.18s/it] 42%|████████████████▋                       | 23/55 [56:45<1:59:42, 224.45s/it] 44%|████████████████▌                     | 24/55 [1:01:08<2:01:57, 236.06s/it] 45%|█████████████████▎                    | 25/55 [1:03:00<1:39:24, 198.83s/it] 47%|█████████████████▉                    | 26/55 [1:06:34<1:38:12, 203.20s/it] 49%|██████████████████▋                   | 27/55 [1:08:58<1:26:39, 185.68s/it] 51%|███████████████████▎                  | 28/55 [1:15:14<1:49:10, 242.60s/it] 53%|████████████████████                  | 29/55 [1:18:59<1:42:49, 237.29s/it] 55%|████████████████████▋                 | 30/55 [1:24:29<1:50:27, 265.11s/it] 56%|█████████████████████▍                | 31/55 [1:30:26<1:57:03, 292.64s/it] 58%|██████████████████████                | 32/55 [1:36:06<1:57:37, 306.86s/it] 60%|██████████████████████▊               | 33/55 [1:40:17<1:46:26, 290.30s/it] 62%|███████████████████████▍              | 34/55 [1:42:23<1:24:18, 240.89s/it] 64%|████████████████████████▏             | 35/55 [1:43:15<1:01:26, 184.31s/it] 65%|██████████████████████████▏             | 36/55 [1:44:06<45:40, 144.26s/it] 67%|██████████████████████████▉             | 37/55 [1:45:54<40:01, 133.42s/it] 69%|███████████████████████████▋            | 38/55 [1:47:47<36:02, 127.20s/it] 71%|████████████████████████████▎           | 39/55 [1:49:55<34:01, 127.58s/it] 73%|█████████████████████████████           | 40/55 [1:52:56<35:51, 143.40s/it] 75%|█████████████████████████████▊          | 41/55 [1:56:29<38:23, 164.53s/it] 76%|██████████████████████████████▌         | 42/55 [1:57:45<29:53, 137.99s/it] 78%|███████████████████████████████▎        | 43/55 [1:58:34<22:14, 111.20s/it] 80%|████████████████████████████████▊        | 44/55 [1:59:22<16:54, 92.19s/it] 82%|█████████████████████████████████▌       | 45/55 [2:00:46<14:58, 89.81s/it] 84%|██████████████████████████████████▎      | 46/55 [2:01:40<11:49, 78.86s/it] 85%|██████████████████████████████████▏     | 47/55 [2:05:00<15:23, 115.44s/it] 87%|██████████████████████████████████▉     | 48/55 [2:06:34<12:41, 108.77s/it] 89%|███████████████████████████████████▋    | 49/55 [2:11:27<16:24, 164.08s/it] 91%|████████████████████████████████████▎   | 50/55 [2:18:01<19:26, 233.26s/it] 93%|█████████████████████████████████████   | 51/55 [2:22:50<16:39, 250.00s/it] 95%|█████████████████████████████████████▊  | 52/55 [2:23:26<09:16, 185.54s/it] 96%|██████████████████████████████████████▌ | 53/55 [2:25:23<05:30, 165.23s/it] 98%|███████████████████████████████████████▎| 54/55 [2:28:10<02:45, 165.59s/it]100%|████████████████████████████████████████| 55/55 [2:32:10<00:00, 187.98s/it]100%|████████████████████████████████████████| 55/55 [2:32:10<00:00, 166.01s/it]
n of data transformed:  55
Processing analysis pass: rollout_condensed_all
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_roll_layer_matrix', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/rollout_condensed_all', {}, <function sum_over_1st_dimension at 0x7ff7d650fc10>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:18<17:01, 18.91s/it]  4%|█▌                                          | 2/55 [00:33<14:29, 16.40s/it]  5%|██▍                                         | 3/55 [00:55<16:17, 18.80s/it]  7%|███▏                                        | 4/55 [01:42<25:31, 30.02s/it]  9%|████                                        | 5/55 [02:50<36:22, 43.66s/it] 11%|████▊                                       | 6/55 [04:23<49:19, 60.39s/it] 13%|█████▌                                      | 7/55 [04:49<39:24, 49.26s/it] 15%|██████▍                                     | 8/55 [05:21<34:13, 43.68s/it] 16%|███████▏                                    | 9/55 [05:49<29:54, 39.02s/it] 18%|███████▊                                   | 10/55 [06:32<30:01, 40.04s/it] 20%|████████▌                                  | 11/55 [07:10<28:59, 39.54s/it] 22%|█████████▍                                 | 12/55 [07:57<29:58, 41.84s/it] 24%|██████████▏                                | 13/55 [09:11<35:58, 51.40s/it] 25%|██████████▉                                | 14/55 [10:42<43:17, 63.36s/it] 27%|███████████▋                               | 15/55 [11:55<44:16, 66.42s/it] 29%|████████████▌                              | 16/55 [12:27<36:28, 56.11s/it] 31%|█████████████▎                             | 17/55 [12:59<30:52, 48.75s/it] 33%|██████████████                             | 18/55 [13:35<27:45, 45.00s/it] 35%|██████████████▊                            | 19/55 [14:23<27:24, 45.69s/it] 36%|███████████████▋                           | 20/55 [15:02<25:31, 43.75s/it] 38%|████████████████▍                          | 21/55 [15:45<24:44, 43.67s/it] 40%|█████████████████▏                         | 22/55 [16:47<27:04, 49.22s/it] 42%|█████████████████▉                         | 23/55 [18:00<30:01, 56.29s/it] 44%|██████████████████▊                        | 24/55 [18:51<28:10, 54.55s/it] 45%|███████████████████▌                       | 25/55 [19:17<22:59, 45.99s/it] 47%|████████████████████▎                      | 26/55 [19:34<18:01, 37.30s/it] 49%|█████████████████████                      | 27/55 [19:55<15:12, 32.60s/it] 51%|█████████████████████▉                     | 28/55 [20:06<11:43, 26.04s/it] 53%|██████████████████████▋                    | 29/55 [20:14<08:56, 20.65s/it] 55%|███████████████████████▍                   | 30/55 [20:23<07:08, 17.14s/it] 56%|████████████████████████▏                  | 31/55 [20:36<06:20, 15.86s/it] 58%|█████████████████████████                  | 32/55 [20:47<05:32, 14.47s/it] 60%|█████████████████████████▊                 | 33/55 [20:56<04:38, 12.67s/it] 62%|██████████████████████████▌                | 34/55 [21:03<03:52, 11.06s/it] 64%|███████████████████████████▎               | 35/55 [21:08<03:05,  9.29s/it] 65%|████████████████████████████▏              | 36/55 [21:17<02:52,  9.06s/it] 67%|████████████████████████████▉              | 37/55 [21:25<02:41,  8.95s/it] 69%|█████████████████████████████▋             | 38/55 [21:33<02:25,  8.53s/it] 71%|██████████████████████████████▍            | 39/55 [21:44<02:27,  9.24s/it] 73%|███████████████████████████████▎           | 40/55 [21:55<02:28,  9.93s/it] 75%|████████████████████████████████           | 41/55 [22:05<02:18,  9.86s/it] 76%|████████████████████████████████▊          | 42/55 [22:16<02:12, 10.19s/it] 78%|█████████████████████████████████▌         | 43/55 [22:21<01:41,  8.46s/it] 80%|██████████████████████████████████▍        | 44/55 [22:26<01:24,  7.69s/it] 82%|███████████████████████████████████▏       | 45/55 [22:31<01:07,  6.72s/it] 84%|███████████████████████████████████▉       | 46/55 [22:38<01:02,  6.90s/it] 85%|████████████████████████████████████▋      | 47/55 [22:48<01:01,  7.70s/it] 87%|█████████████████████████████████████▌     | 48/55 [22:55<00:52,  7.46s/it] 89%|██████████████████████████████████████▎    | 49/55 [23:05<00:50,  8.40s/it] 91%|███████████████████████████████████████    | 50/55 [23:15<00:43,  8.75s/it] 93%|███████████████████████████████████████▊   | 51/55 [23:24<00:35,  8.83s/it] 95%|████████████████████████████████████████▋  | 52/55 [23:31<00:25,  8.44s/it] 96%|█████████████████████████████████████████▍ | 53/55 [23:37<00:15,  7.73s/it] 98%|██████████████████████████████████████████▏| 54/55 [23:43<00:07,  7.14s/it]100%|███████████████████████████████████████████| 55/55 [24:44<00:00, 23.13s/it]100%|███████████████████████████████████████████| 55/55 [24:44<00:00, 26.98s/it]
n of data transformed:  55
Processing analysis pass: att_uniform_matrix
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.npy', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/att_tensor', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_uniform_matrix', {}, <function generate_uniform_attention at 0x7ff7d649b700>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:41<37:05, 41.21s/it]  4%|█▌                                          | 2/55 [01:20<35:38, 40.35s/it]  5%|██▍                                         | 3/55 [01:54<32:05, 37.02s/it]  7%|███▏                                        | 4/55 [03:34<52:46, 62.08s/it]  9%|███▊                                      | 5/55 [05:22<1:05:28, 78.56s/it] 11%|████▌                                     | 6/55 [07:00<1:09:29, 85.10s/it] 13%|█████▌                                      | 7/55 [07:39<56:03, 70.07s/it] 15%|██████▍                                     | 8/55 [08:19<47:28, 60.61s/it] 16%|███████▏                                    | 9/55 [08:57<40:56, 53.39s/it] 18%|███████▊                                   | 10/55 [09:41<37:55, 50.57s/it] 20%|████████▌                                  | 11/55 [11:43<53:03, 72.35s/it] 22%|█████████▍                                 | 12/55 [12:26<45:30, 63.49s/it] 24%|██████████▏                                | 13/55 [14:20<55:17, 78.99s/it] 25%|██████████▉                                | 14/55 [15:45<55:03, 80.57s/it] 27%|███████████▋                               | 15/55 [17:09<54:26, 81.67s/it] 29%|████████████▌                              | 16/55 [17:51<45:17, 69.67s/it] 31%|█████████████▎                             | 17/55 [18:38<39:53, 63.00s/it] 33%|██████████████                             | 18/55 [19:14<33:52, 54.93s/it] 35%|██████████████▊                            | 19/55 [20:27<36:08, 60.23s/it] 36%|███████████████▋                           | 20/55 [21:27<35:02, 60.08s/it] 38%|████████████████▍                          | 21/55 [22:35<35:24, 62.49s/it] 40%|█████████████████▏                         | 22/55 [24:31<43:13, 78.58s/it] 42%|█████████████████▉                         | 23/55 [26:31<48:36, 91.13s/it] 44%|██████████████████▊                        | 24/55 [28:19<49:42, 96.21s/it] 45%|███████████████████▌                       | 25/55 [29:07<40:50, 81.68s/it] 47%|████████████████████▎                      | 26/55 [29:50<33:52, 70.07s/it] 49%|█████████████████████                      | 27/55 [30:17<26:40, 57.17s/it] 51%|█████████████████████▉                     | 28/55 [30:36<20:33, 45.69s/it] 53%|██████████████████████▋                    | 29/55 [30:52<15:59, 36.89s/it] 55%|███████████████████████▍                   | 30/55 [31:04<12:13, 29.32s/it] 56%|████████████████████████▏                  | 31/55 [31:17<09:43, 24.32s/it] 58%|█████████████████████████                  | 32/55 [31:33<08:25, 22.00s/it] 60%|█████████████████████████▊                 | 33/55 [31:50<07:31, 20.50s/it] 62%|██████████████████████████▌                | 34/55 [32:04<06:26, 18.43s/it] 64%|███████████████████████████▎               | 35/55 [32:17<05:35, 16.79s/it] 65%|████████████████████████████▏              | 36/55 [32:26<04:35, 14.48s/it] 67%|████████████████████████████▉              | 37/55 [32:42<04:28, 14.91s/it] 69%|█████████████████████████████▋             | 38/55 [32:56<04:09, 14.68s/it] 71%|██████████████████████████████▍            | 39/55 [33:20<04:39, 17.47s/it] 73%|███████████████████████████████▎           | 40/55 [33:36<04:15, 17.01s/it] 75%|████████████████████████████████           | 41/55 [33:55<04:08, 17.77s/it] 76%|████████████████████████████████▊          | 42/55 [34:12<03:46, 17.46s/it] 78%|█████████████████████████████████▌         | 43/55 [34:21<02:58, 14.88s/it] 80%|██████████████████████████████████▍        | 44/55 [34:30<02:25, 13.21s/it] 82%|███████████████████████████████████▏       | 45/55 [34:39<01:59, 11.98s/it] 84%|███████████████████████████████████▉       | 46/55 [34:52<01:49, 12.12s/it] 85%|████████████████████████████████████▋      | 47/55 [35:08<01:45, 13.19s/it] 87%|█████████████████████████████████████▌     | 48/55 [35:20<01:30, 12.96s/it] 89%|██████████████████████████████████████▎    | 49/55 [35:36<01:23, 13.91s/it] 91%|███████████████████████████████████████    | 50/55 [35:54<01:15, 15.12s/it] 93%|███████████████████████████████████████▊   | 51/55 [36:11<01:02, 15.67s/it] 95%|████████████████████████████████████████▋  | 52/55 [36:20<00:40, 13.54s/it] 96%|█████████████████████████████████████████▍ | 53/55 [36:30<00:25, 12.59s/it] 98%|██████████████████████████████████████████▏| 54/55 [36:40<00:11, 11.96s/it]100%|███████████████████████████████████████████| 55/55 [38:45<00:00, 45.61s/it]100%|███████████████████████████████████████████| 55/55 [38:45<00:00, 42.28s/it]
n of data transformed:  55
Processing analysis pass: att_copy_cat_matrix
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_copy_cat_matrix', {}, <function generate_copy_cat_attention at 0x7ff7d649b8b0>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:28<25:39, 28.50s/it]  4%|█▌                                          | 2/55 [01:05<29:23, 33.27s/it]  5%|██▍                                         | 3/55 [01:37<28:23, 32.77s/it]  7%|███▏                                        | 4/55 [02:29<34:19, 40.39s/it]  9%|████                                        | 5/55 [03:33<40:46, 48.93s/it] 11%|████▊                                       | 6/55 [04:10<36:41, 44.93s/it] 13%|█████▌                                      | 7/55 [04:19<26:38, 33.30s/it] 15%|██████▍                                     | 8/55 [04:23<18:44, 23.93s/it] 16%|███████▏                                    | 9/55 [04:26<13:19, 17.37s/it] 18%|███████▊                                   | 10/55 [04:54<15:18, 20.42s/it] 20%|████████▌                                  | 11/55 [05:14<15:01, 20.48s/it] 22%|█████████▍                                 | 12/55 [05:17<10:47, 15.05s/it] 24%|██████████▏                                | 13/55 [05:36<11:26, 16.34s/it] 25%|██████████▉                                | 14/55 [06:21<17:04, 25.00s/it] 27%|███████████▋                               | 15/55 [07:03<20:06, 30.15s/it] 29%|████████████▌                              | 16/55 [07:11<15:15, 23.47s/it] 31%|█████████████▎                             | 17/55 [07:18<11:45, 18.56s/it] 33%|██████████████                             | 18/55 [07:37<11:30, 18.66s/it] 35%|██████████████▊                            | 19/55 [07:54<10:52, 18.12s/it] 36%|███████████████▋                           | 20/55 [08:00<08:30, 14.58s/it] 38%|████████████████▍                          | 21/55 [08:12<07:46, 13.72s/it] 40%|█████████████████▏                         | 22/55 [08:53<11:58, 21.76s/it] 42%|█████████████████▉                         | 23/55 [09:30<14:06, 26.44s/it] 44%|██████████████████▊                        | 24/55 [09:40<11:06, 21.51s/it] 45%|███████████████████▌                       | 25/55 [09:48<08:47, 17.58s/it] 47%|████████████████████▎                      | 26/55 [10:03<08:05, 16.73s/it] 49%|█████████████████████                      | 27/55 [10:16<07:20, 15.72s/it] 51%|█████████████████████▉                     | 28/55 [10:20<05:27, 12.14s/it] 53%|██████████████████████▋                    | 29/55 [10:23<04:01,  9.27s/it] 55%|███████████████████████▍                   | 30/55 [10:26<03:09,  7.56s/it] 56%|████████████████████████▏                  | 31/55 [10:28<02:22,  5.92s/it] 58%|█████████████████████████                  | 32/55 [10:31<01:51,  4.85s/it] 60%|█████████████████████████▊                 | 33/55 [10:34<01:32,  4.23s/it] 62%|██████████████████████████▌                | 34/55 [10:36<01:16,  3.62s/it] 64%|███████████████████████████▎               | 35/55 [10:38<01:05,  3.26s/it] 65%|████████████████████████████▏              | 36/55 [10:40<00:52,  2.78s/it] 67%|████████████████████████████▉              | 37/55 [10:42<00:48,  2.70s/it] 69%|█████████████████████████████▋             | 38/55 [10:45<00:45,  2.66s/it] 71%|██████████████████████████████▍            | 39/55 [10:49<00:47,  2.95s/it] 73%|███████████████████████████████▎           | 40/55 [10:52<00:46,  3.13s/it] 75%|████████████████████████████████           | 41/55 [10:56<00:44,  3.21s/it] 76%|████████████████████████████████▊          | 42/55 [11:00<00:45,  3.51s/it] 78%|█████████████████████████████████▌         | 43/55 [11:01<00:34,  2.88s/it] 80%|██████████████████████████████████▍        | 44/55 [11:03<00:27,  2.48s/it] 82%|███████████████████████████████████▏       | 45/55 [11:05<00:23,  2.33s/it] 84%|███████████████████████████████████▉       | 46/55 [11:09<00:25,  2.82s/it] 85%|████████████████████████████████████▋      | 47/55 [11:16<00:34,  4.30s/it] 87%|█████████████████████████████████████▌     | 48/55 [11:20<00:29,  4.19s/it] 89%|██████████████████████████████████████▎    | 49/55 [11:23<00:22,  3.78s/it] 91%|███████████████████████████████████████    | 50/55 [11:26<00:17,  3.54s/it] 93%|███████████████████████████████████████▊   | 51/55 [11:31<00:15,  4.00s/it] 95%|████████████████████████████████████████▋  | 52/55 [11:34<00:10,  3.50s/it] 96%|█████████████████████████████████████████▍ | 53/55 [11:38<00:07,  3.75s/it] 98%|██████████████████████████████████████████▏| 54/55 [11:41<00:03,  3.46s/it]100%|███████████████████████████████████████████| 55/55 [11:44<00:00,  3.35s/it]100%|███████████████████████████████████████████| 55/55 [11:44<00:00, 12.80s/it]
n of data transformed:  55
Processing analysis pass: att_gaussian_neighbors_1000
Found 55 files to process.
Found 0 files already processed. Skippign them.
Processing 55 files.
Starting to derive attention for 55 files...
Args: [('Nqueens_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q1.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q2.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('Nqueens_Q3.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q1.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q2.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cpp_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cpp_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cs_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cs_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.cs_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.py_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.py_1_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('hannoi_Q3.py_2_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>), ('multithread_Q1.cpp_0_Salesforce_codegen-6B-nl.json', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', 'data/model_output/exp_v10/codegen6Bnl_rebuttal/metadata', './data/model_output/exp_v10/codegen6Bnl_rebuttal/att_gaussian_neighbors_1000', {'sigma': 1000}, <function generate_gaussian_attention_in_neighborhood_from_metadata at 0x7ff7d649b790>)]
  0%|                                                    | 0/55 [00:00<?, ?it/s]  2%|▊                                           | 1/55 [00:11<10:18, 11.45s/it]  4%|█▌                                          | 2/55 [00:28<13:01, 14.75s/it]  5%|██▍                                         | 3/55 [00:50<15:29, 17.88s/it]  7%|███▏                                        | 4/55 [01:20<19:29, 22.92s/it]  9%|████                                        | 5/55 [01:56<22:51, 27.43s/it] 11%|████▊                                       | 6/55 [02:34<25:31, 31.25s/it] 13%|█████▌                                      | 7/55 [02:44<19:25, 24.29s/it] 15%|██████▍                                     | 8/55 [03:01<17:04, 21.79s/it] 16%|███████▏                                    | 9/55 [03:17<15:27, 20.16s/it] 18%|███████▊                                   | 10/55 [03:31<13:43, 18.29s/it] 20%|████████▌                                  | 11/55 [03:58<15:22, 20.97s/it] 22%|█████████▍                                 | 12/55 [04:32<17:39, 24.64s/it] 24%|██████████▏                                | 13/55 [05:08<19:50, 28.35s/it] 25%|██████████▉                                | 14/55 [05:25<16:54, 24.74s/it] 27%|███████████▋                               | 15/55 [06:19<22:23, 33.58s/it] 29%|████████████▌                              | 16/55 [06:32<17:50, 27.45s/it] 31%|█████████████▎                             | 17/55 [06:41<13:52, 21.91s/it] 33%|██████████████                             | 18/55 [07:00<13:02, 21.14s/it] 35%|██████████████▊                            | 19/55 [07:16<11:40, 19.46s/it] 36%|███████████████▋                           | 20/55 [07:39<11:55, 20.44s/it] 38%|████████████████▍                          | 21/55 [08:59<21:45, 38.39s/it] 40%|█████████████████▏                         | 22/55 [10:10<26:30, 48.18s/it] 42%|█████████████████▉                         | 23/55 [10:22<19:54, 37.34s/it] 44%|██████████████████▊                        | 24/55 [10:38<15:56, 30.86s/it] 45%|███████████████████▌                       | 25/55 [10:43<11:32, 23.07s/it] 47%|████████████████████▎                      | 26/55 [10:51<08:56, 18.51s/it] 49%|█████████████████████                      | 27/55 [10:55<06:42, 14.37s/it] 51%|█████████████████████▉                     | 28/55 [10:58<04:51, 10.79s/it] 53%|██████████████████████▋                    | 29/55 [11:01<03:39,  8.43s/it] 55%|███████████████████████▍                   | 30/55 [11:03<02:47,  6.69s/it] 56%|████████████████████████▏                  | 31/55 [11:09<02:34,  6.43s/it] 58%|█████████████████████████                  | 32/55 [11:12<02:01,  5.27s/it] 60%|█████████████████████████▊                 | 33/55 [11:14<01:39,  4.51s/it] 62%|██████████████████████████▌                | 34/55 [11:16<01:18,  3.72s/it] 64%|███████████████████████████▎               | 35/55 [11:18<01:03,  3.16s/it] 65%|████████████████████████████▏              | 36/55 [11:20<00:54,  2.86s/it] 67%|████████████████████████████▉              | 37/55 [11:23<00:51,  2.84s/it] 69%|█████████████████████████████▋             | 38/55 [11:26<00:51,  3.03s/it] 71%|██████████████████████████████▍            | 39/55 [11:29<00:45,  2.87s/it] 73%|███████████████████████████████▎           | 40/55 [11:32<00:42,  2.83s/it] 75%|████████████████████████████████           | 41/55 [11:35<00:40,  2.87s/it] 76%|████████████████████████████████▊          | 42/55 [11:38<00:38,  2.96s/it] 78%|█████████████████████████████████▌         | 43/55 [11:41<00:36,  3.04s/it] 80%|██████████████████████████████████▍        | 44/55 [11:43<00:29,  2.70s/it] 82%|███████████████████████████████████▏       | 45/55 [11:45<00:23,  2.38s/it] 84%|███████████████████████████████████▉       | 46/55 [11:47<00:21,  2.41s/it] 85%|████████████████████████████████████▋      | 47/55 [11:50<00:20,  2.52s/it] 87%|█████████████████████████████████████▌     | 48/55 [11:55<00:23,  3.34s/it] 89%|██████████████████████████████████████▎    | 49/55 [11:59<00:20,  3.46s/it] 91%|███████████████████████████████████████    | 50/55 [12:04<00:19,  3.95s/it] 93%|███████████████████████████████████████▊   | 51/55 [12:07<00:14,  3.57s/it] 95%|████████████████████████████████████████▋  | 52/55 [12:09<00:09,  3.07s/it] 96%|█████████████████████████████████████████▍ | 53/55 [12:11<00:05,  2.82s/it] 98%|██████████████████████████████████████████▏| 54/55 [12:13<00:02,  2.61s/it]100%|███████████████████████████████████████████| 55/55 [12:49<00:00, 12.66s/it]100%|███████████████████████████████████████████| 55/55 [12:49<00:00, 13.99s/it]
n of data transformed:  55
